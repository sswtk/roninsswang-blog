{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"@\u8bb0\u5f55\u662f\u601d\u7ef4\u7684\u7f13\u5b58 \u00b6 I always forget to tell you that how lucky I am to encounter you \u5fd8\u4e86\u544a\u8bc9\u4f60\uff0c\u9047\u89c1\u4f60\u662f\u591a\u4e48\u5e78\u8fd0\u2026\u2026","title":"Home"},{"location":"#_1","text":"I always forget to tell you that how lucky I am to encounter you \u5fd8\u4e86\u544a\u8bc9\u4f60\uff0c\u9047\u89c1\u4f60\u662f\u591a\u4e48\u5e78\u8fd0\u2026\u2026","title":"@\u8bb0\u5f55\u662f\u601d\u7ef4\u7684\u7f13\u5b58"},{"location":"ablout/about/","text":"I always forget to tell you that how lucky I am to encounter you \u6700\u6015\u7684\u662f\uff1a\u5e74\u4e0e\u65f6\u9a70\uff0c\u610f\u4e0e\u65e5\u53bb\uff0c\u53ea\u5269\u4e00\u8eab\u7f81\u7eca\uff0c\u8fd8\u505c\u7559\u5728\u539f\u5730\uff0c\u54ea\u91cc\u4e5f\u6ca1\u53bb\u2026\u2026","title":"About"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/","text":"STEP1: \u524d\u7f6e\u5de5\u4f5c(\u51c6\u5907/\u68c0\u67e5\u73af\u5883) \u00b6 1.\u96c6\u7fa4\u670d\u52a1\u5668\u8981\u6c42\uff1a \u00b6 \u6bcf\u53f0\u673a\u5668 2 GB \u6216\u66f4\u591a\u7684\u5185\u5b58 (\u5982\u679c\u5c11\u4e8e\u8fd9\u4e2a\u6570\u5b57\u5c06\u4f1a\u5f71\u54cd\u60a8\u5e94\u7528\u7684\u8fd0\u884c\u5185\u5b58) 2 CPU \u6216\u66f4\u591a \u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u673a\u5668\u7684\u7f51\u7edc\u4e92\u901a \u53ef\u4ee5\u8bbf\u95ee\u5916\u7f51 \u7981\u6b62 swap \u5206\u533a eg: IP \u4e3b\u673a\u540d \u7cfb\u7edf\u7248\u672c CPU \u5185\u5b58 \u5907\u6ce8 192.168.33.131 master1 centos8.2 2G 2 \u6b64\u914d\u7f6e\u4e3a\u6700\u4f4e\u8981\u6c42 192.168.33.132 node1 centos8.2 2G 2 192.168.33.133 node2 centos8.2 2G 2 2.\u8bbe\u7f6e\u670d\u52a1\u5668\u9759\u6001IP/DNS/hosts\u4e3b\u673a\u540d \u00b6 eg\uff1a # \u67e5\u770b\u7f51\u5361\u540d\u5b57 nmcli d # \u4fee\u6539\u914d\u7f6e\u6587\u4ef6\uff0cxxx\u4e3a\u5bf9\u5e94\u7f51\u5361\u7684\u540d\u5b57 vim /etc/sysconfig/network-scripts/ifcfg-xxx # \u4fee\u6539\u5e76\u4fdd\u5b58\u7f51\u5361\u4fe1\u606f\uff08\u4fee\u6539demo\u5982\u4e0b\uff1a\uff09 TYPE = \"Ethernet\" PROXY_METHOD = \"none\" BROWSER_ONLY = \"no\" BOOTPROTO = \"static\" #\u542f\u7528\u9759\u6001IP\u5730\u5740 DEFROUTE = \"yes\" IPV4_FAILURE_FATAL = \"no\" IPV6INIT = \"yes\" IPV6_AUTOCONF = \"yes\" IPV6_DEFROUTE = \"yes\" IPV6_FAILURE_FATAL = \"no\" IPV6_ADDR_GEN_MODE = \"stable-privacy\" NAME = \"ens33\" UUID = \"5e51c653-26b7-4e87-bbe6-4a06df6ff1d4\" DEVICE = \"ens33\" ONBOOT = \"yes\" IPADDR = \"192.168.33.132\" #\u8bbe\u7f6eIP\u5730\u5740 NETMASK = \"255.255.255.0\" #\u8bbe\u7f6e\u5b50\u7f51\u63a9\u7801 GATEWAY = \"192.168.189.2\" #\u8bbe\u7f6e\u7f51\u5173 DNS1 = \"8.8.8.8\" #DNS DNS2 = \"114.114.114.114\" # \u4fdd\u5b58\u9000\u51fa\u5e76\u91cd\u542f\u7f51\u5361 xxx\u4e3a\u7f51\u5361\u540d ifup xxx \uff08eg: ifup ens33\uff09 3.\u8bbe\u7f6e\u4e3b\u673a\u540d\uff08hostname\uff09 \u00b6 # xxx\u4e3a\u4e3b\u673a\u540d hostnamectl set-hostname xxx 4.\u67e5\u770b\u6216\u8bbe\u7f6ehosts \u00b6 \u8282\u70b9\u7684 hostname \u5fc5\u987b\u4f7f\u7528\u6807\u51c6\u7684 DNS \u547d\u540d\uff0c\u53e6\u5916\u5343\u4e07\u4e0d\u7528\u4ec0\u4e48\u9ed8\u8ba4\u7684 localhost \u7684 hostname\uff0c\u4f1a\u5bfc\u81f4\u5404\u79cd\u9519\u8bef\u51fa\u73b0\u7684\u3002\u5728 Kubernetes \u9879\u76ee\u91cc\uff0c\u673a\u5668\u7684\u540d\u5b57\u4ee5\u53ca\u4e00\u5207\u5b58\u50a8\u5728 Etcd \u4e2d\u7684 API \u5bf9\u8c61\uff0c\u90fd\u5fc5\u987b\u4f7f\u7528\u6807\u51c6\u7684 DNS \u547d\u540d\uff08RFC 1123\uff09\u3002\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4 hostnamectl set-hostname ydzs-node1 \u6765\u4fee\u6539 hostname\u3002 vim /etc/hosts \u6dfb\u52a0\u5982\u4e0b\u4fe1\u606f 192 .168.33.131 master1 192 .168.33.132 node1 192 .168.33.133 node2 \u6216 cat >> /etc/hosts << EOF 192.168.33.131 master1 192.168.33.132 node1 192.168.33.133 node2 EOF 5.\u7981\u7528\u9632\u706b\u5899\uff1a \u00b6 systemctl stop firewalld && systemctl disable firewalld 6.\u7981\u7528swap\uff08\u4ea4\u6362\u5206\u533a\uff09 \u00b6 swapoff -a && sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab 7.\u7981\u7528selinux \u00b6 setenforce 0 sed -i \"s/^SELINUX=enforcing/SELINUX=disabled/g\" /etc/sysconfig/selinux sed -i \"s/^SELINUX=enforcing/SELINUX=disabled/g\" /etc/selinux/config 8.\u52a0\u8f7dbr_netfilter\u6a21\u5757 \u00b6 \u7531\u4e8e\u5f00\u542f\u5185\u6838 ipv4 \u8f6c\u53d1\u9700\u8981\u52a0\u8f7d br_netfilter \u6a21\u5757 modprobe br_netfilter 9.\u5c06\u6865\u63a5\u7684IPv4\u6d41\u91cf\u4f20\u9012\u5230iptables\u7684\u94fe \u00b6 cat > /etc/sysctl.d/k8s.conf << EOF net.bridge.bridge-nf-call-ip6tables = 1 net.bridge.bridge-nf-call-iptables = 1 net.ipv4.ip_forward = 1 EOF # \u91cd\u542f\u751f\u6548 sysctl --system \u6216 sysctl -p /etc/sysctl.d/k8s.conf Explain: bridge-nf \u4f7f\u5f97 netfilter \u53ef\u4ee5\u5bf9 Linux \u7f51\u6865\u4e0a\u7684 IPv4/ARP/IPv6 \u5305\u8fc7\u6ee4\u3002\u6bd4\u5982\uff0c\u8bbe\u7f6e net.bridge.bridge-nf-call-iptables\uff1d1 \u540e\uff0c\u4e8c\u5c42\u7684\u7f51\u6865\u5728\u8f6c\u53d1\u5305\u65f6\u4e5f\u4f1a\u88ab iptables\u7684 FORWARD \u89c4\u5219\u6240\u8fc7\u6ee4\u3002\u5e38\u7528\u7684\u9009\u9879\u5305\u62ec\uff1a - net.bridge.bridge-nf-call-arptables\uff1a\u662f\u5426\u5728 arptables \u7684 FORWARD \u4e2d\u8fc7\u6ee4\u7f51\u6865\u7684 ARP \u5305 - net.bridge.bridge-nf-call-ip6tables\uff1a\u662f\u5426\u5728 ip6tables \u94fe\u4e2d\u8fc7\u6ee4 IPv6 \u5305 - net.bridge.bridge-nf-call-iptables\uff1a\u662f\u5426\u5728 iptables \u94fe\u4e2d\u8fc7\u6ee4 IPv4 \u5305 - net.bridge.bridge-nf-filter-vlan-tagged\uff1a\u662f\u5426\u5728 iptables/arptables \u4e2d\u8fc7\u6ee4\u6253\u4e86 vlan \u6807\u7b7e\u7684\u5305\u3002 10.\u5b89\u88c5 ipvs\uff1a \u00b6 \u4fdd\u8bc1\u5728\u8282\u70b9\u91cd\u542f\u540e\u80fd\u81ea\u52a8\u52a0\u8f7d\u6240\u9700\u6a21\u5757\u3002\u4f7f\u7528 lsmod | grep -e ip_vs -e nf_conntrack_ipv4 \u547d\u4ee4\u67e5\u770b\u662f\u5426\u5df2\u7ecf\u6b63\u786e\u52a0\u8f7d\u6240\u9700\u7684\u5185\u6838\u6a21\u5757 cat > /etc/sysconfig/modules/ipvs.modules <<EOF #!/bin/bash modprobe -- ip_vs modprobe -- ip_vs_rr modprobe -- ip_vs_wrr modprobe -- ip_vs_sh modprobe -- nf_conntrack_ipv4 EOF chmod 755 /etc/sysconfig/modules/ipvs.modules && bash /etc/sysconfig/modules/ipvs.modules && lsmod | grep -e ip_vs -e nf_conntrack_ipv4 \u63a5\u4e0b\u6765\u8fd8\u9700\u8981\u786e\u4fdd\u5404\u4e2a\u8282\u70b9\u4e0a\u5df2\u7ecf\u5b89\u88c5\u4e86 ipset \u8f6f\u4ef6\u5305\uff1a yum install ipset \u4e3a\u4e86\u4fbf\u4e8e\u67e5\u770b ipvs \u7684\u4ee3\u7406\u89c4\u5219\uff0c\u6700\u597d\u5b89\u88c5\u4e00\u4e0b\u7ba1\u7406\u5de5\u5177 ipvsadm\uff1a yum install ipvsadm -y 11.\u540c\u6b65\u670d\u52a1\u5668\u65f6\u95f4 \u00b6 yum install chrony -y systemctl enable chronyd && systemctl start chronyd chronyc sources # \u8f93\u51fa\u5982\u4e0b\u5185\u5bb9 210 Number of sources = 4 MS Name/IP address Stratum Poll Reach LastRx Last sample =============================================================================== ^- 0 .cl.ntp.edgeuno.com 3 6 7 1 -3631us [ +4657us ] +/- 286ms ^? ntp8.flashdance.cx 2 6 5 1 -6585us [ +1703us ] +/- 172ms ^* time.neu.edu.cn 1 6 7 1 -104us [ +8184us ] +/- 29ms ^+ ntp6.flashdance.cx 2 6 7 0 -16ms [ -16ms ] +/- 188ms ( base ) [ root@automlgpu3 ~ ] # date Wed Jun 30 13 :53:22 CST 2021 12.\u5b89\u88c5\u5e38\u7528\u8f6f\u4ef6 \u00b6 yum install -y vim lrzsz wget curl man tree rsync gcc gcc-c++ cmake telnet STEP2:\u5b89\u88c5\u4f9d\u8d56\u2014\u2014Docker \u00b6 \u8be6\u60c5\u67e5\u9605\uff1a \u3010docker-\u5b89\u88c5-\u5378\u8f7d\u6307\u5357\u3011 Note: \u7531\u4e8e\u9ed8\u8ba4\u60c5\u51b5\u4e0b kubelet \u4f7f\u7528\u7684 cgroupdriver \u662f systemd\uff0c\u6240\u4ee5\u9700\u8981\u4fdd\u6301 docker \u548ckubelet \u7684 cgroupdriver \u4e00\u81f4\uff0c\u6211\u4eec\u8fd9\u91cc\u4fee\u6539 docker \u7684 cgroupdriver=systemd\u3002\u5982\u679c\u4e0d\u4fee\u6539 docker \u5219\u9700\u8981\u4fee\u6539 kubelet \u7684\u542f\u52a8\u914d\u7f6e\uff0c\u9700\u8981\u4fdd\u8bc1\u4e24\u8005\u4e00\u81f4\u3002 STEP3:\u5b89\u88c5kubeadm/kubelet/kubectl \u00b6 Note: - \u6267\u884c\u6b64\u6b65\u9aa4\u524d\u786e\u4fddSTEP1\u548cSTEP2\u90fd\u6210\u529f\u6267\u884c - \u4e0b\u5217\u8fc7\u7a0b\u4f7f\u7528\u6267\u884cyum\u6e90\u7684\u65b9\u5f0f\u8fdb\u884c\u5b89\u88c5 - \u6b64\u6b65\u9aa4\u6240\u6709\u7684\u7ed3\u70b9\u90fd\u9700\u8981\u6267\u884c 1.\u8bbe\u7f6eyum\u6e90 \u00b6 \u80fd\u4f7f\u7528\u79d1\u5b66\u4e0a\u7f51\u8bbe\u7f6e\u6e90\u7684\u65b9\u5f0f cat <<EOF > /etc/yum.repos.d/kubernetes.repo [kubernetes] name=Kubernetes baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64 enabled=1 gpgcheck=1 repo_gpgcheck=1 gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg EOF \u4e0d\u80fd\u79d1\u5b66\u4e0a\u7f51\u8bbe\u7f6e\u6e90\u7684\u65b9\u5f0f cat <<EOF > /etc/yum.repos.d/kubernetes.repo [kubernetes] name=Kubernetes baseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64 enabled=1 gpgcheck=0 repo_gpgcheck=0 gpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg EOF 2.\u91cd\u65b0\u6784\u5efayum\u7f13\u5b58 \u00b6 yum -y install epel-release yum clean all yum makecache 3.\u5b89\u88c5kubeadm/kubelet/kubectl \u00b6 yum -y install kubelet-1.19.4 kubeadm-1.19.4 kubectl-1.19.4 # \u67e5\u770b k8s \u7684\u7248\u672c kubelet --version # \u67e5\u770b kubeadm \u7684\u7248\u672c kubeadm version # \u67e5\u770b kubectl \u7248\u672c kubectl version --client 4.\u8bbe\u7f6ekubelet\u670d\u52a1\u5f00\u673a\u542f\u52a8 \u00b6 systemctl enable kubelet && systemctl start kubelet STEP4: \u521d\u59cb\u5316\u96c6\u7fa4 \u00b6 Note: master\u7ed3\u70b9\u914d\u7f6ekubeadm \u521d\u59cb\u5316\u6587\u4ef6 - \u6267\u884c\u7684\u521d\u59cb\u5316\u7684\u65b9\u5f0f\u6709\u591a\u79cd - \u914d\u7f6eyaml\u7684\u65b9\u5f0f - \u4f7f\u7528\u547d\u4ee4\u884c\u6307\u5b9a\u914d\u7f6e\u53c2\u6570\u65b9\u5f0f \u65b9\u5f0f\u4e00\uff1a\u914d\u7f6eyaml\u7684\u65b9\u5f0f \u00b6 1.\u5bfc\u51fa\u9ed8\u8ba4\u7684\u521d\u59cb\u5316\u914d\u7f6e\uff1a \u00b6 $ kubeadm config print init-defaults > kubeadm.yaml 2.\u6839\u636e\u9700\u6c42\u4fee\u6539\u914d\u7f6e \u00b6 kube-proxy \u7684\u6a21\u5f0f\u4e3a ipvs \u5b89\u88c5 flannel \u7f51\u7edc\u63d2\u4ef6,\u9700\u8981\u5c06 networking.podSubnet \u8bbe\u7f6e\u4e3a 10.244.0.0/16 \uff1a apiVersion : kubeadm.k8s.io/v1beta2 bootstrapTokens : - groups : - system:bootstrappers:kubeadm:default-node-token token : abcdef.0123456789abcdef ttl : 24h0m0s usages : - signing - authentication kind : InitConfiguration localAPIEndpoint : advertiseAddress : 192.168.33.131 # apiserver \u8282\u70b9\u5185\u7f51IP bindPort : 6443 nodeRegistration : criSocket : /var/run/dockershim.sock name : ydzs-master # \u9ed8\u8ba4\u8bfb\u53d6\u5f53\u524dmaster\u8282\u70b9\u7684hostname taints : - effect : NoSchedule key : node-role.kubernetes.io/master --- apiServer : timeoutForControlPlane : 4m0s apiVersion : kubeadm.k8s.io/v1beta2 certificatesDir : /etc/kubernetes/pki clusterName : kubernetes controllerManager : {} dns : type : CoreDNS etcd : local : dataDir : /var/lib/etcd imageRepository : registry.aliyuncs.com/google_containers # \u4fee\u6539\u6210\u963f\u91cc\u4e91\u955c\u50cf\u6e90 kind : ClusterConfiguration kubernetesVersion : v1.16.2 networking : dnsDomain : cluster.local podSubnet : 10.244.0.0/16 # Pod \u7f51\u6bb5\uff0cflannel\u63d2\u4ef6\u9700\u8981\u4f7f\u7528\u8fd9\u4e2a\u7f51\u6bb5 serviceSubnet : 10.96.0.0/12 scheduler : {} --- apiVersion : kubeproxy.config.k8s.io/v1alpha1 kind : KubeProxyConfiguration mode : ipvs # kube-proxy \u6a21\u5f0f 3.\u6267\u884c\u521d\u59cb\u5316 \u00b6 kubeadm init --config kubeadm.yaml # \u6267\u884c\u6210\u529f\u4f1a\u663e\u793a\u5982\u4e0b\u5185\u5bb9 Your Kubernetes control-plane has initialized successfully! To start using your cluster, you need to run the following as a regular user: mkdir -p $HOME /.kube sudo cp -i /etc/kubernetes/admin.conf $HOME /.kube/config sudo chown $( id -u ) : $( id -g ) $HOME /.kube/config You should now deploy a pod network to the cluster. Run \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at: https://kubernetes.io/docs/concepts/cluster-administration/addons/ Then you can join any number of worker nodes by running the following on each as root: kubeadm join 192 .168.33.131:6443 --token j7t5rh.7ao1kxy4ngj3ua2u \\ --discovery-token-ca-cert-hash sha256:22a3006ef3935419f13f3da59592f2450da4fd33035f81bd0d8048efd0cb38aa \u65b9\u5f0f\u4e8c\uff1a\u4f7f\u7528\u547d\u4ee4\u884c\u6307\u5b9a\u914d\u7f6e\u53c2\u6570\u65b9\u5f0f \u00b6 kubeadm init \\ --apiserver-advertise-address = 192 .168.33.131 \\ --image-repository registry.aliyuncs.com/google_containers \\ --kubernetes-version v1.18.2 \\ --service-cidr = 10 .96.0.0/12 \\ --pod-network-cidr = 10 .244.0.0/16 \u53c2\u6570\u8bf4\u660e\uff1a --apiserver-advertise-address\uff1a\u672c\u673aIP\uff08\u4e5f\u662f Master\u7684IP\uff09\uff0c\u4f7f\u7528\u5185\u7f51IP --image-repository registry.aliyuncs.com/google_containers \uff1a\u62c9\u53d6\u955c\u50cf\u7684\u5730\u5740\uff0c\u8fd9\u91cc\u4f7f\u7528\u963f\u91cc\u4e91\u7684\u955c\u50cf\u4ed3\u5e93 --kubernetes-version\uff1a k8s \u7248\u672c\u53f7 --service-cidr\uff1a\u66b4\u9732\u670d\u52a1\u7684IP\u7f51\u6bb5\uff0cIP\u4e0d\u4e0e\u73b0\u6709\u7684\u51b2\u7a81\u5c31\u53ef\u4ee5 --pod-network-cidr\uff1a Pod\u7684IP\u7f51\u6bb5\uff0cIP\u4e0d\u4e0e\u73b0\u6709\u7684\u51b2\u7a81\u5c31\u53ef\u4ee5 \u62f7\u8d1d kubeconfig \u6587\u4ef6 \u00b6 $ mkdir -p $HOME /.kube $ sudo cp -i /etc/kubernetes/admin.conf $HOME /.kube/config $ sudo chown $( id -u ) : $( id -g ) $HOME /.kube/config \u67e5\u770b\u8282\u70b9\u4fe1\u606f \u00b6 \u72b6\u6001\u4e3aNoteReady\u7684\u539f\u56e0\u662f\u6ca1\u6709\u5b89\u88c5\u7f51\u5361 kubectl get nodes # \u8f93\u51fa\u5982\u4e0b\u4fe1\u606f\uff1a NAME STATUS ROLES AGE VERSION centos801 NotReady master 4h55m v1.19.4 STEP5:\u6dfb\u52a0\u8282\u70b9 \u00b6 Note: - \u5b89\u88c5kubeadm \u3001 kubelet \u3001kubectl - \u5982\u679c\u5fd8\u4e86token\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u5217\u547d\u4ee4\u91cd\u65b0\u751f\u6210 - kubeadm token create --print-join-command 1.\u5b89\u88c5kubeadm \u3001 kubelet \u3001kubectl \u00b6 \u53ef\u4ee5\u53c2\u8003\u4e0a\u9762master\u8282\u70b9\u7684\u5b89\u88c5\u65b9\u5f0f \u6ce8\u610f:node\u8282\u70b9\u4e0d\u9700\u8981\u6267\u884cinit\u7684\u64cd\u4f5c 2.\u6267\u884cjoin\u64cd\u4f5c \u00b6 kubeadm join 192 .168.33.131:6443 --token j7t5rh.7ao1kxy4ngj3ua2u \\ --discovery-token-ca-cert-hash sha256:22a3006ef3935419f13f3da59592f2450da4fd33035f81bd0d8048efd0cb38aa # \u6267\u884c\u6210\u529f\u540e\u4f1a\u663e\u793a\u5982\u4e0b\u5185\u5bb9\uff1a [ root@centos803 ~ ] # kubeadm join 192.168.33.131:6443 --token whrgqy.u4qqzag60frlk4vw --discovery-token-ca-cert-hash sha256:5846f57ce7e8843f5adc272a3261a8b5b158867328134ee745622eef2185e532 W0304 14 :10:56.883083 26739 join.go:346 ] [ preflight ] WARNING: JoinControlPane.controlPlane settings will be ignored when control-plane flag is not set. [ preflight ] Running pre-flight checks [ WARNING Hostname ] : hostname \"centos803\" could not be reached [ WARNING Hostname ] : hostname \"centos803\" : lookup centos803 on 8 .8.8.8:53: no such host [ preflight ] Reading configuration from the cluster... [ preflight ] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -oyaml' [ kubelet-start ] Downloading configuration for the kubelet from the \"kubelet-config-1.18\" ConfigMap in the kube-system namespace [ kubelet-start ] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\" [ kubelet-start ] Writing kubelet environment file with flags to file \"/var/lib/kubelet/kubeadm-flags.env\" [ kubelet-start ] Starting the kubelet [ kubelet-start ] Waiting for the kubelet to perform the TLS Bootstrap... This node has joined the cluster: * Certificate signing request was sent to apiserver and a response was received. * The Kubelet was informed of the new secure connection details. Run 'kubectl get nodes' on the control-plane to see this node join the cluster. 3.\u5728master\u67e5\u770b\u8282\u70b9\u4fe1\u606f \u00b6 \u72b6\u6001\u4e3aNoteReady\u7684\u539f\u56e0\u662f\u6ca1\u6709\u5b89\u88c5\u7f51\u5361 kubectl get nodes # \u8f93\u51fa\u5982\u4e0b\u4fe1\u606f\uff1a NAME STATUS ROLES AGE VERSION centos801 NotReady master 4h55m v1.19.4 centos802 NotReady <none> 4h16m v1.19.4 centos803 NotReady <none> 3h46m v1.19.4 STEP6: \u5b89\u88c5\u7f51\u7edc\u63d2\u4ef6 \u00b6 Note: \u5728master\u8282\u70b9\u5b89\u88c5\u5c31\u597d \u5e38\u7528\u7684kubernetes\u7f51\u7edc\u63d2\u4ef6\u6709\uff1a - flannel\uff08\u6b64\u5904\u9009\u62e9\u5b89\u88c5\uff09 - calico k8s\u5b98\u65b9\u6587\u6863\u4e2d\u7f51\u7edc\u63d2\u4ef6\u8bf4\u660e 1.\u5b89\u88c5flannel \u00b6 \u5f53\u6211\u4eec\u90e8\u7f72\u5b8c\u7f51\u7edc\u63d2\u4ef6\u540e\u6267\u884c ifconfig \u547d\u4ee4\uff0c\u6b63\u5e38\u4f1a\u770b\u5230\u65b0\u589e\u7684 cni0 \u4e0e flannel1 \u8fd9\u4e24\u4e2a\u865a\u62df\u8bbe\u5907\uff0c\u4f46\u662f\u5982\u679c\u6ca1\u6709\u770b\u5230 cni0 \u8fd9\u4e2a\u8bbe\u5907\u4e5f\u4e0d\u7528\u592a\u62c5\u5fc3\uff0c\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf /var/lib/cni \u76ee\u5f55\u662f\u5426\u5b58\u5728\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5e76\u4e0d\u662f\u8bf4\u90e8\u7f72\u6709\u95ee\u9898\uff0c\u800c\u662f\u8be5\u8282\u70b9\u4e0a\u6682\u65f6\u8fd8\u6ca1\u6709\u5e94\u7528\u8fd0\u884c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u8be5\u8282\u70b9\u4e0a\u8fd0\u884c\u4e00\u4e2a Pod \u5c31\u53ef\u4ee5\u770b\u5230\u8be5\u76ee\u5f55\u4f1a\u88ab\u521b\u5efa\uff0c\u5e76\u4e14 cni0 \u8bbe\u5907\u4e5f\u4f1a\u88ab\u521b\u5efa\u51fa\u6765\u3002 $ wget https://raw.githubusercontent.com/coreos/flannel/2140ac876ef134e0ed5af15c65e414cf26827915/Documentation/kube-flannel.yml # \u56e0\u4e3a\u6709\u8282\u70b9\u662f\u591a\u7f51\u5361\uff0c\u6240\u4ee5\u9700\u8981\u5728\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u4e2d\u6307\u5b9a\u5185\u7f51\u7f51\u5361 # \u641c\u7d22\u5230\u540d\u4e3a kube-flannel-ds-amd64 \u7684 DaemonSet\uff0c\u5728kube-flannel\u5bb9\u5668\u4e0b\u9762 $ vi kube-flannel.yml ...... containers: - name: kube-flannel image: quay.io/coreos/flannel:v0.11.0-amd64 command: - /opt/bin/flanneld args: - --ip-masq - --kube-subnet-mgr - --iface = eth0 # \u5982\u679c\u662f\u591a\u7f51\u5361\u7684\u8bdd\uff0c\u6307\u5b9a\u5185\u7f51\u7f51\u5361\u7684\u540d\u79f0 ...... $ kubectl apply -f kube-flannel.yml # \u5b89\u88c5 flannel \u7f51\u7edc\u63d2\u4ef6 2.\u518d\u6b21\u5728master\u67e5\u770b\u8282\u70b9\u4fe1\u606f \u00b6 \u72b6\u6001\u4e3aNoteReady\u7684\u539f\u56e0\u662f\u6ca1\u6709\u5b89\u88c5\u7f51\u5361 kubectl get nodes # \u8f93\u51fa\u5982\u4e0b\u4fe1\u606f\uff1a NAME STATUS ROLES AGE VERSION centos801 Ready master 4h55m v1.19.4 centos802 Ready <none> 4h16m v1.19.4 centos803 Ready <none> 3h46m v1.19.4 \u5907\u6ce8\u5185\u5bb9\uff1a \u00b6 \u91cd\u7f6e\u7684\u65b9\u6cd5\uff1a \u00b6 \u5982\u679c\u4f60\u7684\u96c6\u7fa4\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86\u5176\u4ed6\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u8fdb\u884c\u91cd\u7f6e\uff1a $ kubeadm reset $ ifconfig cni0 down && ip link delete cni0 $ ifconfig flannel.1 down && ip link delete flannel.1 $ rm -rf /var/lib/cni/ \u5f7b\u5e95\u5378\u8f7d\u7684\u65b9\u6cd5 \u00b6 #!/bin/bash kubeadm reset -f modprobe -r ipip lsmod rm -rf ~/.kube/ rm -rf /etc/kubernetes/ rm -rf /etc/systemd/system/kubelet.service.d rm -rf /etc/systemd/system/kubelet.service rm -rf /usr/bin/kube* rm -rf /etc/cni rm -rf /opt/cni rm -rf /var/lib/etcd rm -rf /var/etcd yum -y remove kubeadm kubectl kubelet","title":"\u3010k8s\u3011\u96c6\u7fa4\u642d\u5efa\u6307\u5357"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#step1","text":"","title":"STEP1: \u524d\u7f6e\u5de5\u4f5c(\u51c6\u5907/\u68c0\u67e5\u73af\u5883)"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#1","text":"\u6bcf\u53f0\u673a\u5668 2 GB \u6216\u66f4\u591a\u7684\u5185\u5b58 (\u5982\u679c\u5c11\u4e8e\u8fd9\u4e2a\u6570\u5b57\u5c06\u4f1a\u5f71\u54cd\u60a8\u5e94\u7528\u7684\u8fd0\u884c\u5185\u5b58) 2 CPU \u6216\u66f4\u591a \u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u673a\u5668\u7684\u7f51\u7edc\u4e92\u901a \u53ef\u4ee5\u8bbf\u95ee\u5916\u7f51 \u7981\u6b62 swap \u5206\u533a eg: IP \u4e3b\u673a\u540d \u7cfb\u7edf\u7248\u672c CPU \u5185\u5b58 \u5907\u6ce8 192.168.33.131 master1 centos8.2 2G 2 \u6b64\u914d\u7f6e\u4e3a\u6700\u4f4e\u8981\u6c42 192.168.33.132 node1 centos8.2 2G 2 192.168.33.133 node2 centos8.2 2G 2","title":"1.\u96c6\u7fa4\u670d\u52a1\u5668\u8981\u6c42\uff1a"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#2ipdnshosts","text":"eg\uff1a # \u67e5\u770b\u7f51\u5361\u540d\u5b57 nmcli d # \u4fee\u6539\u914d\u7f6e\u6587\u4ef6\uff0cxxx\u4e3a\u5bf9\u5e94\u7f51\u5361\u7684\u540d\u5b57 vim /etc/sysconfig/network-scripts/ifcfg-xxx # \u4fee\u6539\u5e76\u4fdd\u5b58\u7f51\u5361\u4fe1\u606f\uff08\u4fee\u6539demo\u5982\u4e0b\uff1a\uff09 TYPE = \"Ethernet\" PROXY_METHOD = \"none\" BROWSER_ONLY = \"no\" BOOTPROTO = \"static\" #\u542f\u7528\u9759\u6001IP\u5730\u5740 DEFROUTE = \"yes\" IPV4_FAILURE_FATAL = \"no\" IPV6INIT = \"yes\" IPV6_AUTOCONF = \"yes\" IPV6_DEFROUTE = \"yes\" IPV6_FAILURE_FATAL = \"no\" IPV6_ADDR_GEN_MODE = \"stable-privacy\" NAME = \"ens33\" UUID = \"5e51c653-26b7-4e87-bbe6-4a06df6ff1d4\" DEVICE = \"ens33\" ONBOOT = \"yes\" IPADDR = \"192.168.33.132\" #\u8bbe\u7f6eIP\u5730\u5740 NETMASK = \"255.255.255.0\" #\u8bbe\u7f6e\u5b50\u7f51\u63a9\u7801 GATEWAY = \"192.168.189.2\" #\u8bbe\u7f6e\u7f51\u5173 DNS1 = \"8.8.8.8\" #DNS DNS2 = \"114.114.114.114\" # \u4fdd\u5b58\u9000\u51fa\u5e76\u91cd\u542f\u7f51\u5361 xxx\u4e3a\u7f51\u5361\u540d ifup xxx \uff08eg: ifup ens33\uff09","title":"2.\u8bbe\u7f6e\u670d\u52a1\u5668\u9759\u6001IP/DNS/hosts\u4e3b\u673a\u540d"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#3hostname","text":"# xxx\u4e3a\u4e3b\u673a\u540d hostnamectl set-hostname xxx","title":"3.\u8bbe\u7f6e\u4e3b\u673a\u540d\uff08hostname\uff09"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#4hosts","text":"\u8282\u70b9\u7684 hostname \u5fc5\u987b\u4f7f\u7528\u6807\u51c6\u7684 DNS \u547d\u540d\uff0c\u53e6\u5916\u5343\u4e07\u4e0d\u7528\u4ec0\u4e48\u9ed8\u8ba4\u7684 localhost \u7684 hostname\uff0c\u4f1a\u5bfc\u81f4\u5404\u79cd\u9519\u8bef\u51fa\u73b0\u7684\u3002\u5728 Kubernetes \u9879\u76ee\u91cc\uff0c\u673a\u5668\u7684\u540d\u5b57\u4ee5\u53ca\u4e00\u5207\u5b58\u50a8\u5728 Etcd \u4e2d\u7684 API \u5bf9\u8c61\uff0c\u90fd\u5fc5\u987b\u4f7f\u7528\u6807\u51c6\u7684 DNS \u547d\u540d\uff08RFC 1123\uff09\u3002\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4 hostnamectl set-hostname ydzs-node1 \u6765\u4fee\u6539 hostname\u3002 vim /etc/hosts \u6dfb\u52a0\u5982\u4e0b\u4fe1\u606f 192 .168.33.131 master1 192 .168.33.132 node1 192 .168.33.133 node2 \u6216 cat >> /etc/hosts << EOF 192.168.33.131 master1 192.168.33.132 node1 192.168.33.133 node2 EOF","title":"4.\u67e5\u770b\u6216\u8bbe\u7f6ehosts"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#5","text":"systemctl stop firewalld && systemctl disable firewalld","title":"5.\u7981\u7528\u9632\u706b\u5899\uff1a"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#6swap","text":"swapoff -a && sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab","title":"6.\u7981\u7528swap\uff08\u4ea4\u6362\u5206\u533a\uff09"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#7selinux","text":"setenforce 0 sed -i \"s/^SELINUX=enforcing/SELINUX=disabled/g\" /etc/sysconfig/selinux sed -i \"s/^SELINUX=enforcing/SELINUX=disabled/g\" /etc/selinux/config","title":"7.\u7981\u7528selinux"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#8br_netfilter","text":"\u7531\u4e8e\u5f00\u542f\u5185\u6838 ipv4 \u8f6c\u53d1\u9700\u8981\u52a0\u8f7d br_netfilter \u6a21\u5757 modprobe br_netfilter","title":"8.\u52a0\u8f7dbr_netfilter\u6a21\u5757"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#9ipv4iptables","text":"cat > /etc/sysctl.d/k8s.conf << EOF net.bridge.bridge-nf-call-ip6tables = 1 net.bridge.bridge-nf-call-iptables = 1 net.ipv4.ip_forward = 1 EOF # \u91cd\u542f\u751f\u6548 sysctl --system \u6216 sysctl -p /etc/sysctl.d/k8s.conf Explain: bridge-nf \u4f7f\u5f97 netfilter \u53ef\u4ee5\u5bf9 Linux \u7f51\u6865\u4e0a\u7684 IPv4/ARP/IPv6 \u5305\u8fc7\u6ee4\u3002\u6bd4\u5982\uff0c\u8bbe\u7f6e net.bridge.bridge-nf-call-iptables\uff1d1 \u540e\uff0c\u4e8c\u5c42\u7684\u7f51\u6865\u5728\u8f6c\u53d1\u5305\u65f6\u4e5f\u4f1a\u88ab iptables\u7684 FORWARD \u89c4\u5219\u6240\u8fc7\u6ee4\u3002\u5e38\u7528\u7684\u9009\u9879\u5305\u62ec\uff1a - net.bridge.bridge-nf-call-arptables\uff1a\u662f\u5426\u5728 arptables \u7684 FORWARD \u4e2d\u8fc7\u6ee4\u7f51\u6865\u7684 ARP \u5305 - net.bridge.bridge-nf-call-ip6tables\uff1a\u662f\u5426\u5728 ip6tables \u94fe\u4e2d\u8fc7\u6ee4 IPv6 \u5305 - net.bridge.bridge-nf-call-iptables\uff1a\u662f\u5426\u5728 iptables \u94fe\u4e2d\u8fc7\u6ee4 IPv4 \u5305 - net.bridge.bridge-nf-filter-vlan-tagged\uff1a\u662f\u5426\u5728 iptables/arptables \u4e2d\u8fc7\u6ee4\u6253\u4e86 vlan \u6807\u7b7e\u7684\u5305\u3002","title":"9.\u5c06\u6865\u63a5\u7684IPv4\u6d41\u91cf\u4f20\u9012\u5230iptables\u7684\u94fe"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#10-ipvs","text":"\u4fdd\u8bc1\u5728\u8282\u70b9\u91cd\u542f\u540e\u80fd\u81ea\u52a8\u52a0\u8f7d\u6240\u9700\u6a21\u5757\u3002\u4f7f\u7528 lsmod | grep -e ip_vs -e nf_conntrack_ipv4 \u547d\u4ee4\u67e5\u770b\u662f\u5426\u5df2\u7ecf\u6b63\u786e\u52a0\u8f7d\u6240\u9700\u7684\u5185\u6838\u6a21\u5757 cat > /etc/sysconfig/modules/ipvs.modules <<EOF #!/bin/bash modprobe -- ip_vs modprobe -- ip_vs_rr modprobe -- ip_vs_wrr modprobe -- ip_vs_sh modprobe -- nf_conntrack_ipv4 EOF chmod 755 /etc/sysconfig/modules/ipvs.modules && bash /etc/sysconfig/modules/ipvs.modules && lsmod | grep -e ip_vs -e nf_conntrack_ipv4 \u63a5\u4e0b\u6765\u8fd8\u9700\u8981\u786e\u4fdd\u5404\u4e2a\u8282\u70b9\u4e0a\u5df2\u7ecf\u5b89\u88c5\u4e86 ipset \u8f6f\u4ef6\u5305\uff1a yum install ipset \u4e3a\u4e86\u4fbf\u4e8e\u67e5\u770b ipvs \u7684\u4ee3\u7406\u89c4\u5219\uff0c\u6700\u597d\u5b89\u88c5\u4e00\u4e0b\u7ba1\u7406\u5de5\u5177 ipvsadm\uff1a yum install ipvsadm -y","title":"10.\u5b89\u88c5 ipvs\uff1a"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#11","text":"yum install chrony -y systemctl enable chronyd && systemctl start chronyd chronyc sources # \u8f93\u51fa\u5982\u4e0b\u5185\u5bb9 210 Number of sources = 4 MS Name/IP address Stratum Poll Reach LastRx Last sample =============================================================================== ^- 0 .cl.ntp.edgeuno.com 3 6 7 1 -3631us [ +4657us ] +/- 286ms ^? ntp8.flashdance.cx 2 6 5 1 -6585us [ +1703us ] +/- 172ms ^* time.neu.edu.cn 1 6 7 1 -104us [ +8184us ] +/- 29ms ^+ ntp6.flashdance.cx 2 6 7 0 -16ms [ -16ms ] +/- 188ms ( base ) [ root@automlgpu3 ~ ] # date Wed Jun 30 13 :53:22 CST 2021","title":"11.\u540c\u6b65\u670d\u52a1\u5668\u65f6\u95f4"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#12","text":"yum install -y vim lrzsz wget curl man tree rsync gcc gcc-c++ cmake telnet","title":"12.\u5b89\u88c5\u5e38\u7528\u8f6f\u4ef6"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#step2docker","text":"\u8be6\u60c5\u67e5\u9605\uff1a \u3010docker-\u5b89\u88c5-\u5378\u8f7d\u6307\u5357\u3011 Note: \u7531\u4e8e\u9ed8\u8ba4\u60c5\u51b5\u4e0b kubelet \u4f7f\u7528\u7684 cgroupdriver \u662f systemd\uff0c\u6240\u4ee5\u9700\u8981\u4fdd\u6301 docker \u548ckubelet \u7684 cgroupdriver \u4e00\u81f4\uff0c\u6211\u4eec\u8fd9\u91cc\u4fee\u6539 docker \u7684 cgroupdriver=systemd\u3002\u5982\u679c\u4e0d\u4fee\u6539 docker \u5219\u9700\u8981\u4fee\u6539 kubelet \u7684\u542f\u52a8\u914d\u7f6e\uff0c\u9700\u8981\u4fdd\u8bc1\u4e24\u8005\u4e00\u81f4\u3002","title":"STEP2:\u5b89\u88c5\u4f9d\u8d56\u2014\u2014Docker"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#step3kubeadmkubeletkubectl","text":"Note: - \u6267\u884c\u6b64\u6b65\u9aa4\u524d\u786e\u4fddSTEP1\u548cSTEP2\u90fd\u6210\u529f\u6267\u884c - \u4e0b\u5217\u8fc7\u7a0b\u4f7f\u7528\u6267\u884cyum\u6e90\u7684\u65b9\u5f0f\u8fdb\u884c\u5b89\u88c5 - \u6b64\u6b65\u9aa4\u6240\u6709\u7684\u7ed3\u70b9\u90fd\u9700\u8981\u6267\u884c","title":"STEP3:\u5b89\u88c5kubeadm/kubelet/kubectl"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#1yum","text":"\u80fd\u4f7f\u7528\u79d1\u5b66\u4e0a\u7f51\u8bbe\u7f6e\u6e90\u7684\u65b9\u5f0f cat <<EOF > /etc/yum.repos.d/kubernetes.repo [kubernetes] name=Kubernetes baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64 enabled=1 gpgcheck=1 repo_gpgcheck=1 gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg EOF \u4e0d\u80fd\u79d1\u5b66\u4e0a\u7f51\u8bbe\u7f6e\u6e90\u7684\u65b9\u5f0f cat <<EOF > /etc/yum.repos.d/kubernetes.repo [kubernetes] name=Kubernetes baseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64 enabled=1 gpgcheck=0 repo_gpgcheck=0 gpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg EOF","title":"1.\u8bbe\u7f6eyum\u6e90"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#2yum","text":"yum -y install epel-release yum clean all yum makecache","title":"2.\u91cd\u65b0\u6784\u5efayum\u7f13\u5b58"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#3kubeadmkubeletkubectl","text":"yum -y install kubelet-1.19.4 kubeadm-1.19.4 kubectl-1.19.4 # \u67e5\u770b k8s \u7684\u7248\u672c kubelet --version # \u67e5\u770b kubeadm \u7684\u7248\u672c kubeadm version # \u67e5\u770b kubectl \u7248\u672c kubectl version --client","title":"3.\u5b89\u88c5kubeadm/kubelet/kubectl"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#4kubelet","text":"systemctl enable kubelet && systemctl start kubelet","title":"4.\u8bbe\u7f6ekubelet\u670d\u52a1\u5f00\u673a\u542f\u52a8"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#step4","text":"Note: master\u7ed3\u70b9\u914d\u7f6ekubeadm \u521d\u59cb\u5316\u6587\u4ef6 - \u6267\u884c\u7684\u521d\u59cb\u5316\u7684\u65b9\u5f0f\u6709\u591a\u79cd - \u914d\u7f6eyaml\u7684\u65b9\u5f0f - \u4f7f\u7528\u547d\u4ee4\u884c\u6307\u5b9a\u914d\u7f6e\u53c2\u6570\u65b9\u5f0f","title":"STEP4: \u521d\u59cb\u5316\u96c6\u7fa4"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#yaml","text":"","title":"\u65b9\u5f0f\u4e00\uff1a\u914d\u7f6eyaml\u7684\u65b9\u5f0f"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#1_1","text":"$ kubeadm config print init-defaults > kubeadm.yaml","title":"1.\u5bfc\u51fa\u9ed8\u8ba4\u7684\u521d\u59cb\u5316\u914d\u7f6e\uff1a"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#2","text":"kube-proxy \u7684\u6a21\u5f0f\u4e3a ipvs \u5b89\u88c5 flannel \u7f51\u7edc\u63d2\u4ef6,\u9700\u8981\u5c06 networking.podSubnet \u8bbe\u7f6e\u4e3a 10.244.0.0/16 \uff1a apiVersion : kubeadm.k8s.io/v1beta2 bootstrapTokens : - groups : - system:bootstrappers:kubeadm:default-node-token token : abcdef.0123456789abcdef ttl : 24h0m0s usages : - signing - authentication kind : InitConfiguration localAPIEndpoint : advertiseAddress : 192.168.33.131 # apiserver \u8282\u70b9\u5185\u7f51IP bindPort : 6443 nodeRegistration : criSocket : /var/run/dockershim.sock name : ydzs-master # \u9ed8\u8ba4\u8bfb\u53d6\u5f53\u524dmaster\u8282\u70b9\u7684hostname taints : - effect : NoSchedule key : node-role.kubernetes.io/master --- apiServer : timeoutForControlPlane : 4m0s apiVersion : kubeadm.k8s.io/v1beta2 certificatesDir : /etc/kubernetes/pki clusterName : kubernetes controllerManager : {} dns : type : CoreDNS etcd : local : dataDir : /var/lib/etcd imageRepository : registry.aliyuncs.com/google_containers # \u4fee\u6539\u6210\u963f\u91cc\u4e91\u955c\u50cf\u6e90 kind : ClusterConfiguration kubernetesVersion : v1.16.2 networking : dnsDomain : cluster.local podSubnet : 10.244.0.0/16 # Pod \u7f51\u6bb5\uff0cflannel\u63d2\u4ef6\u9700\u8981\u4f7f\u7528\u8fd9\u4e2a\u7f51\u6bb5 serviceSubnet : 10.96.0.0/12 scheduler : {} --- apiVersion : kubeproxy.config.k8s.io/v1alpha1 kind : KubeProxyConfiguration mode : ipvs # kube-proxy \u6a21\u5f0f","title":"2.\u6839\u636e\u9700\u6c42\u4fee\u6539\u914d\u7f6e"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#3","text":"kubeadm init --config kubeadm.yaml # \u6267\u884c\u6210\u529f\u4f1a\u663e\u793a\u5982\u4e0b\u5185\u5bb9 Your Kubernetes control-plane has initialized successfully! To start using your cluster, you need to run the following as a regular user: mkdir -p $HOME /.kube sudo cp -i /etc/kubernetes/admin.conf $HOME /.kube/config sudo chown $( id -u ) : $( id -g ) $HOME /.kube/config You should now deploy a pod network to the cluster. Run \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at: https://kubernetes.io/docs/concepts/cluster-administration/addons/ Then you can join any number of worker nodes by running the following on each as root: kubeadm join 192 .168.33.131:6443 --token j7t5rh.7ao1kxy4ngj3ua2u \\ --discovery-token-ca-cert-hash sha256:22a3006ef3935419f13f3da59592f2450da4fd33035f81bd0d8048efd0cb38aa","title":"3.\u6267\u884c\u521d\u59cb\u5316"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#_1","text":"kubeadm init \\ --apiserver-advertise-address = 192 .168.33.131 \\ --image-repository registry.aliyuncs.com/google_containers \\ --kubernetes-version v1.18.2 \\ --service-cidr = 10 .96.0.0/12 \\ --pod-network-cidr = 10 .244.0.0/16 \u53c2\u6570\u8bf4\u660e\uff1a --apiserver-advertise-address\uff1a\u672c\u673aIP\uff08\u4e5f\u662f Master\u7684IP\uff09\uff0c\u4f7f\u7528\u5185\u7f51IP --image-repository registry.aliyuncs.com/google_containers \uff1a\u62c9\u53d6\u955c\u50cf\u7684\u5730\u5740\uff0c\u8fd9\u91cc\u4f7f\u7528\u963f\u91cc\u4e91\u7684\u955c\u50cf\u4ed3\u5e93 --kubernetes-version\uff1a k8s \u7248\u672c\u53f7 --service-cidr\uff1a\u66b4\u9732\u670d\u52a1\u7684IP\u7f51\u6bb5\uff0cIP\u4e0d\u4e0e\u73b0\u6709\u7684\u51b2\u7a81\u5c31\u53ef\u4ee5 --pod-network-cidr\uff1a Pod\u7684IP\u7f51\u6bb5\uff0cIP\u4e0d\u4e0e\u73b0\u6709\u7684\u51b2\u7a81\u5c31\u53ef\u4ee5","title":"\u65b9\u5f0f\u4e8c\uff1a\u4f7f\u7528\u547d\u4ee4\u884c\u6307\u5b9a\u914d\u7f6e\u53c2\u6570\u65b9\u5f0f"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#kubeconfig","text":"$ mkdir -p $HOME /.kube $ sudo cp -i /etc/kubernetes/admin.conf $HOME /.kube/config $ sudo chown $( id -u ) : $( id -g ) $HOME /.kube/config","title":"\u62f7\u8d1d kubeconfig \u6587\u4ef6"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#_2","text":"\u72b6\u6001\u4e3aNoteReady\u7684\u539f\u56e0\u662f\u6ca1\u6709\u5b89\u88c5\u7f51\u5361 kubectl get nodes # \u8f93\u51fa\u5982\u4e0b\u4fe1\u606f\uff1a NAME STATUS ROLES AGE VERSION centos801 NotReady master 4h55m v1.19.4","title":"\u67e5\u770b\u8282\u70b9\u4fe1\u606f"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#step5","text":"Note: - \u5b89\u88c5kubeadm \u3001 kubelet \u3001kubectl - \u5982\u679c\u5fd8\u4e86token\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u5217\u547d\u4ee4\u91cd\u65b0\u751f\u6210 - kubeadm token create --print-join-command","title":"STEP5:\u6dfb\u52a0\u8282\u70b9"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#1kubeadm-kubelet-kubectl","text":"\u53ef\u4ee5\u53c2\u8003\u4e0a\u9762master\u8282\u70b9\u7684\u5b89\u88c5\u65b9\u5f0f \u6ce8\u610f:node\u8282\u70b9\u4e0d\u9700\u8981\u6267\u884cinit\u7684\u64cd\u4f5c","title":"1.\u5b89\u88c5kubeadm \u3001 kubelet \u3001kubectl"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#2join","text":"kubeadm join 192 .168.33.131:6443 --token j7t5rh.7ao1kxy4ngj3ua2u \\ --discovery-token-ca-cert-hash sha256:22a3006ef3935419f13f3da59592f2450da4fd33035f81bd0d8048efd0cb38aa # \u6267\u884c\u6210\u529f\u540e\u4f1a\u663e\u793a\u5982\u4e0b\u5185\u5bb9\uff1a [ root@centos803 ~ ] # kubeadm join 192.168.33.131:6443 --token whrgqy.u4qqzag60frlk4vw --discovery-token-ca-cert-hash sha256:5846f57ce7e8843f5adc272a3261a8b5b158867328134ee745622eef2185e532 W0304 14 :10:56.883083 26739 join.go:346 ] [ preflight ] WARNING: JoinControlPane.controlPlane settings will be ignored when control-plane flag is not set. [ preflight ] Running pre-flight checks [ WARNING Hostname ] : hostname \"centos803\" could not be reached [ WARNING Hostname ] : hostname \"centos803\" : lookup centos803 on 8 .8.8.8:53: no such host [ preflight ] Reading configuration from the cluster... [ preflight ] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -oyaml' [ kubelet-start ] Downloading configuration for the kubelet from the \"kubelet-config-1.18\" ConfigMap in the kube-system namespace [ kubelet-start ] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\" [ kubelet-start ] Writing kubelet environment file with flags to file \"/var/lib/kubelet/kubeadm-flags.env\" [ kubelet-start ] Starting the kubelet [ kubelet-start ] Waiting for the kubelet to perform the TLS Bootstrap... This node has joined the cluster: * Certificate signing request was sent to apiserver and a response was received. * The Kubelet was informed of the new secure connection details. Run 'kubectl get nodes' on the control-plane to see this node join the cluster.","title":"2.\u6267\u884cjoin\u64cd\u4f5c"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#3master","text":"\u72b6\u6001\u4e3aNoteReady\u7684\u539f\u56e0\u662f\u6ca1\u6709\u5b89\u88c5\u7f51\u5361 kubectl get nodes # \u8f93\u51fa\u5982\u4e0b\u4fe1\u606f\uff1a NAME STATUS ROLES AGE VERSION centos801 NotReady master 4h55m v1.19.4 centos802 NotReady <none> 4h16m v1.19.4 centos803 NotReady <none> 3h46m v1.19.4","title":"3.\u5728master\u67e5\u770b\u8282\u70b9\u4fe1\u606f"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#step6","text":"Note: \u5728master\u8282\u70b9\u5b89\u88c5\u5c31\u597d \u5e38\u7528\u7684kubernetes\u7f51\u7edc\u63d2\u4ef6\u6709\uff1a - flannel\uff08\u6b64\u5904\u9009\u62e9\u5b89\u88c5\uff09 - calico k8s\u5b98\u65b9\u6587\u6863\u4e2d\u7f51\u7edc\u63d2\u4ef6\u8bf4\u660e","title":"STEP6: \u5b89\u88c5\u7f51\u7edc\u63d2\u4ef6"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#1flannel","text":"\u5f53\u6211\u4eec\u90e8\u7f72\u5b8c\u7f51\u7edc\u63d2\u4ef6\u540e\u6267\u884c ifconfig \u547d\u4ee4\uff0c\u6b63\u5e38\u4f1a\u770b\u5230\u65b0\u589e\u7684 cni0 \u4e0e flannel1 \u8fd9\u4e24\u4e2a\u865a\u62df\u8bbe\u5907\uff0c\u4f46\u662f\u5982\u679c\u6ca1\u6709\u770b\u5230 cni0 \u8fd9\u4e2a\u8bbe\u5907\u4e5f\u4e0d\u7528\u592a\u62c5\u5fc3\uff0c\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf /var/lib/cni \u76ee\u5f55\u662f\u5426\u5b58\u5728\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5e76\u4e0d\u662f\u8bf4\u90e8\u7f72\u6709\u95ee\u9898\uff0c\u800c\u662f\u8be5\u8282\u70b9\u4e0a\u6682\u65f6\u8fd8\u6ca1\u6709\u5e94\u7528\u8fd0\u884c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u8be5\u8282\u70b9\u4e0a\u8fd0\u884c\u4e00\u4e2a Pod \u5c31\u53ef\u4ee5\u770b\u5230\u8be5\u76ee\u5f55\u4f1a\u88ab\u521b\u5efa\uff0c\u5e76\u4e14 cni0 \u8bbe\u5907\u4e5f\u4f1a\u88ab\u521b\u5efa\u51fa\u6765\u3002 $ wget https://raw.githubusercontent.com/coreos/flannel/2140ac876ef134e0ed5af15c65e414cf26827915/Documentation/kube-flannel.yml # \u56e0\u4e3a\u6709\u8282\u70b9\u662f\u591a\u7f51\u5361\uff0c\u6240\u4ee5\u9700\u8981\u5728\u8d44\u6e90\u6e05\u5355\u6587\u4ef6\u4e2d\u6307\u5b9a\u5185\u7f51\u7f51\u5361 # \u641c\u7d22\u5230\u540d\u4e3a kube-flannel-ds-amd64 \u7684 DaemonSet\uff0c\u5728kube-flannel\u5bb9\u5668\u4e0b\u9762 $ vi kube-flannel.yml ...... containers: - name: kube-flannel image: quay.io/coreos/flannel:v0.11.0-amd64 command: - /opt/bin/flanneld args: - --ip-masq - --kube-subnet-mgr - --iface = eth0 # \u5982\u679c\u662f\u591a\u7f51\u5361\u7684\u8bdd\uff0c\u6307\u5b9a\u5185\u7f51\u7f51\u5361\u7684\u540d\u79f0 ...... $ kubectl apply -f kube-flannel.yml # \u5b89\u88c5 flannel \u7f51\u7edc\u63d2\u4ef6","title":"1.\u5b89\u88c5flannel"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#2master","text":"\u72b6\u6001\u4e3aNoteReady\u7684\u539f\u56e0\u662f\u6ca1\u6709\u5b89\u88c5\u7f51\u5361 kubectl get nodes # \u8f93\u51fa\u5982\u4e0b\u4fe1\u606f\uff1a NAME STATUS ROLES AGE VERSION centos801 Ready master 4h55m v1.19.4 centos802 Ready <none> 4h16m v1.19.4 centos803 Ready <none> 3h46m v1.19.4","title":"2.\u518d\u6b21\u5728master\u67e5\u770b\u8282\u70b9\u4fe1\u606f"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#_3","text":"","title":"\u5907\u6ce8\u5185\u5bb9\uff1a"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#_4","text":"\u5982\u679c\u4f60\u7684\u96c6\u7fa4\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86\u5176\u4ed6\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u8fdb\u884c\u91cd\u7f6e\uff1a $ kubeadm reset $ ifconfig cni0 down && ip link delete cni0 $ ifconfig flannel.1 down && ip link delete flannel.1 $ rm -rf /var/lib/cni/","title":"\u91cd\u7f6e\u7684\u65b9\u6cd5\uff1a"},{"location":"devopsNotes/kubernetes/kubeadm%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4%E6%8C%87%E5%8D%97/#_5","text":"#!/bin/bash kubeadm reset -f modprobe -r ipip lsmod rm -rf ~/.kube/ rm -rf /etc/kubernetes/ rm -rf /etc/systemd/system/kubelet.service.d rm -rf /etc/systemd/system/kubelet.service rm -rf /usr/bin/kube* rm -rf /etc/cni rm -rf /opt/cni rm -rf /var/lib/etcd rm -rf /var/etcd yum -y remove kubeadm kubectl kubelet","title":"\u5f7b\u5e95\u5378\u8f7d\u7684\u65b9\u6cd5"},{"location":"goNotes/go-base/No1-%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/","text":"No1-\u73af\u5883\u5b89\u88c5\u548c\u914d\u7f6e \u00b6 Note-Time: 2021\u5e7409\u670815\u65e5 1.\u4e0b\u8f7d\u5730\u5740\uff1a \u00b6 Go\u5b98\u7f51\u4e0b\u8f7d\u5730\u5740\uff1a https://golang.org/dl/ Go\u5b98\u65b9\u955c\u50cf\u7ad9\uff08\u63a8\u8350\uff09\uff1a https://golang.google.cn/dl/ 2.\u5b89\u88c5 \u00b6 linux\u73af\u5883 \u00b6 # \u4e0b\u8f7dtar\u5305 # \u4f7f\u7528 wget \u6216\u5728\u5b98\u65b9\u4e0b\u8f7d\u540e\u4e0a\u4f20\u81f3\u670d\u52a1\u5668 wget https://golang.org/dl/go1.16.2.linux-amd64.tar.gz # \u89e3\u538b\u81f3/usr/local/\u76ee\u5f55\u4e0b tar -C /usr/local -xzf go1.16.2.linux-amd64.tar.gz # \u914d\u7f6e\u73af\u5883\u53d8\u91cf vim ~/.bashrc export GOROOT = /root/go export GOPATH = /root/projects/go export PATH = $PATH : $GOROOT /bin: $GPPATH /bin # \u7f16\u8f91\u4fdd\u5b58\u5e76\u9000\u51favim\u540e\uff0c\u6267\u884c\uff1a source ~/.bashrc # \u67e5\u770bgo\u7684\u7248\u672c go version Mac\u73af\u5883 \u00b6 \u65b9\u5f0f\u4e00\uff1abrew\u5b89\u88c5 brew info go brew install go go version \u65b9\u5f0f\u4e8c\uff1a\u4e0b\u8f7d\u5b89\u88c5\u5305\u5b89\u88c5 #\u3000\u4e00\u822c\u9ed8\u8ba4\u5b89\u88c5\u5728\uff1ausers/local/go # \u914d\u7f6e\u73af\u5883\u53d8\u91cfvim .zshrc \u6216\u5176\u4ed6\u914d\u7f6e\u6587\u4ef6\uff08.bash_profile\uff09 export GOROOT = /usr/local/go export GOPATH = $HOME /workspace/go export PATH = $PATH : $GOROOT /bin: $GOPATH /bin/ export GO111MODULE = on export GOPROXY = https://goproxy.cn,direct # \u91cd\u8f7d\u914d\u7f6e\u6587\u4ef6 source ~/.zshrc Window\u73af\u5883 \u00b6 \u4e0b\u8f7d\u5b89\u88c5\u5305 \u8fd0\u884c\u5b89\u88c5\u5305\u6587\u4ef6 \u914d\u7f6e\u73af\u5883\u53d8\u91cfPATH \u91cd\u542f\u547d\u4ee4\u7a97\u53e3 go version \u6d4b\u8bd5\u5b89\u88c5\u7ed3\u679c 3:\u62d3\u5c55\u8865\u5145 \u00b6 \u73af\u5883\u53d8\u91cf\u4e2d\u7684\u91cd\u70b9\u540d\u8bcd \u00b6 GOROOT\uff1aGo\u8bed\u8a00\u5b89\u88c5\u6839\u76ee\u5f55\u7684\u8def\u5f84\uff0c\u4e5f\u5c31\u662fGO\u8bed\u8a00\u7684\u5b89\u88c5\u8def\u5f84\u3002 GOPATH\uff1a\u82e5\u5e72\u5de5\u4f5c\u533a\u76ee\u5f55\u7684\u8def\u5f84\u3002\u662f\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684\u5de5\u4f5c\u7a7a\u95f4\u3002 GOBIN\uff1aGO\u7a0b\u5e8f\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff08executable file\uff09\u7684\u8def\u5f84\u3002 Go1.14\u7248\u672c\u4e4b\u540e\uff0c\u90fd\u63a8\u8350\u4f7f\u7528 go mod \u6a21\u5f0f\u6765\u7ba1\u7406\u4f9d\u8d56\u73af\u5883\u4e86\uff0c\u4e5f\u4e0d\u518d\u5f3a\u5236\u6211\u4eec\u628a\u4ee3\u7801\u5fc5\u987b\u5199\u5728 GOPATH \u4e0b\u9762\u7684src\u76ee\u5f55\u4e86\uff0c\u4f60\u53ef\u4ee5\u5728\u4f60\u7535\u8111\u7684\u4efb\u610f\u4f4d\u7f6e\u7f16\u5199go\u4ee3\u7801\u3002\uff08\u7f51\u4e0a\u6709\u4e9b\u6559\u7a0b\u9002\u7528\u4e8e1.11\u7248\u672c\u4e4b\u524d\u3002\uff09 go\u7684\u57fa\u672c\u547d\u4ee4 \u00b6 go build main.go \u7f16\u8bd1\u6e90\u7801\u6587\u4ef6\u548c\u5f53\u524d\u76ee\u5f55\u7684\u4ee3\u7801\u5305 \u7f16\u8bd1\u547d\u4ee4\u6e90\u7801\u6587\u4ef6\u540e\uff0c\u521b\u5efa\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6 -o: output \u6307\u5b9a\u7f16\u8bd1\u8f93\u51fa\u7684\u540d\u79f0\uff0c\u4ee3\u66ff\u9ed8\u8ba4\u7684\u5305\u540d\u3002 -i: install \u5b89\u88c5\u4f5c\u4e3a\u76ee\u6807\u7684\u4f9d\u8d56\u5173\u7cfb\u7684\u5305 ( \u7528\u4e8e\u589e\u91cf\u7f16\u8bd1\u63d0\u901f ) \u3002 go run main.go \u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c Go \u7a0b\u5e8f\u3002 \u7528\u4e8e\u8fd0\u884c\u547d\u4ee4\u6e90\u7801\u6587\u4ef6 \u53ea\u80fd\u63a5\u53d7\u4e00\u4e2a\u547d\u4ee4\u6e90\u7801\u6587\u4ef6\u4ee5\u53ca\u82e5\u5e72\u4e2a\u5e93\u6e90\u7801\u6587\u4ef6\u4f5c\u4e3a\u6587\u4ef6\u53c2\u6570 -a \u5f3a\u5236\u7f16\u8bd1\u76f8\u5173\u4ee3\u7801 -p [ n ] \u5e76\u884c\u7f16\u8bd1 -v \u5c55\u793a\u88ab\u7f16\u8bd1\u7684\u4ee3\u7801\u5305\u540d\u79f0 -work \u4e0d\u5220\u9664\u521b\u5efa\u7684\u4e34\u65f6\u76ee\u5f55 go install \u7f16\u8bd1\u548c\u5b89\u88c5\u4ee3\u7801\u5305\u6216\u6e90\u7801\u6587\u4ef6 \u5b89\u88c5\u4ee3\u7801\u5305\u4f1a\u5728\u5de5\u4f5c\u533a/pkg/\u5e73\u53f0\u76ee\u5f55\u751f\u6210\u5f52\u6863\u6587\u4ef6 \u5b89\u88c5\u547d\u4ee4\u6e90\u7801\u6587\u4ef6\u4f1a\u5728 bin\u76ee\u5f55\u4e0b\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6 go get \u4ece\u8fdc\u7a0b\u4ee3\u7801\u4ed3\u5e93\u62c9\u53d6\u4ee3\u7801\u5305,\u62c9\u53d6\u5230 GOPATH \u7684 src \u76ee\u5f55\u4e2d -u \u66f4\u65b0\u5df2\u5b58\u5728\u7684\u4ee3\u7801\u5305 \u7528\u5bfc\u5165\u8def\u5f84\u7f16\u8bd1\u7a0b\u5e8f\u65f6\uff0cgo build \u547d\u4ee4\u4f1a\u4f7f\u7528 GOPATH \u7684\u8bbe\u7f6e\uff0c\u5728\u78c1\u76d8\u4e0a\u641c\u7d22\u8fd9\u4e2a\u5305\u3002\u4e8b\u5b9e\u4e0a\uff0c \u8fd9\u4e2a\u5bfc\u5165\u8def\u5f84\u4ee3\u8868\u4e00\u4e2a URL\uff0c\u6307\u5411 GitHub \u4e0a\u7684\u4ee3\u7801\u5e93\u3002\u5982\u679c\u8def\u5f84\u5305\u542b URL\uff0c\u53ef\u4ee5\u4f7f\u7528 Go \u5de5\u5177\u94fe\u4ece DVCS \u83b7\u53d6\u5305\uff0c\u5e76\u628a\u5305\u7684\u6e90\u4ee3\u7801\u4fdd\u5b58\u5728 GOPATH \u6307\u5411\u7684\u8def\u5f84\u91cc\u4e0e URL \u5339\u914d\u7684\u76ee\u5f55\u91cc\u3002\u8fd9\u4e2a\u83b7\u53d6\u8fc7\u7a0b \u4f7f\u7528 go get \u547d\u4ee4\u5b8c\u6210\u3002go get \u5c06\u83b7\u53d6\u4efb\u610f\u6307\u5b9a\u7684 URL \u7684\u5305\uff0c\u6216\u8005\u4e00\u4e2a\u5df2\u7ecf\u5bfc\u5165\u7684\u5305\u6240\u4f9d\u8d56\u7684\u5176 \u4ed6\u5305\u3002\u7531\u4e8ego get\u7684\u8fd9\u79cd\u9012\u5f52\u7279\u6027\uff0c\u8fd9\u4e2a\u547d\u4ee4\u4f1a\u626b\u63cf\u67d0\u4e2a\u5305\u7684\u6e90\u7801\u6811\uff0c\u83b7\u53d6\u80fd\u627e\u5230\u7684\u6240\u6709\u4f9d\u8d56\u5305\u3002 go\u7684\u76ee\u5f55\u8bf4\u660e \u00b6 \u5de5\u4f5c\u533a src\u76ee\u5f55: \u5b58\u653e\u6e90\u7801\u6587\u4ef6,\u4ee5\u4ee3\u7801\u5305\u4e3a\u7ec4\u7ec7\u5f62\u5f0f pkg\u76ee\u5f55: \u5b58\u653e\u6e90\u7801\u6587\u4ef6\u4ee5\u53ca\u5b89\u88c5\u540e\u7684\u7ed3\u679c\u6587\u4ef6 ( \u5f52\u6863\u6587\u4ef6 ) ,\u540d\u79f0\u4ee5 .a\u7ed3\u5c3e \u9690\u85cf\u73af\u5883\u53d8\u91cf $GOOS _ $GOARCH ,\u5982 linux_amd64 GOOS \u64cd\u4f5c\u7cfb\u7edf GOARCH \u8ba1\u7b97\u67b6\u6784 bin\u76ee\u5f55: \u5b58\u653ego\u7684\u53ef\u6267\u884c\u6587\u4ef6 \u4ec5\u4ec5\u5728\u6ca1\u6709\u8bbe\u7f6egoBin\u65f6\u751f\u6548 \u9879\u76ee\u76ee\u5f55 cmd\uff1a\u547d\u4ee4\u884c\u529f\u80fd\u96c6\u5408\u3002 configs\uff1a\u9879\u76ee\u7684\u914d\u7f6e\u6587\u4ef6\u96c6\u5408\u3002 deployments\uff1a\u6784\u5efaDocker\u955c\u50cf\u7b49\u6587\u4ef6\u96c6\u5408\u3002 docs\uff1a\u6587\u6863\u96c6\u5408\u3002 initializers\uff1a\u521d\u59cb\u5316\u6587\u4ef6\u96c6\u5408\u3002 logs\uff1a\u5b58\u50a8\u9879\u76ee\u65e5\u5fd7\u6587\u4ef6\u96c6\u5408\u3002 pkg\uff1a\u9879\u76ee\u8f85\u52a9\u529f\u80fd\uff0c\u6bd4\u5982\u4e2d\u95f4\u4ef6\u3001\u63d2\u4ef6\u7b49\u3002 scripts\uff1a\u811a\u672c\u6587\u4ef6\u96c6\u5408\u3002 src\uff1a\u9879\u76ee\u7684\u6838\u5fc3\u6587\u4ef6\uff0c\u6838\u5fc3\u7684\u5904\u7406\u73af\u8282\u3002 tools\uff1a\u9879\u76ee\u8f85\u52a9\u5de5\u5177\u3002 vendor\uff1a\u7b2c\u4e09\u65b9\u5e93\u6587\u4ef6\u96c6\u5408\u3002 main.go\uff1a\u9879\u76ee\u51fd\u6570\u5165\u53e3\u3002 Makefile\uff1a\u9879\u76ee\u6784\u5efa\u547d\u4ee4\u96c6\u5408\u3002 \u5f00\u53d1\u73af\u5883\u914d\u7f6e\u548c\u5207\u6362 \u00b6 \u5bfc\u5305\u987a\u5e8f\uff1a\u5148\u67e5\u627egopath/src/\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u7684\u5305\u662f\u5426\u6709\uff0c\u518d\u627egoroot/src/\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u7684\u5305\u662f\u5426\u6709 go \u7248\u672c\u4f4e\u4e8e1.14\u7684\u914d\u7f6e \u00b6 \u4e00\u5b9a\u8981\u5c06\u4ee3\u7801\u65b0\u5efa\u5230gopath\u76ee\u5f55\u4e4b\u4e0b\u7684src\u4e0b \u9700\u8981\u8bbe\u7f6e GO111MODULE=off go env # \u67e5\u770bgo\u7684\u73af\u5883\u53d8\u91cf go env -w GO111MODULE = off go \u7248\u672c\u9ad8\u4e8e1.14\u653e\u5165\u914d\u7f6e \u00b6 \u786e\u8ba4GO111MODULE=on \u662f\u5426\u8bbe\u7f6e \u4f7f\u7528go modules\u7684\u65b9\u5f0f\uff0c\u5728\u4efb\u610f\u76ee\u5f55\u4e0b\u65b0\u5efa\u9879\u76ee\uff08\u4e0d\u4e00\u5b9a\u975e\u8981\u653e\u5728gopath/src \u6216 goroot/src\u4e0b\uff09\uff0c\u90fd\u53ef\u4ee5\u8fd0\u884c\u4ee3\u7801 Note: \u5982\u679c\u4e4b\u524d\u7684\u9879\u76ee\u6ca1\u6709\u4f7f\u7528go modules\u7684\u65b9\u5f0f\u957f\u521b\u5efa\u9879\u76ee\uff0c\u5f53\u4e0b\u9700\u8981\u6539\u4e3a\u6b64\u6a21\u5f0f\uff0c\u5219\u6267\u884c\u4e0b\u5217\u64cd\u4f5c\u5373\u53ef\uff1a 1. \u5728\u9879\u76ee\u7684\u6839\u8def\u5f84\u4e0b\u65b0\u5efago.mod \u6587\u4ef6 2. \u5728go.mod\u6587\u4ef6\u4e2d\u5199\u5165 module \"PackageTest go 1.16 \u603b\u7ed3 \u80fd\u7528go modules\u5c31\u7528modules ,\u4e0d\u7528\u53bb\u8003\u8651\u4ee5\u524d\u7684\u5f00\u53d1\u6a21\u5f0f** \u5373\u4f7f\u4f7f\u7528\u4e86\u4ee5\u524d\u7684\u5f00\u53d1\u6a21\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u81ea\u52a8\u8bbe\u7f6e\u4e3a\u73b0\u5728\u7684modules\u6a21\u5f0f \u8bbe\u7f6e\u4ee3\u7406\u52a0\u901f \u00b6 go env -w GOPROXY = https://goproxy.io,direct go env -w GO111MODULE = on \u63a8\u8350\u63d2\u4ef6\u5b89\u88c5 \u00b6 go fmt Goimports","title":"No1-\u73af\u5883\u5b89\u88c5\u548c\u914d\u7f6e"},{"location":"goNotes/go-base/No1-%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/#no1-","text":"Note-Time: 2021\u5e7409\u670815\u65e5","title":"No1-\u73af\u5883\u5b89\u88c5\u548c\u914d\u7f6e"},{"location":"goNotes/go-base/No1-%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/#1","text":"Go\u5b98\u7f51\u4e0b\u8f7d\u5730\u5740\uff1a https://golang.org/dl/ Go\u5b98\u65b9\u955c\u50cf\u7ad9\uff08\u63a8\u8350\uff09\uff1a https://golang.google.cn/dl/","title":"1.\u4e0b\u8f7d\u5730\u5740\uff1a"},{"location":"goNotes/go-base/No1-%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/#2","text":"","title":"2.\u5b89\u88c5"},{"location":"goNotes/go-base/No1-%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/#linux","text":"# \u4e0b\u8f7dtar\u5305 # \u4f7f\u7528 wget \u6216\u5728\u5b98\u65b9\u4e0b\u8f7d\u540e\u4e0a\u4f20\u81f3\u670d\u52a1\u5668 wget https://golang.org/dl/go1.16.2.linux-amd64.tar.gz # \u89e3\u538b\u81f3/usr/local/\u76ee\u5f55\u4e0b tar -C /usr/local -xzf go1.16.2.linux-amd64.tar.gz # \u914d\u7f6e\u73af\u5883\u53d8\u91cf vim ~/.bashrc export GOROOT = /root/go export GOPATH = /root/projects/go export PATH = $PATH : $GOROOT /bin: $GPPATH /bin # \u7f16\u8f91\u4fdd\u5b58\u5e76\u9000\u51favim\u540e\uff0c\u6267\u884c\uff1a source ~/.bashrc # \u67e5\u770bgo\u7684\u7248\u672c go version","title":"linux\u73af\u5883"},{"location":"goNotes/go-base/No1-%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/#mac","text":"\u65b9\u5f0f\u4e00\uff1abrew\u5b89\u88c5 brew info go brew install go go version \u65b9\u5f0f\u4e8c\uff1a\u4e0b\u8f7d\u5b89\u88c5\u5305\u5b89\u88c5 #\u3000\u4e00\u822c\u9ed8\u8ba4\u5b89\u88c5\u5728\uff1ausers/local/go # \u914d\u7f6e\u73af\u5883\u53d8\u91cfvim .zshrc \u6216\u5176\u4ed6\u914d\u7f6e\u6587\u4ef6\uff08.bash_profile\uff09 export GOROOT = /usr/local/go export GOPATH = $HOME /workspace/go export PATH = $PATH : $GOROOT /bin: $GOPATH /bin/ export GO111MODULE = on export GOPROXY = https://goproxy.cn,direct # \u91cd\u8f7d\u914d\u7f6e\u6587\u4ef6 source ~/.zshrc","title":"Mac\u73af\u5883"},{"location":"goNotes/go-base/No1-%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/#window","text":"\u4e0b\u8f7d\u5b89\u88c5\u5305 \u8fd0\u884c\u5b89\u88c5\u5305\u6587\u4ef6 \u914d\u7f6e\u73af\u5883\u53d8\u91cfPATH \u91cd\u542f\u547d\u4ee4\u7a97\u53e3 go version \u6d4b\u8bd5\u5b89\u88c5\u7ed3\u679c","title":"Window\u73af\u5883"},{"location":"goNotes/go-base/No1-%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/#3","text":"","title":"3:\u62d3\u5c55\u8865\u5145"},{"location":"goNotes/go-base/No1-%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/#_1","text":"GOROOT\uff1aGo\u8bed\u8a00\u5b89\u88c5\u6839\u76ee\u5f55\u7684\u8def\u5f84\uff0c\u4e5f\u5c31\u662fGO\u8bed\u8a00\u7684\u5b89\u88c5\u8def\u5f84\u3002 GOPATH\uff1a\u82e5\u5e72\u5de5\u4f5c\u533a\u76ee\u5f55\u7684\u8def\u5f84\u3002\u662f\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684\u5de5\u4f5c\u7a7a\u95f4\u3002 GOBIN\uff1aGO\u7a0b\u5e8f\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff08executable file\uff09\u7684\u8def\u5f84\u3002 Go1.14\u7248\u672c\u4e4b\u540e\uff0c\u90fd\u63a8\u8350\u4f7f\u7528 go mod \u6a21\u5f0f\u6765\u7ba1\u7406\u4f9d\u8d56\u73af\u5883\u4e86\uff0c\u4e5f\u4e0d\u518d\u5f3a\u5236\u6211\u4eec\u628a\u4ee3\u7801\u5fc5\u987b\u5199\u5728 GOPATH \u4e0b\u9762\u7684src\u76ee\u5f55\u4e86\uff0c\u4f60\u53ef\u4ee5\u5728\u4f60\u7535\u8111\u7684\u4efb\u610f\u4f4d\u7f6e\u7f16\u5199go\u4ee3\u7801\u3002\uff08\u7f51\u4e0a\u6709\u4e9b\u6559\u7a0b\u9002\u7528\u4e8e1.11\u7248\u672c\u4e4b\u524d\u3002\uff09","title":"\u73af\u5883\u53d8\u91cf\u4e2d\u7684\u91cd\u70b9\u540d\u8bcd"},{"location":"goNotes/go-base/No1-%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/#go","text":"go build main.go \u7f16\u8bd1\u6e90\u7801\u6587\u4ef6\u548c\u5f53\u524d\u76ee\u5f55\u7684\u4ee3\u7801\u5305 \u7f16\u8bd1\u547d\u4ee4\u6e90\u7801\u6587\u4ef6\u540e\uff0c\u521b\u5efa\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6 -o: output \u6307\u5b9a\u7f16\u8bd1\u8f93\u51fa\u7684\u540d\u79f0\uff0c\u4ee3\u66ff\u9ed8\u8ba4\u7684\u5305\u540d\u3002 -i: install \u5b89\u88c5\u4f5c\u4e3a\u76ee\u6807\u7684\u4f9d\u8d56\u5173\u7cfb\u7684\u5305 ( \u7528\u4e8e\u589e\u91cf\u7f16\u8bd1\u63d0\u901f ) \u3002 go run main.go \u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c Go \u7a0b\u5e8f\u3002 \u7528\u4e8e\u8fd0\u884c\u547d\u4ee4\u6e90\u7801\u6587\u4ef6 \u53ea\u80fd\u63a5\u53d7\u4e00\u4e2a\u547d\u4ee4\u6e90\u7801\u6587\u4ef6\u4ee5\u53ca\u82e5\u5e72\u4e2a\u5e93\u6e90\u7801\u6587\u4ef6\u4f5c\u4e3a\u6587\u4ef6\u53c2\u6570 -a \u5f3a\u5236\u7f16\u8bd1\u76f8\u5173\u4ee3\u7801 -p [ n ] \u5e76\u884c\u7f16\u8bd1 -v \u5c55\u793a\u88ab\u7f16\u8bd1\u7684\u4ee3\u7801\u5305\u540d\u79f0 -work \u4e0d\u5220\u9664\u521b\u5efa\u7684\u4e34\u65f6\u76ee\u5f55 go install \u7f16\u8bd1\u548c\u5b89\u88c5\u4ee3\u7801\u5305\u6216\u6e90\u7801\u6587\u4ef6 \u5b89\u88c5\u4ee3\u7801\u5305\u4f1a\u5728\u5de5\u4f5c\u533a/pkg/\u5e73\u53f0\u76ee\u5f55\u751f\u6210\u5f52\u6863\u6587\u4ef6 \u5b89\u88c5\u547d\u4ee4\u6e90\u7801\u6587\u4ef6\u4f1a\u5728 bin\u76ee\u5f55\u4e0b\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6 go get \u4ece\u8fdc\u7a0b\u4ee3\u7801\u4ed3\u5e93\u62c9\u53d6\u4ee3\u7801\u5305,\u62c9\u53d6\u5230 GOPATH \u7684 src \u76ee\u5f55\u4e2d -u \u66f4\u65b0\u5df2\u5b58\u5728\u7684\u4ee3\u7801\u5305 \u7528\u5bfc\u5165\u8def\u5f84\u7f16\u8bd1\u7a0b\u5e8f\u65f6\uff0cgo build \u547d\u4ee4\u4f1a\u4f7f\u7528 GOPATH \u7684\u8bbe\u7f6e\uff0c\u5728\u78c1\u76d8\u4e0a\u641c\u7d22\u8fd9\u4e2a\u5305\u3002\u4e8b\u5b9e\u4e0a\uff0c \u8fd9\u4e2a\u5bfc\u5165\u8def\u5f84\u4ee3\u8868\u4e00\u4e2a URL\uff0c\u6307\u5411 GitHub \u4e0a\u7684\u4ee3\u7801\u5e93\u3002\u5982\u679c\u8def\u5f84\u5305\u542b URL\uff0c\u53ef\u4ee5\u4f7f\u7528 Go \u5de5\u5177\u94fe\u4ece DVCS \u83b7\u53d6\u5305\uff0c\u5e76\u628a\u5305\u7684\u6e90\u4ee3\u7801\u4fdd\u5b58\u5728 GOPATH \u6307\u5411\u7684\u8def\u5f84\u91cc\u4e0e URL \u5339\u914d\u7684\u76ee\u5f55\u91cc\u3002\u8fd9\u4e2a\u83b7\u53d6\u8fc7\u7a0b \u4f7f\u7528 go get \u547d\u4ee4\u5b8c\u6210\u3002go get \u5c06\u83b7\u53d6\u4efb\u610f\u6307\u5b9a\u7684 URL \u7684\u5305\uff0c\u6216\u8005\u4e00\u4e2a\u5df2\u7ecf\u5bfc\u5165\u7684\u5305\u6240\u4f9d\u8d56\u7684\u5176 \u4ed6\u5305\u3002\u7531\u4e8ego get\u7684\u8fd9\u79cd\u9012\u5f52\u7279\u6027\uff0c\u8fd9\u4e2a\u547d\u4ee4\u4f1a\u626b\u63cf\u67d0\u4e2a\u5305\u7684\u6e90\u7801\u6811\uff0c\u83b7\u53d6\u80fd\u627e\u5230\u7684\u6240\u6709\u4f9d\u8d56\u5305\u3002","title":"go\u7684\u57fa\u672c\u547d\u4ee4"},{"location":"goNotes/go-base/No1-%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/#go_1","text":"\u5de5\u4f5c\u533a src\u76ee\u5f55: \u5b58\u653e\u6e90\u7801\u6587\u4ef6,\u4ee5\u4ee3\u7801\u5305\u4e3a\u7ec4\u7ec7\u5f62\u5f0f pkg\u76ee\u5f55: \u5b58\u653e\u6e90\u7801\u6587\u4ef6\u4ee5\u53ca\u5b89\u88c5\u540e\u7684\u7ed3\u679c\u6587\u4ef6 ( \u5f52\u6863\u6587\u4ef6 ) ,\u540d\u79f0\u4ee5 .a\u7ed3\u5c3e \u9690\u85cf\u73af\u5883\u53d8\u91cf $GOOS _ $GOARCH ,\u5982 linux_amd64 GOOS \u64cd\u4f5c\u7cfb\u7edf GOARCH \u8ba1\u7b97\u67b6\u6784 bin\u76ee\u5f55: \u5b58\u653ego\u7684\u53ef\u6267\u884c\u6587\u4ef6 \u4ec5\u4ec5\u5728\u6ca1\u6709\u8bbe\u7f6egoBin\u65f6\u751f\u6548 \u9879\u76ee\u76ee\u5f55 cmd\uff1a\u547d\u4ee4\u884c\u529f\u80fd\u96c6\u5408\u3002 configs\uff1a\u9879\u76ee\u7684\u914d\u7f6e\u6587\u4ef6\u96c6\u5408\u3002 deployments\uff1a\u6784\u5efaDocker\u955c\u50cf\u7b49\u6587\u4ef6\u96c6\u5408\u3002 docs\uff1a\u6587\u6863\u96c6\u5408\u3002 initializers\uff1a\u521d\u59cb\u5316\u6587\u4ef6\u96c6\u5408\u3002 logs\uff1a\u5b58\u50a8\u9879\u76ee\u65e5\u5fd7\u6587\u4ef6\u96c6\u5408\u3002 pkg\uff1a\u9879\u76ee\u8f85\u52a9\u529f\u80fd\uff0c\u6bd4\u5982\u4e2d\u95f4\u4ef6\u3001\u63d2\u4ef6\u7b49\u3002 scripts\uff1a\u811a\u672c\u6587\u4ef6\u96c6\u5408\u3002 src\uff1a\u9879\u76ee\u7684\u6838\u5fc3\u6587\u4ef6\uff0c\u6838\u5fc3\u7684\u5904\u7406\u73af\u8282\u3002 tools\uff1a\u9879\u76ee\u8f85\u52a9\u5de5\u5177\u3002 vendor\uff1a\u7b2c\u4e09\u65b9\u5e93\u6587\u4ef6\u96c6\u5408\u3002 main.go\uff1a\u9879\u76ee\u51fd\u6570\u5165\u53e3\u3002 Makefile\uff1a\u9879\u76ee\u6784\u5efa\u547d\u4ee4\u96c6\u5408\u3002","title":"go\u7684\u76ee\u5f55\u8bf4\u660e"},{"location":"goNotes/go-base/No1-%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/#_2","text":"\u5bfc\u5305\u987a\u5e8f\uff1a\u5148\u67e5\u627egopath/src/\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u7684\u5305\u662f\u5426\u6709\uff0c\u518d\u627egoroot/src/\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u7684\u5305\u662f\u5426\u6709","title":"\u5f00\u53d1\u73af\u5883\u914d\u7f6e\u548c\u5207\u6362"},{"location":"goNotes/go-base/No1-%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/#go-114","text":"\u4e00\u5b9a\u8981\u5c06\u4ee3\u7801\u65b0\u5efa\u5230gopath\u76ee\u5f55\u4e4b\u4e0b\u7684src\u4e0b \u9700\u8981\u8bbe\u7f6e GO111MODULE=off go env # \u67e5\u770bgo\u7684\u73af\u5883\u53d8\u91cf go env -w GO111MODULE = off","title":"go \u7248\u672c\u4f4e\u4e8e1.14\u7684\u914d\u7f6e"},{"location":"goNotes/go-base/No1-%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/#go-114_1","text":"\u786e\u8ba4GO111MODULE=on \u662f\u5426\u8bbe\u7f6e \u4f7f\u7528go modules\u7684\u65b9\u5f0f\uff0c\u5728\u4efb\u610f\u76ee\u5f55\u4e0b\u65b0\u5efa\u9879\u76ee\uff08\u4e0d\u4e00\u5b9a\u975e\u8981\u653e\u5728gopath/src \u6216 goroot/src\u4e0b\uff09\uff0c\u90fd\u53ef\u4ee5\u8fd0\u884c\u4ee3\u7801 Note: \u5982\u679c\u4e4b\u524d\u7684\u9879\u76ee\u6ca1\u6709\u4f7f\u7528go modules\u7684\u65b9\u5f0f\u957f\u521b\u5efa\u9879\u76ee\uff0c\u5f53\u4e0b\u9700\u8981\u6539\u4e3a\u6b64\u6a21\u5f0f\uff0c\u5219\u6267\u884c\u4e0b\u5217\u64cd\u4f5c\u5373\u53ef\uff1a 1. \u5728\u9879\u76ee\u7684\u6839\u8def\u5f84\u4e0b\u65b0\u5efago.mod \u6587\u4ef6 2. \u5728go.mod\u6587\u4ef6\u4e2d\u5199\u5165 module \"PackageTest go 1.16 \u603b\u7ed3 \u80fd\u7528go modules\u5c31\u7528modules ,\u4e0d\u7528\u53bb\u8003\u8651\u4ee5\u524d\u7684\u5f00\u53d1\u6a21\u5f0f** \u5373\u4f7f\u4f7f\u7528\u4e86\u4ee5\u524d\u7684\u5f00\u53d1\u6a21\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u81ea\u52a8\u8bbe\u7f6e\u4e3a\u73b0\u5728\u7684modules\u6a21\u5f0f","title":"go \u7248\u672c\u9ad8\u4e8e1.14\u653e\u5165\u914d\u7f6e"},{"location":"goNotes/go-base/No1-%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/#_3","text":"go env -w GOPROXY = https://goproxy.io,direct go env -w GO111MODULE = on","title":"\u8bbe\u7f6e\u4ee3\u7406\u52a0\u901f"},{"location":"goNotes/go-base/No1-%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/#_4","text":"go fmt Goimports","title":"\u63a8\u8350\u63d2\u4ef6\u5b89\u88c5"},{"location":"goNotes/go-base/No2-%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E7%82%B9/","text":"No2-\u57fa\u672c\u77e5\u8bc6\u70b9 \u00b6 Note-Time: 2021\u5e7409\u670816\u65e5 25\u4e2a\u5173\u952e\u5b57 \u00b6 break default func interface select case defer go map struct chan else goto package switch const fallthrough if range type continue for import return var \u5185\u5efa\u7c7b\u578b \u00b6 int int8 int16 int32 int64 uint uint8 uint16 uint32 uint64 uintptr float32 float64 complex128 complex64 bool byte ( uint8 ) rune ( int32 ) string error \u5185\u5efa\u5e38\u91cf \u00b6 true false iota nil \u5185\u5efa\u51fd\u6570 \u00b6 make len cap new append copy close delete complex real imag panic recover \u5e38\u7528\u8f6c\u6362\u7b26 \u00b6 \u683c\u5f0f \u8bf4\u660e %% \u4e00\u4e2a%\u5b57\u9762\u91cf %b \u4e00\u4e2a\u4e8c\u8fdb\u5236\u6574\u6570\u503c\uff08\u57fa\u6570\u4e3a2\uff09\uff0c\u6216\u662f\u4e00\u4e2a\uff08\u9ad8\u7ea7\u7684\uff09\u7528\u79d1\u5b66\u8ba1\u6570\u6cd5\u8868\u793a\u7684\u6307\u6570\u4e3a2\u7684\u6d6e\u70b9\u6570 %c \u5b57\u7b26\u578b\uff0c\u53ef\u4ee5\u5427\u8f93\u5165\u7684\u6570\u5b57\u6309\u7167ASCII\u7801\u76f8\u5e94\u8f6c\u6362\u4e3a\u5bf9\u5e94\u5b57\u7b26 %d \u4e00\u4e2a\u5341\u8fdb\u5236\u6570\u503c\uff08\u57fa\u6570\u4e3a10\uff09 %e \u4ee5\u79d1\u5b66\u8ba1\u6570\u6cd5e\u8868\u793a\u7684\u6d6e\u70b9\u6570\u6216\u8005\u590d\u6570\u503c %E \u4ee5\u79d1\u5b66\u8ba1\u6570\u6cd5E\u8868\u793a\u7684\u6d6e\u70b9\u6570\u6216\u8005\u590d\u6570\u503c %f \u4ee5\u6807\u51c6\u8ba1\u6570\u6cd5\u8868\u793a\u7684\u6d6e\u70b9\u6570\u6216\u8005\u590d\u6570\u503c %g \u4ee5%e\u6216%f\u8868\u793a\u7684\u6d6e\u70b9\u6570\u6216\u590d\u6570\uff0c\u4efb\u4f55\u4e00\u4e2a\u90fd\u4ee5\u6700\u4e3a\u7d27\u51d1\u7684\u65b9\u5f0f\u8f93\u51fa %G \u4ee5%E\u6216%f\u8868\u793a\u7684\u6d6e\u70b9\u6570\u6216\u590d\u6570\uff0c\u4efb\u4f55\u4e00\u4e2a\u90fd\u4ee5\u6700\u4e3a\u7d27\u51d1\u7684\u65b9\u5f0f\u8f93\u51fa %o \u4e00\u4e2a\u4ee5\u516b\u8fdb\u5236\u8868\u793a\u7684\u6570\u5b57\uff08\u57fa\u6570\u4e3a8\uff09 %p \u4ee5\u5341\u516d\u8fdb\u5236\uff08\u57fa\u6570\u4e3a16\uff09\u8868\u793a\u7684\u4e00\u4e2a\u503c\u7684\u5730\u5740\uff0c\u524d\u7f00\u4e3a0x\uff0c\u5b57\u6bcd\u4f7f\u7528\u5c0f\u5199\u7684a-f\u8868\u793a %q \u4f7f\u7528Go\u8bed\u6cd5\u4ee5\u53ca\u5fc5\u987b\u65f6\u4f7f\u7528\u8f6c\u4e49\uff0c\u4ee5\u53cc\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u5b57\u7b26\u4e32\u6216\u8005\u5b57\u8282\u5207\u7247 %s \u5b57\u7b26\u4e32\u3002\u8f93\u51fa\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u76f4\u81f3\u5b57\u7b26\u4e32\u4e2d\u7684\u7a7a\u5b57\u7b26\uff08\u5b57\u7b26\u4e32\u4ee5'\\0'\u7ed3\u5c3e\uff0c\u8fd9\u4e2a'\\0'\u5373\u8868\u793a\u7a7a\u5b57\u7b26\uff09 %t \u4ee5true\u6216\u8005false\u8f93\u51fa\u7684\u5e03\u5c14\u503c %T \u4f7f\u7528Go\u8bed\u6cd5\u8f93\u51fa\u7684\u503c\u7684\u7c7b\u578b %U \u4e00\u4e2a\u7528Unicode\u8868\u793a\u6cd5\u8868\u793a\u7684\u6574\u578b\u7801\u70b9\uff0c\u9ed8\u8ba4\u503c\u4e3a4\u4e2a\u6570\u5b57\u5b57\u7b26 %v \u4f7f\u7528\u9ed8\u8ba4\u683c\u5f0f\u8f93\u51fa\u7684\u5185\u7f6e\u6216\u81ea\u5b9a\u4e49\u7c7b\u578b\u7684\u503c\uff0c\u6216\u8005\u662f\u4f7f\u7528\u5176\u7c7b\u578b\u7684String()\u65b9\u5f0f\u8f93\u51fa\u7684\u81ea\u5b9a\u4e49\u503c\uff0c\u5982\u679c\u8be5\u65b9\u6cd5\u5b58\u5728\u7684\u8bdd %x \u4ee5\u5341\u516d\u8fdb\u5236\u8868\u793a\u7684\u6574\u578b\u503c\uff08\u57fa\u6570\u4e3a\u5341\u516d\uff09\uff0c\u6570\u5b57a-f\u4f7f\u7528\u5c0f\u5199\u8868\u793a %X \u4ee5\u5341\u516d\u8fdb\u5236\u8868\u793a\u7684\u6574\u578b\u503c\uff08\u57fa\u6570\u4e3a\u5341\u516d\uff09\uff0c\u6570\u5b57A-F\u4f7f\u7528\u5927\u5199\u8868\u793a \u5173\u4e8epackage\u7684\u7406\u89e3 \u00b6 \u6982\u5ff5\u7684\u7406\u89e3 \u00b6 \u548cpython\u4e00\u6837\uff0c\u628a\u76f8\u540c\u529f\u80fd\u7684\u4ee3\u7801\u653e\u5230\u4e00\u4e2a\u76ee\u5f55\uff0c\u79f0\u4e4b\u4e3a\u5305\uff08package\uff09 \u6bcf\u4e2ago\u7a0b\u5e8f\u90fd\u662f\u7531\u5305\u6784\u6210\uff0c\u4e00\u822c\u4ee5\u5305\u4e3a\u5355\u4f4d\u8fdb\u884c\u8fd0\u884c main\u5305\uff08main\u51fd\u6570\uff09\u662f\u7528\u6765\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5e76\u4e14\u6bcf\u4e2a\u7a0b\u5e8f\u6709\u4e14\u53ea\u6709\u4e00\u4e2amain\u5305 \u5305\u7684\u4e3b\u8981\u7528\u9014\u662f\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u590d\u7528\u6027 \u5bfc\u5305\u7684\u65b9\u5f0f \u00b6 \u533f\u540d\u5bfc\u5165( _ ) _ \"learngo/init/lib2\" //\u8868\u793a\u5bfc\u5165\u8fd9\u4e2a\u5305\uff0c\u6267\u884c\u5bfc\u5165(\u8c03\u7528)\u5305\u4e2d\u7684init()\u4f46\u662f\u4e0d\u5f15\u7528\u8be5\u5305\u4e2d\u7684\u5143\u7d20. //fg: \u5e94\u7528\u573a\u666f\uff1a\u6bd4\u5982\u6570\u6570\u636e\u5e93\u9a71\u52a8\u7684\u6ce8\u518c \u5305\u522b\u540d lb2 \"learngo/init/lib2\" //\u53ef\u76f4\u63a5\u7528lb2\u4ee3\u66fflib2\u7684\u5305\u540d\u8c03\u7528\u5305\u4e2d\u5bf9\u5916\u7684\u51fd\u6570 \u5d4c\u5165\u5f0f\u5bfc\u5165 . \"learngo/init/lib2\" //\u76f8\u5f53\u4e8elib2\u4e2d\u7684\u4ee3\u7801\u76f4\u63a5\u5bfc\u5165\u5f53\u524d\u5305\uff0c\u53ef\u76f4\u63a5\u4f7f\u7528lib2\u4e2d\u7684\u51fd\u6570\uff0c\u65e0\u9700\u524d\u7f00\u3002\u591a\u4e2a\u5d4c\u5165\u5f0f\u5bfc\u5165\u5bb9\u6613\u4ea7\u751f\u53d8\u91cf\u540d\u91cd\u590d\u9519\u8bef\u3002 init\u51fd\u6570\u7684\u7406\u89e3 \u00b6 package\u4ee5\u9012\u5f52\u7684\u5f62\u5f0f\u5bfc\u5165\uff0cinit()\u76f8\u5f53\u4e8ereturn\u8bed\u53e5\u56de\u6eaf\u5230\u4e0a\u4e00\u7ea7\u8c03\u7528\uff0c\u4e00\u822c\u7528\u6765\u521d\u59cb\u5316\u5305\u5185\u53c2\u6570\u3002 main\u51fd\u6570\u7684\u4f7f\u7528 \u00b6 //1)go\u8bed\u8a00\u4ee5\u5305\u4f5c\u4e3a\u7ba1\u7406\u5355\u4f4d //2)\u6bcf\u4e2a\u6587\u4ef6\u5fc5\u987b\u5148\u58f0\u660e\u5305 //3)\u7a0b\u5e8f\u5fc5\u987b\u6709\u4e00\u4e2amain\u5305\uff08\u91cd\u8981\uff09 package main //go\u8bed\u8a00\u4ee5\u53cc\u659c\u6760\u4f5c\u4e3a\u6ce8\u91ca\u7684\u6807\u8bc6 /* \u8fd9\u662f\u5757\u6ce8\u91ca \u53ef\u4ee5\u591a\u6bb5\u6ce8\u91ca */ import \"fmt\" //\u5165\u53e3\u51fd\u6570\uff0c\u6709\u4e14\u53ea\u6709\u4e00\u4e2a func main () { //\u5de6\u62ec\u53f7\u5fc5\u987b\u4e0e\u51fd\u6570\u540d\u540c\u884c\uff0c\u5426\u5219\u4f1a\u62a5\u9519 //\u6253\u5370 //\u201chello go\"\u6253\u5370\u5230\u5c4f\u5e55\uff0cPrintln()\u4f1a\u81ea\u52a8\u6362\u884c //\u8c03\u7528\u51fd\u6570\uff0c\u5927\u90e8\u5206\u90fd\u9700\u8981\u5bfc\u5165\u5305 fmt . Println ( \"hello go\" ) //go\u8bed\u8a00\u7ed3\u5c3e\u6ca1\u6709\u5206\u53f7 fmt . Println ( \"hello haha\" ) } \u547d\u4ee4\u89c4\u8303 \u00b6 \u6807\u8bc6\u7b26\u7684\u547d\u540d\u8981\u5c3d\u91cf\u91c7\u53d6\u7b80\u77ed\u4e14\u6709\u610f\u4e49\u3002 \u4e3a\u53d8\u91cf\u3001\u51fd\u6570\u3001\u5e38\u91cf\u547d\u540d\u65f6\u91c7\u7528\u9a7c\u5cf0\u547d\u540d\u6cd5\uff0c\u4f8b\u5982 stuName\u3001getVal\u3002 \u5982\u679c\u9996\u5b57\u6bcd\u5927\u5199\uff0c\u5219\u8868\u793a\u5b83\u53ef\u4ee5\u88ab\u5176\u5b83\u7684\u5305\u8bbf\u95ee\uff08\u7c7b\u4f3c\u4e8e Java \u4e2d\u7684 public\uff09\uff1b\u5982\u679c\u9996\u5b57\u6bcd\u5c0f\u5199\uff0c\u5219\u8868\u793a\u5b83\u53ea\u80fd\u5728\u672c\u5305\u4e2d\u4f7f\u7528 (\u7c7b\u4f3c\u4e8e Java \u4e2d private\uff09\u3002 \u53d8\u91cf\u58f0\u660e\u7684\u591a\u6837\u6027 \u00b6 Var \u5173\u952e\u5b57\u58f0\u660e \u00b6 \u53c8\u79f0\u53d8\u91cf\u5b8c\u6574\u58f0\u660e var \u53d8\u91cf\u540d\u79f0 \u6570\u636e\u7c7b\u578b [ = \u53d8\u91cf\u521d\u59cb\u503c ] //\u65b9\u5f0f\u4e00 // fg: var name string var \u53d8\u91cf\u540d1 , \u53d8\u91cf\u540d2 < \u53d8\u91cf\u7c7b\u578b > = \u521d\u59cb\u503c1 , \u521d\u59cb\u503c2 //\u65b9\u5f0f\u4e8c //fg: var a , b = 2 , 3 var ( //\u65b9\u5f0f\u4e09 name1 = initialvalue1 , name2 = initialvalue2 ) := \u7684\u65b9\u5f0f\u58f0\u660e \u00b6 \u53c8\u79f0\u77ed\u53d8\u91cf\u58f0\u660e name := initialvalue //fg: a := 1 //\u591a\u53d8\u91cf b , c := 2 , 3 name , age := \"xiang\" , 18 \u6b64\u65b9\u5f0f\u53ea\u9002\u7528\u4e8e\u51fd\u6570/\u65b9\u6cd5\u5185\u90e8\uff0c\u6216if/for/switch/\u7684\u521d\u59cb\u5316\u8bed\u53e5\u4e2d \u5728\u51fd\u6570\u5916\u90e8\u65e0\u6cd5\u9002\u7528\uff08\u7f16\u8bd1\u4e0d\u901a\u8fc7\uff09 _ \u5ffd\u7565\u53d8\u91cf \u00b6 _\uff08\u4e0b\u5212\u7ebf\uff09\u662f\u4e2a\u7279\u6b8a\u7684\u53d8\u91cf\u540d\uff0c\u4efb\u4f55\u8d4b\u4e88\u5b83\u7684\u503c\u90fd\u4f1a\u88ab\u4e22\u5f03 _ , b := 1 , 2 //\u5c06\u503c2\u8d4b\u4e88b\uff0c\u5e76\u540c\u65f6\u4e22\u5f031 \u53d8\u91cf\u58f0\u660e\u4e2d\u7684\u7c7b\u578b\u63a8\u65ad \u00b6 \u5982\u679c\u53d8\u91cf\u6709\u521d\u59cb\u503c\uff0c\u90a3\u4e48 Go \u80fd\u591f\u81ea\u52a8\u63a8\u65ad\u5177\u6709\u521d\u59cb\u503c\u7684\u53d8\u91cf\u7684\u7c7b\u578b \u5982\u679c\u53d8\u91cf\u6709\u521d\u59cb\u503c\uff0c\u5c31\u53ef\u4ee5\u5728\u53d8\u91cf\u58f0\u660e\u4e2d\u7701\u7565 type \u3002 \u5982\u679c\u53d8\u91cf\u58f0\u660e\u7684\u8bed\u6cd5\u662f var name = initialvalue\uff0cGo \u80fd\u591f\u6839\u636e\u521d\u59cb\u503c\u81ea\u52a8\u63a8\u65ad\u53d8\u91cf\u7684\u7c7b\u578b\u3002 \u53d8\u91cf\u58f0\u660e\u6ce8\u610f\u4e8b\u9879 \u00b6 GO\u58f0\u660e\u7684\u53d8\u91cf\u5c31\u4f1a\u7acb\u5373\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u4f1a\u88ab\u9ed8\u8ba4\u521d\u59cb\u5316\u503c \u82e5\u4e00\u4e2a\u53d8\u91cf\u672a\u88ab\u8d4b\u503c\uff0cGo \u4f1a\u81ea\u52a8\u5730\u5c06\u5176\u521d\u59cb\u5316\uff0c\u8d4b\u503c\u8be5\u53d8\u91cf\u7c7b\u578b\u7684\u96f6\u503c\uff08Zero Value) \u53d8\u91cf\u58f0\u660e\u7684practice-code \u00b6 package main import \"fmt\" func main () { //\u53d8\u91cf\u7684\u5b9a\u4e49 //\u9759\u6001\u7684\u8bed\u8a00\u7684\u53d8\u91cf\u548c\u52a8\u6001\u8bed\u8a00\u7684\u53d8\u91cf\u5b9a\u4e49\u5dee\u5f02\u5f88\u5927 //1. \u6700\u57fa\u7840\u7684\u53d8\u91cf\u5b9a\u4e49 //var i int // int i //i = 20 //fmt.Println(i) //\u5b9a\u4e49\u5e76\u521d\u59cb\u5316 //var i int = 10 //fmt.Println(i) //2. \u6839\u636e\u503c\u81ea\u884c\u5224\u65ad\u53d8\u91cf\u7c7b\u578b\uff08\u7c7b\u578b\u63a8\u65ad\uff09 //var i = 100 //\u5e76\u6ca1\u6709\u8bbe\u7f6e\u7c7b\u578b //fmt.Println(i) // 3. go\u8bed\u8a00\u65e2\u7136\u4e00\u95e8\u65b0\u8bed\u8a00 \u7701\u7565var //i := 100 //fmt.Println(i) //var a int = 10 //var b = 10 //c := 10 //fmt.Println(a, b , c) //\u591a\u53d8\u91cf\u5b9a\u4e49 //var a, b, c int //a, b, c = 10, 20, 30 //fmt.Println(a, b, c) //var a, b, c int = 10, 20 ,30 //fmt.Println(a, b, c) //// \u96c6\u5408\u7c7b\u578b //var ( // a int // name string //) //var i int =10 //i = 20 //fmt.Println(i) //\u533f\u540d\u53d8\u91cf\uff0c \u53d8\u91cf\u4e00\u65e6\u88ab\u5b9a\u4e49 \u4e0d\u4f7f\u7528 //\u5e38\u91cf - //const PI = 3.1415926 //r := 2.0 //\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c \u4ee3\u7801\u5199\u7684\u4e0d\u597d \u4e00\u4e0d\u5c0f\u5fc3\u5728\u67d0\u4e2a\u5730\u65b9\u5c06PI\u7ed9\u6539\u6389\u4e86 //\u679a\u4e3e //const ( // Unknown = 0 // Female = 1 // Male = 2 //) // ////\u5e38\u91cf\u7ec4\u5982\u4e0d\u6307\u5b9a\u7c7b\u578b\u548c\u521d\u59cb\u5316\u503c\uff0c\u8be5\u7c7b\u578b\u548c\u503c\u548c\u4e0a\u4e00\u884c\u7684\u7c7b\u578b\u4e00\u81f4 //const ( // x int = 16 // y // s = \"abc\" // z //) //fmt.Println(x,y,s) //1. \u5e38\u91cf\u7684\u6570\u636e\u7c7b\u578b\u503c\u53ef\u4ee5\u662f\u5e03\u5c14\uff0c\u6570\u5b57 \u548c\u5b57\u7b26\u4e32 //2. \u4e0d\u66fe\u4f7f\u7528\u7684\u5e38\u91cf\uff0c\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u662f\u4e0d\u4f1a\u62a5\u9519 //const\u5e38\u91cf\u7684iota\uff0c \u5e38\u91cf\u8ba1\u6570\u5668 \u679a\u4e3e const ( Book = iota //\u8ba1\u7b97\u5668 Cloth //\u884c Phone DeskTop ) //0,1,2 \u672c\u8eab\u4e0d\u91cd\u8981\uff0c \u8fd9\u4e09\u4e2a\u503c\u4e0d\u4e00\u6837 //iota \u8be5\u5e38\u91cf\u7684\u503c\u7b49\u4e8e\u4e0a\u4e00\u4e2a\u5e38\u91cf\u7684\u8868\u8fbe\u5f0f fmt . Println ( Book , Cloth , Phone , DeskTop ) //iota\u4f60\u771f\u7684\u61c2\u4e86\u5417\uff1f // 1. iota\u53ea\u80fd\u5728\u5e38\u91cf\u7ec4\u4e2d\u662f\u4f7f\u7528 // 2. \u4e0d\u540c\u7684const\u5b9a\u4e49\u5757\u4e92\u76f8\u4e0d\u5e72\u6270 const ( Unknown = iota Female Male ) fmt . Println ( Unknown , Female , Male ) //3. \u6ca1\u6709\u8868\u8fbe\u5f0f\u7684\u5e38\u91cf\u5b9a\u4e49\u590d\u7528\u4e0a\u4e00\u884c\u7684\u8868\u8fbe\u5f0f //4. \u4ece\u7b2c\u4e00\u884c\u5f00\u59cb\uff0ciota\u4ece0\u9010\u884c\u52a0\u4e00 const ( a = iota //iota = 0 b = 10 //iota = 1 \u6bcf\u4e00\u884ciota\u52a0\u4e00 c // c=10 , iota = 2 d , e = iota , iota //iota=3 f = iota //iota=4 //iota\u4ee3\u8868\u7684\u662f\u8fd9\u91cc\u7684\u884c\u6570 ) fmt . Println ( a , b , c , d , e , f ) //\u53d8\u91cf\u7684\u4f5c\u7528\u57df } \u5e38\u91cf\u7684\u58f0\u660e \u00b6 const \u00b6 const identifier [ type ] = value //fg: const a int = 10 //\u5b9a\u4e49\u4ee5\u540e\u4e0d\u80fd\u518d\u88ab\u4fee\u6539 //fg: const a = 55 // \u5141\u8bb8 a = 66 // \u4e0d\u5141\u8bb8\u91cd\u65b0\u8d4b\u503c \u5e38\u91cf\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u53ea\u53ef\u4ee5\u662f\u5e03\u5c14\u578b\u3001\u6570\u5b57\u578b\uff08\u6574\u6570\u578b\u3001\u6d6e\u70b9\u578b\u548c\u590d\u6570\uff09\u548c\u5b57\u7b26\u4e32\u578b \u5e38\u91cf\u4e0d\u80fd\u518d\u91cd\u65b0\u8d4b\u503c\u4e3a\u5176\u4ed6\u7684\u503c \u5e38\u91cf\u7684\u503c\u4f1a\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u786e\u5b9a \u5e38\u91cf\u4e5f\u53ef\u4ee5\u4f7f\u7528\u81ea\u52a8\u63a8\u5bfc\u7c7b\u578b\u6765\u5b9a\u4e49,\u4f46\u662f\u4e0d\u80fd\u4f7f\u7528:=\u7684\u65b9\u5f0f \u679a\u4e3eiota \u00b6 \u9884\u58f0\u660e\u6807\u8bc6\u7b26iota\uff0c\u5b83\u9ed8\u8ba4\u5f00\u59cb\u503c\u662f0\uff0c\u4e00\u7ec4\u591a\u4e2a\u5e38\u91cf\u540c\u65f6\u58f0\u660e\u65f6\u5176\u503c\u9010\u884c\u9012\u589e iota\u5e38\u7528\u6765\u8868\u793a\u81ea\u589e\u7684\u679a\u4e3e\u53d8\u91cf\uff0c\u4e13\u95e8\u7528\u6765\u521d\u59cb\u5316\u5e38\u91cf package main import \"fmt\" func main () { // 1\uff0ciota\u7684\u529f\u80fd\u662f\u5e38\u91cf\u751f\u6210\u5668\uff0c\u6bcf\u9694\u4e00\u884c\uff0c\u81ea\u52a8\u7d2f\u52a01 // 2\uff0ciota\u7ed9\u5e38\u91cf\u8d4b\u503c\u4f7f\u7528 const ( a = iota //1 b = iota //2 c = iota //3 ) fmt . Printf ( \"a = %d, b = %d, c = %d\\n\" , a , b , c ) //3\uff0c\u591a\u4e2aiota\u65f6\uff0c\u53ef\u4ee5\u53ea\u5199\u4e00\u4e2a\u3002\u6548\u679c\u4e0e\u4e0a\u8fb9\u7684\u4e00\u6837 const ( a1 = iota b1 c1 ) fmt . Printf ( \"a1 = %d, b1 = %d, c1 = %d\\n\" , a1 , b1 , c1 ) //4\uff0ciota\u518d\u6b21\u9047\u5230cost\uff0c\u5c06\u4f1a\u91cd\u7f6e\u4e3a0 const d = iota //0 fmt . Println ( \"d =\" , d ) //5\uff0c\u5982\u679c\u5728\u540c\u4e00\u884c\uff0c\u90a3\u4e48\u503c\u90fd\u4e00\u6837 const ( i = iota j1 , j2 , j3 = iota , iota , iota k = iota ) fmt . Printf ( \"i = %d, j1 = %d, j2 = %d, j3 = %d, k = %d\\n\" , i , j1 , j2 , j3 , k ) //\u4f4d\u8fd0\u7b97\u65b9\u5f0f const ( Open = 1 << iota //1 Close //2 Pending //4 ) } \u5e38\u7528\u683c\u5f0f\u5316\u8f93\u51fa\u51fd\u6570 \u00b6 package main import \"fmt\" import \"os\" type point struct { x , y int } func main () { // Go\u63d0\u4f9b\u4e86\u51e0\u79cd\u6253\u5370\u683c\u5f0f\uff0c\u7528\u6765\u683c\u5f0f\u5316\u4e00\u822c\u7684Go\u503c\uff0c\u4f8b\u5982 // \u4e0b\u9762\u7684%v\u6253\u5370\u4e86\u4e00\u4e2apoint\u7ed3\u6784\u4f53\u7684\u5bf9\u8c61\u7684\u503c p := point { 1 , 2 } fmt . Printf ( \"%v\\n\" , p ) // \u5982\u679c\u6240\u683c\u5f0f\u5316\u7684\u503c\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\u5bf9\u8c61\uff0c\u90a3\u4e48`%+v`\u7684\u683c\u5f0f\u5316\u8f93\u51fa // \u5c06\u5305\u62ec\u7ed3\u6784\u4f53\u7684\u6210\u5458\u540d\u79f0\u548c\u503c fmt . Printf ( \"%+v\\n\" , p ) // `%#v`\u683c\u5f0f\u5316\u8f93\u51fa\u5c06\u8f93\u51fa\u4e00\u4e2a\u503c\u7684Go\u8bed\u6cd5\u8868\u793a\u65b9\u5f0f\u3002 fmt . Printf ( \"%#v\\n\" , p ) // \u4f7f\u7528`%T`\u6765\u8f93\u51fa\u4e00\u4e2a\u503c\u7684\u6570\u636e\u7c7b\u578b fmt . Printf ( \"%T\\n\" , p ) // \u683c\u5f0f\u5316\u5e03\u5c14\u578b\u53d8\u91cf fmt . Printf ( \"%t\\n\" , true ) // \u6709\u5f88\u591a\u7684\u65b9\u5f0f\u53ef\u4ee5\u683c\u5f0f\u5316\u6574\u578b\uff0c\u4f7f\u7528`%d`\u662f\u4e00\u79cd // \u6807\u51c6\u7684\u4ee510\u8fdb\u5236\u6765\u8f93\u51fa\u6574\u578b\u7684\u65b9\u5f0f fmt . Printf ( \"%d\\n\" , 123 ) // \u8fd9\u79cd\u65b9\u5f0f\u8f93\u51fa\u6574\u578b\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u65b9\u5f0f fmt . Printf ( \"%b\\n\" , 14 ) // \u8fd9\u91cc\u6253\u5370\u51fa\u8be5\u6574\u578b\u6570\u503c\u6240\u5bf9\u5e94\u7684\u5b57\u7b26 fmt . Printf ( \"%c\\n\" , 33 ) // \u4f7f\u7528`%x`\u8f93\u51fa\u4e00\u4e2a\u503c\u768416\u8fdb\u5236\u8868\u793a\u65b9\u5f0f fmt . Printf ( \"%x\\n\" , 456 ) // \u6d6e\u70b9\u578b\u6570\u503c\u4e5f\u6709\u51e0\u79cd\u683c\u5f0f\u5316\u65b9\u6cd5\u3002\u6700\u57fa\u672c\u7684\u4e00\u79cd\u662f`%f` fmt . Printf ( \"%f\\n\" , 78.9 ) // `%e`\u548c`%E`\u4f7f\u7528\u79d1\u5b66\u8ba1\u6570\u6cd5\u6765\u8f93\u51fa\u6574\u578b fmt . Printf ( \"%e\\n\" , 123400000.0 ) fmt . Printf ( \"%E\\n\" , 123400000.0 ) // \u4f7f\u7528`%s`\u8f93\u51fa\u57fa\u672c\u7684\u5b57\u7b26\u4e32 fmt . Printf ( \"%s\\n\" , \"\\\"string\\\"\" ) // \u8f93\u51fa\u50cfGo\u6e90\u7801\u4e2d\u90a3\u6837\u5e26\u53cc\u5f15\u53f7\u7684\u5b57\u7b26\u4e32\uff0c\u9700\u4f7f\u7528`%q` fmt . Printf ( \"%q\\n\" , \"\\\"string\\\"\" ) // `%x`\u4ee516\u8fdb\u5236\u8f93\u51fa\u5b57\u7b26\u4e32\uff0c\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684\u5b57\u8282\u7528\u4e24\u4e2a\u5b57\u7b26\u8f93\u51fa fmt . Printf ( \"%x\\n\" , \"hex this\" ) // \u4f7f\u7528`%p`\u8f93\u51fa\u4e00\u4e2a\u6307\u9488\u7684\u503c fmt . Printf ( \"%p\\n\" , & p ) // \u5f53\u8f93\u51fa\u6570\u5b57\u7684\u65f6\u5019\uff0c\u7ecf\u5e38\u9700\u8981\u53bb\u63a7\u5236\u8f93\u51fa\u7684\u5bbd\u5ea6\u548c\u7cbe\u5ea6\u3002 // \u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u4f4d\u4e8e%\u540e\u9762\u7684\u6570\u5b57\u6765\u63a7\u5236\u8f93\u51fa\u7684\u5bbd\u5ea6\uff0c\u9ed8\u8ba4 // \u60c5\u51b5\u4e0b\u8f93\u51fa\u662f\u53f3\u5bf9\u9f50\u7684\uff0c\u5de6\u8fb9\u52a0\u4e0a\u7a7a\u683c fmt . Printf ( \"|%6d|%6d|\\n\" , 12 , 345 ) // \u4f60\u4e5f\u53ef\u4ee5\u6307\u5b9a\u6d6e\u70b9\u6570\u7684\u8f93\u51fa\u5bbd\u5ea6\uff0c\u540c\u65f6\u4f60\u8fd8\u53ef\u4ee5\u6307\u5b9a\u6d6e\u70b9\u6570 // \u7684\u8f93\u51fa\u7cbe\u5ea6 fmt . Printf ( \"|%6.2f|%6.2f|\\n\" , 1.2 , 3.45 ) // To left-justify, use the `-` flag. fmt . Printf ( \"|%-6.2f|%-6.2f|\\n\" , 1.2 , 3.45 ) // \u4f60\u4e5f\u53ef\u4ee5\u6307\u5b9a\u8f93\u51fa\u5b57\u7b26\u4e32\u7684\u5bbd\u5ea6\u6765\u4fdd\u8bc1\u5b83\u4eec\u8f93\u51fa\u5bf9\u9f50\u3002\u9ed8\u8ba4 // \u60c5\u51b5\u4e0b\uff0c\u8f93\u51fa\u662f\u53f3\u5bf9\u9f50\u7684 fmt . Printf ( \"|%6s|%6s|\\n\" , \"foo\" , \"b\" ) // \u4e3a\u4e86\u4f7f\u7528\u5de6\u5bf9\u9f50\u4f60\u53ef\u4ee5\u5728\u5bbd\u5ea6\u4e4b\u524d\u52a0\u4e0a`-`\u53f7 fmt . Printf ( \"|%-6s|%-6s|\\n\" , \"foo\" , \"b\" ) // `Printf`\u51fd\u6570\u7684\u8f93\u51fa\u662f\u8f93\u51fa\u5230\u547d\u4ee4\u884c`os.Stdout`\u7684\uff0c\u4f60 // \u53ef\u4ee5\u7528`Sprintf`\u6765\u5c06\u683c\u5f0f\u5316\u540e\u7684\u5b57\u7b26\u4e32\u8d4b\u503c\u7ed9\u4e00\u4e2a\u53d8\u91cf s := fmt . Sprintf ( \"a %s\" , \"string\" ) fmt . Println ( s ) // \u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528`Fprintf`\u6765\u5c06\u683c\u5f0f\u5316\u540e\u7684\u503c\u8f93\u51fa\u5230`io.Writers` fmt . Fprintf ( os . Stderr , \"an %s\\n\" , \"error\" ) } \u5e38\u7528\u683c\u5f0f\u5316\u8f93\u5165\u51fd\u6570 \u00b6 ackage main import \"fmt\" func main () { var a int fmt . Println ( \"\u8bf7\u8f93\u5165\u53d8\u91cfa\u7684\u503c\uff1a\" ) //fmt.Scanf(\"%d\", &a) \u963b\u585e\u7b49\u5f85\u7528\u6237\u7684\u8f93\u5165\uff0c\u522b\u5fd8\u4e86& //\u5bf9\u5e94\u683c\u5f0f\u5199\u6cd5 // fmt.Scanf(\"%d\", &a) //\u81ea\u52a8\u5339\u914d\u683c\u5f0f\u7684\u5199\u6cd5 fmt . Scan ( & a ) fmt . Println ( \"a =\" , a ) }","title":"No2-\u57fa\u672c\u77e5\u8bc6\u70b9"},{"location":"goNotes/go-base/No2-%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E7%82%B9/#no2-","text":"Note-Time: 2021\u5e7409\u670816\u65e5","title":"No2-\u57fa\u672c\u77e5\u8bc6\u70b9"},{"location":"goNotes/go-base/No2-%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E7%82%B9/#25","text":"break default func interface select case defer go map struct chan else goto package switch const fallthrough if range type continue for import return var","title":"25\u4e2a\u5173\u952e\u5b57"},{"location":"goNotes/go-base/No2-%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E7%82%B9/#_1","text":"int int8 int16 int32 int64 uint uint8 uint16 uint32 uint64 uintptr float32 float64 complex128 complex64 bool byte ( uint8 ) rune ( int32 ) string error","title":"\u5185\u5efa\u7c7b\u578b"},{"location":"goNotes/go-base/No2-%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E7%82%B9/#_2","text":"true false iota nil","title":"\u5185\u5efa\u5e38\u91cf"},{"location":"goNotes/go-base/No2-%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E7%82%B9/#_3","text":"make len cap new append copy close delete complex real imag panic recover","title":"\u5185\u5efa\u51fd\u6570"},{"location":"goNotes/go-base/No2-%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E7%82%B9/#_4","text":"\u683c\u5f0f \u8bf4\u660e %% \u4e00\u4e2a%\u5b57\u9762\u91cf %b \u4e00\u4e2a\u4e8c\u8fdb\u5236\u6574\u6570\u503c\uff08\u57fa\u6570\u4e3a2\uff09\uff0c\u6216\u662f\u4e00\u4e2a\uff08\u9ad8\u7ea7\u7684\uff09\u7528\u79d1\u5b66\u8ba1\u6570\u6cd5\u8868\u793a\u7684\u6307\u6570\u4e3a2\u7684\u6d6e\u70b9\u6570 %c \u5b57\u7b26\u578b\uff0c\u53ef\u4ee5\u5427\u8f93\u5165\u7684\u6570\u5b57\u6309\u7167ASCII\u7801\u76f8\u5e94\u8f6c\u6362\u4e3a\u5bf9\u5e94\u5b57\u7b26 %d \u4e00\u4e2a\u5341\u8fdb\u5236\u6570\u503c\uff08\u57fa\u6570\u4e3a10\uff09 %e \u4ee5\u79d1\u5b66\u8ba1\u6570\u6cd5e\u8868\u793a\u7684\u6d6e\u70b9\u6570\u6216\u8005\u590d\u6570\u503c %E \u4ee5\u79d1\u5b66\u8ba1\u6570\u6cd5E\u8868\u793a\u7684\u6d6e\u70b9\u6570\u6216\u8005\u590d\u6570\u503c %f \u4ee5\u6807\u51c6\u8ba1\u6570\u6cd5\u8868\u793a\u7684\u6d6e\u70b9\u6570\u6216\u8005\u590d\u6570\u503c %g \u4ee5%e\u6216%f\u8868\u793a\u7684\u6d6e\u70b9\u6570\u6216\u590d\u6570\uff0c\u4efb\u4f55\u4e00\u4e2a\u90fd\u4ee5\u6700\u4e3a\u7d27\u51d1\u7684\u65b9\u5f0f\u8f93\u51fa %G \u4ee5%E\u6216%f\u8868\u793a\u7684\u6d6e\u70b9\u6570\u6216\u590d\u6570\uff0c\u4efb\u4f55\u4e00\u4e2a\u90fd\u4ee5\u6700\u4e3a\u7d27\u51d1\u7684\u65b9\u5f0f\u8f93\u51fa %o \u4e00\u4e2a\u4ee5\u516b\u8fdb\u5236\u8868\u793a\u7684\u6570\u5b57\uff08\u57fa\u6570\u4e3a8\uff09 %p \u4ee5\u5341\u516d\u8fdb\u5236\uff08\u57fa\u6570\u4e3a16\uff09\u8868\u793a\u7684\u4e00\u4e2a\u503c\u7684\u5730\u5740\uff0c\u524d\u7f00\u4e3a0x\uff0c\u5b57\u6bcd\u4f7f\u7528\u5c0f\u5199\u7684a-f\u8868\u793a %q \u4f7f\u7528Go\u8bed\u6cd5\u4ee5\u53ca\u5fc5\u987b\u65f6\u4f7f\u7528\u8f6c\u4e49\uff0c\u4ee5\u53cc\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u5b57\u7b26\u4e32\u6216\u8005\u5b57\u8282\u5207\u7247 %s \u5b57\u7b26\u4e32\u3002\u8f93\u51fa\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u76f4\u81f3\u5b57\u7b26\u4e32\u4e2d\u7684\u7a7a\u5b57\u7b26\uff08\u5b57\u7b26\u4e32\u4ee5'\\0'\u7ed3\u5c3e\uff0c\u8fd9\u4e2a'\\0'\u5373\u8868\u793a\u7a7a\u5b57\u7b26\uff09 %t \u4ee5true\u6216\u8005false\u8f93\u51fa\u7684\u5e03\u5c14\u503c %T \u4f7f\u7528Go\u8bed\u6cd5\u8f93\u51fa\u7684\u503c\u7684\u7c7b\u578b %U \u4e00\u4e2a\u7528Unicode\u8868\u793a\u6cd5\u8868\u793a\u7684\u6574\u578b\u7801\u70b9\uff0c\u9ed8\u8ba4\u503c\u4e3a4\u4e2a\u6570\u5b57\u5b57\u7b26 %v \u4f7f\u7528\u9ed8\u8ba4\u683c\u5f0f\u8f93\u51fa\u7684\u5185\u7f6e\u6216\u81ea\u5b9a\u4e49\u7c7b\u578b\u7684\u503c\uff0c\u6216\u8005\u662f\u4f7f\u7528\u5176\u7c7b\u578b\u7684String()\u65b9\u5f0f\u8f93\u51fa\u7684\u81ea\u5b9a\u4e49\u503c\uff0c\u5982\u679c\u8be5\u65b9\u6cd5\u5b58\u5728\u7684\u8bdd %x \u4ee5\u5341\u516d\u8fdb\u5236\u8868\u793a\u7684\u6574\u578b\u503c\uff08\u57fa\u6570\u4e3a\u5341\u516d\uff09\uff0c\u6570\u5b57a-f\u4f7f\u7528\u5c0f\u5199\u8868\u793a %X \u4ee5\u5341\u516d\u8fdb\u5236\u8868\u793a\u7684\u6574\u578b\u503c\uff08\u57fa\u6570\u4e3a\u5341\u516d\uff09\uff0c\u6570\u5b57A-F\u4f7f\u7528\u5927\u5199\u8868\u793a","title":"\u5e38\u7528\u8f6c\u6362\u7b26"},{"location":"goNotes/go-base/No2-%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E7%82%B9/#package","text":"","title":"\u5173\u4e8epackage\u7684\u7406\u89e3"},{"location":"goNotes/go-base/No2-%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E7%82%B9/#_5","text":"\u548cpython\u4e00\u6837\uff0c\u628a\u76f8\u540c\u529f\u80fd\u7684\u4ee3\u7801\u653e\u5230\u4e00\u4e2a\u76ee\u5f55\uff0c\u79f0\u4e4b\u4e3a\u5305\uff08package\uff09 \u6bcf\u4e2ago\u7a0b\u5e8f\u90fd\u662f\u7531\u5305\u6784\u6210\uff0c\u4e00\u822c\u4ee5\u5305\u4e3a\u5355\u4f4d\u8fdb\u884c\u8fd0\u884c main\u5305\uff08main\u51fd\u6570\uff09\u662f\u7528\u6765\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5e76\u4e14\u6bcf\u4e2a\u7a0b\u5e8f\u6709\u4e14\u53ea\u6709\u4e00\u4e2amain\u5305 \u5305\u7684\u4e3b\u8981\u7528\u9014\u662f\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u590d\u7528\u6027","title":"\u6982\u5ff5\u7684\u7406\u89e3"},{"location":"goNotes/go-base/No2-%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E7%82%B9/#_6","text":"\u533f\u540d\u5bfc\u5165( _ ) _ \"learngo/init/lib2\" //\u8868\u793a\u5bfc\u5165\u8fd9\u4e2a\u5305\uff0c\u6267\u884c\u5bfc\u5165(\u8c03\u7528)\u5305\u4e2d\u7684init()\u4f46\u662f\u4e0d\u5f15\u7528\u8be5\u5305\u4e2d\u7684\u5143\u7d20. //fg: \u5e94\u7528\u573a\u666f\uff1a\u6bd4\u5982\u6570\u6570\u636e\u5e93\u9a71\u52a8\u7684\u6ce8\u518c \u5305\u522b\u540d lb2 \"learngo/init/lib2\" //\u53ef\u76f4\u63a5\u7528lb2\u4ee3\u66fflib2\u7684\u5305\u540d\u8c03\u7528\u5305\u4e2d\u5bf9\u5916\u7684\u51fd\u6570 \u5d4c\u5165\u5f0f\u5bfc\u5165 . \"learngo/init/lib2\" //\u76f8\u5f53\u4e8elib2\u4e2d\u7684\u4ee3\u7801\u76f4\u63a5\u5bfc\u5165\u5f53\u524d\u5305\uff0c\u53ef\u76f4\u63a5\u4f7f\u7528lib2\u4e2d\u7684\u51fd\u6570\uff0c\u65e0\u9700\u524d\u7f00\u3002\u591a\u4e2a\u5d4c\u5165\u5f0f\u5bfc\u5165\u5bb9\u6613\u4ea7\u751f\u53d8\u91cf\u540d\u91cd\u590d\u9519\u8bef\u3002","title":"\u5bfc\u5305\u7684\u65b9\u5f0f"},{"location":"goNotes/go-base/No2-%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E7%82%B9/#init","text":"package\u4ee5\u9012\u5f52\u7684\u5f62\u5f0f\u5bfc\u5165\uff0cinit()\u76f8\u5f53\u4e8ereturn\u8bed\u53e5\u56de\u6eaf\u5230\u4e0a\u4e00\u7ea7\u8c03\u7528\uff0c\u4e00\u822c\u7528\u6765\u521d\u59cb\u5316\u5305\u5185\u53c2\u6570\u3002","title":"init\u51fd\u6570\u7684\u7406\u89e3"},{"location":"goNotes/go-base/No2-%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E7%82%B9/#main","text":"//1)go\u8bed\u8a00\u4ee5\u5305\u4f5c\u4e3a\u7ba1\u7406\u5355\u4f4d //2)\u6bcf\u4e2a\u6587\u4ef6\u5fc5\u987b\u5148\u58f0\u660e\u5305 //3)\u7a0b\u5e8f\u5fc5\u987b\u6709\u4e00\u4e2amain\u5305\uff08\u91cd\u8981\uff09 package main //go\u8bed\u8a00\u4ee5\u53cc\u659c\u6760\u4f5c\u4e3a\u6ce8\u91ca\u7684\u6807\u8bc6 /* \u8fd9\u662f\u5757\u6ce8\u91ca \u53ef\u4ee5\u591a\u6bb5\u6ce8\u91ca */ import \"fmt\" //\u5165\u53e3\u51fd\u6570\uff0c\u6709\u4e14\u53ea\u6709\u4e00\u4e2a func main () { //\u5de6\u62ec\u53f7\u5fc5\u987b\u4e0e\u51fd\u6570\u540d\u540c\u884c\uff0c\u5426\u5219\u4f1a\u62a5\u9519 //\u6253\u5370 //\u201chello go\"\u6253\u5370\u5230\u5c4f\u5e55\uff0cPrintln()\u4f1a\u81ea\u52a8\u6362\u884c //\u8c03\u7528\u51fd\u6570\uff0c\u5927\u90e8\u5206\u90fd\u9700\u8981\u5bfc\u5165\u5305 fmt . Println ( \"hello go\" ) //go\u8bed\u8a00\u7ed3\u5c3e\u6ca1\u6709\u5206\u53f7 fmt . Println ( \"hello haha\" ) }","title":"main\u51fd\u6570\u7684\u4f7f\u7528"},{"location":"goNotes/go-base/No2-%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E7%82%B9/#_7","text":"\u6807\u8bc6\u7b26\u7684\u547d\u540d\u8981\u5c3d\u91cf\u91c7\u53d6\u7b80\u77ed\u4e14\u6709\u610f\u4e49\u3002 \u4e3a\u53d8\u91cf\u3001\u51fd\u6570\u3001\u5e38\u91cf\u547d\u540d\u65f6\u91c7\u7528\u9a7c\u5cf0\u547d\u540d\u6cd5\uff0c\u4f8b\u5982 stuName\u3001getVal\u3002 \u5982\u679c\u9996\u5b57\u6bcd\u5927\u5199\uff0c\u5219\u8868\u793a\u5b83\u53ef\u4ee5\u88ab\u5176\u5b83\u7684\u5305\u8bbf\u95ee\uff08\u7c7b\u4f3c\u4e8e Java \u4e2d\u7684 public\uff09\uff1b\u5982\u679c\u9996\u5b57\u6bcd\u5c0f\u5199\uff0c\u5219\u8868\u793a\u5b83\u53ea\u80fd\u5728\u672c\u5305\u4e2d\u4f7f\u7528 (\u7c7b\u4f3c\u4e8e Java \u4e2d private\uff09\u3002","title":"\u547d\u4ee4\u89c4\u8303"},{"location":"goNotes/go-base/No2-%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E7%82%B9/#_8","text":"","title":"\u53d8\u91cf\u58f0\u660e\u7684\u591a\u6837\u6027"},{"location":"goNotes/go-base/No2-%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E7%82%B9/#var","text":"\u53c8\u79f0\u53d8\u91cf\u5b8c\u6574\u58f0\u660e var \u53d8\u91cf\u540d\u79f0 \u6570\u636e\u7c7b\u578b [ = \u53d8\u91cf\u521d\u59cb\u503c ] //\u65b9\u5f0f\u4e00 // fg: var name string var \u53d8\u91cf\u540d1 , \u53d8\u91cf\u540d2 < \u53d8\u91cf\u7c7b\u578b > = \u521d\u59cb\u503c1 , \u521d\u59cb\u503c2 //\u65b9\u5f0f\u4e8c //fg: var a , b = 2 , 3 var ( //\u65b9\u5f0f\u4e09 name1 = initialvalue1 , name2 = initialvalue2 )","title":"Var \u5173\u952e\u5b57\u58f0\u660e"},{"location":"goNotes/go-base/No2-%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E7%82%B9/#_9","text":"\u53c8\u79f0\u77ed\u53d8\u91cf\u58f0\u660e name := initialvalue //fg: a := 1 //\u591a\u53d8\u91cf b , c := 2 , 3 name , age := \"xiang\" , 18 \u6b64\u65b9\u5f0f\u53ea\u9002\u7528\u4e8e\u51fd\u6570/\u65b9\u6cd5\u5185\u90e8\uff0c\u6216if/for/switch/\u7684\u521d\u59cb\u5316\u8bed\u53e5\u4e2d \u5728\u51fd\u6570\u5916\u90e8\u65e0\u6cd5\u9002\u7528\uff08\u7f16\u8bd1\u4e0d\u901a\u8fc7\uff09","title":":= \u7684\u65b9\u5f0f\u58f0\u660e"},{"location":"goNotes/go-base/No2-%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E7%82%B9/#_","text":"_\uff08\u4e0b\u5212\u7ebf\uff09\u662f\u4e2a\u7279\u6b8a\u7684\u53d8\u91cf\u540d\uff0c\u4efb\u4f55\u8d4b\u4e88\u5b83\u7684\u503c\u90fd\u4f1a\u88ab\u4e22\u5f03 _ , b := 1 , 2 //\u5c06\u503c2\u8d4b\u4e88b\uff0c\u5e76\u540c\u65f6\u4e22\u5f031","title":"_ \u5ffd\u7565\u53d8\u91cf"},{"location":"goNotes/go-base/No2-%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E7%82%B9/#_10","text":"\u5982\u679c\u53d8\u91cf\u6709\u521d\u59cb\u503c\uff0c\u90a3\u4e48 Go \u80fd\u591f\u81ea\u52a8\u63a8\u65ad\u5177\u6709\u521d\u59cb\u503c\u7684\u53d8\u91cf\u7684\u7c7b\u578b \u5982\u679c\u53d8\u91cf\u6709\u521d\u59cb\u503c\uff0c\u5c31\u53ef\u4ee5\u5728\u53d8\u91cf\u58f0\u660e\u4e2d\u7701\u7565 type \u3002 \u5982\u679c\u53d8\u91cf\u58f0\u660e\u7684\u8bed\u6cd5\u662f var name = initialvalue\uff0cGo \u80fd\u591f\u6839\u636e\u521d\u59cb\u503c\u81ea\u52a8\u63a8\u65ad\u53d8\u91cf\u7684\u7c7b\u578b\u3002","title":"\u53d8\u91cf\u58f0\u660e\u4e2d\u7684\u7c7b\u578b\u63a8\u65ad"},{"location":"goNotes/go-base/No2-%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E7%82%B9/#_11","text":"GO\u58f0\u660e\u7684\u53d8\u91cf\u5c31\u4f1a\u7acb\u5373\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u4f1a\u88ab\u9ed8\u8ba4\u521d\u59cb\u5316\u503c \u82e5\u4e00\u4e2a\u53d8\u91cf\u672a\u88ab\u8d4b\u503c\uff0cGo \u4f1a\u81ea\u52a8\u5730\u5c06\u5176\u521d\u59cb\u5316\uff0c\u8d4b\u503c\u8be5\u53d8\u91cf\u7c7b\u578b\u7684\u96f6\u503c\uff08Zero Value)","title":"\u53d8\u91cf\u58f0\u660e\u6ce8\u610f\u4e8b\u9879"},{"location":"goNotes/go-base/No2-%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E7%82%B9/#practice-code","text":"package main import \"fmt\" func main () { //\u53d8\u91cf\u7684\u5b9a\u4e49 //\u9759\u6001\u7684\u8bed\u8a00\u7684\u53d8\u91cf\u548c\u52a8\u6001\u8bed\u8a00\u7684\u53d8\u91cf\u5b9a\u4e49\u5dee\u5f02\u5f88\u5927 //1. \u6700\u57fa\u7840\u7684\u53d8\u91cf\u5b9a\u4e49 //var i int // int i //i = 20 //fmt.Println(i) //\u5b9a\u4e49\u5e76\u521d\u59cb\u5316 //var i int = 10 //fmt.Println(i) //2. \u6839\u636e\u503c\u81ea\u884c\u5224\u65ad\u53d8\u91cf\u7c7b\u578b\uff08\u7c7b\u578b\u63a8\u65ad\uff09 //var i = 100 //\u5e76\u6ca1\u6709\u8bbe\u7f6e\u7c7b\u578b //fmt.Println(i) // 3. go\u8bed\u8a00\u65e2\u7136\u4e00\u95e8\u65b0\u8bed\u8a00 \u7701\u7565var //i := 100 //fmt.Println(i) //var a int = 10 //var b = 10 //c := 10 //fmt.Println(a, b , c) //\u591a\u53d8\u91cf\u5b9a\u4e49 //var a, b, c int //a, b, c = 10, 20, 30 //fmt.Println(a, b, c) //var a, b, c int = 10, 20 ,30 //fmt.Println(a, b, c) //// \u96c6\u5408\u7c7b\u578b //var ( // a int // name string //) //var i int =10 //i = 20 //fmt.Println(i) //\u533f\u540d\u53d8\u91cf\uff0c \u53d8\u91cf\u4e00\u65e6\u88ab\u5b9a\u4e49 \u4e0d\u4f7f\u7528 //\u5e38\u91cf - //const PI = 3.1415926 //r := 2.0 //\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c \u4ee3\u7801\u5199\u7684\u4e0d\u597d \u4e00\u4e0d\u5c0f\u5fc3\u5728\u67d0\u4e2a\u5730\u65b9\u5c06PI\u7ed9\u6539\u6389\u4e86 //\u679a\u4e3e //const ( // Unknown = 0 // Female = 1 // Male = 2 //) // ////\u5e38\u91cf\u7ec4\u5982\u4e0d\u6307\u5b9a\u7c7b\u578b\u548c\u521d\u59cb\u5316\u503c\uff0c\u8be5\u7c7b\u578b\u548c\u503c\u548c\u4e0a\u4e00\u884c\u7684\u7c7b\u578b\u4e00\u81f4 //const ( // x int = 16 // y // s = \"abc\" // z //) //fmt.Println(x,y,s) //1. \u5e38\u91cf\u7684\u6570\u636e\u7c7b\u578b\u503c\u53ef\u4ee5\u662f\u5e03\u5c14\uff0c\u6570\u5b57 \u548c\u5b57\u7b26\u4e32 //2. \u4e0d\u66fe\u4f7f\u7528\u7684\u5e38\u91cf\uff0c\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u662f\u4e0d\u4f1a\u62a5\u9519 //const\u5e38\u91cf\u7684iota\uff0c \u5e38\u91cf\u8ba1\u6570\u5668 \u679a\u4e3e const ( Book = iota //\u8ba1\u7b97\u5668 Cloth //\u884c Phone DeskTop ) //0,1,2 \u672c\u8eab\u4e0d\u91cd\u8981\uff0c \u8fd9\u4e09\u4e2a\u503c\u4e0d\u4e00\u6837 //iota \u8be5\u5e38\u91cf\u7684\u503c\u7b49\u4e8e\u4e0a\u4e00\u4e2a\u5e38\u91cf\u7684\u8868\u8fbe\u5f0f fmt . Println ( Book , Cloth , Phone , DeskTop ) //iota\u4f60\u771f\u7684\u61c2\u4e86\u5417\uff1f // 1. iota\u53ea\u80fd\u5728\u5e38\u91cf\u7ec4\u4e2d\u662f\u4f7f\u7528 // 2. \u4e0d\u540c\u7684const\u5b9a\u4e49\u5757\u4e92\u76f8\u4e0d\u5e72\u6270 const ( Unknown = iota Female Male ) fmt . Println ( Unknown , Female , Male ) //3. \u6ca1\u6709\u8868\u8fbe\u5f0f\u7684\u5e38\u91cf\u5b9a\u4e49\u590d\u7528\u4e0a\u4e00\u884c\u7684\u8868\u8fbe\u5f0f //4. \u4ece\u7b2c\u4e00\u884c\u5f00\u59cb\uff0ciota\u4ece0\u9010\u884c\u52a0\u4e00 const ( a = iota //iota = 0 b = 10 //iota = 1 \u6bcf\u4e00\u884ciota\u52a0\u4e00 c // c=10 , iota = 2 d , e = iota , iota //iota=3 f = iota //iota=4 //iota\u4ee3\u8868\u7684\u662f\u8fd9\u91cc\u7684\u884c\u6570 ) fmt . Println ( a , b , c , d , e , f ) //\u53d8\u91cf\u7684\u4f5c\u7528\u57df }","title":"\u53d8\u91cf\u58f0\u660e\u7684practice-code"},{"location":"goNotes/go-base/No2-%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E7%82%B9/#_12","text":"","title":"\u5e38\u91cf\u7684\u58f0\u660e"},{"location":"goNotes/go-base/No2-%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E7%82%B9/#const","text":"const identifier [ type ] = value //fg: const a int = 10 //\u5b9a\u4e49\u4ee5\u540e\u4e0d\u80fd\u518d\u88ab\u4fee\u6539 //fg: const a = 55 // \u5141\u8bb8 a = 66 // \u4e0d\u5141\u8bb8\u91cd\u65b0\u8d4b\u503c \u5e38\u91cf\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u53ea\u53ef\u4ee5\u662f\u5e03\u5c14\u578b\u3001\u6570\u5b57\u578b\uff08\u6574\u6570\u578b\u3001\u6d6e\u70b9\u578b\u548c\u590d\u6570\uff09\u548c\u5b57\u7b26\u4e32\u578b \u5e38\u91cf\u4e0d\u80fd\u518d\u91cd\u65b0\u8d4b\u503c\u4e3a\u5176\u4ed6\u7684\u503c \u5e38\u91cf\u7684\u503c\u4f1a\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u786e\u5b9a \u5e38\u91cf\u4e5f\u53ef\u4ee5\u4f7f\u7528\u81ea\u52a8\u63a8\u5bfc\u7c7b\u578b\u6765\u5b9a\u4e49,\u4f46\u662f\u4e0d\u80fd\u4f7f\u7528:=\u7684\u65b9\u5f0f","title":"const"},{"location":"goNotes/go-base/No2-%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E7%82%B9/#iota","text":"\u9884\u58f0\u660e\u6807\u8bc6\u7b26iota\uff0c\u5b83\u9ed8\u8ba4\u5f00\u59cb\u503c\u662f0\uff0c\u4e00\u7ec4\u591a\u4e2a\u5e38\u91cf\u540c\u65f6\u58f0\u660e\u65f6\u5176\u503c\u9010\u884c\u9012\u589e iota\u5e38\u7528\u6765\u8868\u793a\u81ea\u589e\u7684\u679a\u4e3e\u53d8\u91cf\uff0c\u4e13\u95e8\u7528\u6765\u521d\u59cb\u5316\u5e38\u91cf package main import \"fmt\" func main () { // 1\uff0ciota\u7684\u529f\u80fd\u662f\u5e38\u91cf\u751f\u6210\u5668\uff0c\u6bcf\u9694\u4e00\u884c\uff0c\u81ea\u52a8\u7d2f\u52a01 // 2\uff0ciota\u7ed9\u5e38\u91cf\u8d4b\u503c\u4f7f\u7528 const ( a = iota //1 b = iota //2 c = iota //3 ) fmt . Printf ( \"a = %d, b = %d, c = %d\\n\" , a , b , c ) //3\uff0c\u591a\u4e2aiota\u65f6\uff0c\u53ef\u4ee5\u53ea\u5199\u4e00\u4e2a\u3002\u6548\u679c\u4e0e\u4e0a\u8fb9\u7684\u4e00\u6837 const ( a1 = iota b1 c1 ) fmt . Printf ( \"a1 = %d, b1 = %d, c1 = %d\\n\" , a1 , b1 , c1 ) //4\uff0ciota\u518d\u6b21\u9047\u5230cost\uff0c\u5c06\u4f1a\u91cd\u7f6e\u4e3a0 const d = iota //0 fmt . Println ( \"d =\" , d ) //5\uff0c\u5982\u679c\u5728\u540c\u4e00\u884c\uff0c\u90a3\u4e48\u503c\u90fd\u4e00\u6837 const ( i = iota j1 , j2 , j3 = iota , iota , iota k = iota ) fmt . Printf ( \"i = %d, j1 = %d, j2 = %d, j3 = %d, k = %d\\n\" , i , j1 , j2 , j3 , k ) //\u4f4d\u8fd0\u7b97\u65b9\u5f0f const ( Open = 1 << iota //1 Close //2 Pending //4 ) }","title":"\u679a\u4e3eiota"},{"location":"goNotes/go-base/No2-%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E7%82%B9/#_13","text":"package main import \"fmt\" import \"os\" type point struct { x , y int } func main () { // Go\u63d0\u4f9b\u4e86\u51e0\u79cd\u6253\u5370\u683c\u5f0f\uff0c\u7528\u6765\u683c\u5f0f\u5316\u4e00\u822c\u7684Go\u503c\uff0c\u4f8b\u5982 // \u4e0b\u9762\u7684%v\u6253\u5370\u4e86\u4e00\u4e2apoint\u7ed3\u6784\u4f53\u7684\u5bf9\u8c61\u7684\u503c p := point { 1 , 2 } fmt . Printf ( \"%v\\n\" , p ) // \u5982\u679c\u6240\u683c\u5f0f\u5316\u7684\u503c\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\u5bf9\u8c61\uff0c\u90a3\u4e48`%+v`\u7684\u683c\u5f0f\u5316\u8f93\u51fa // \u5c06\u5305\u62ec\u7ed3\u6784\u4f53\u7684\u6210\u5458\u540d\u79f0\u548c\u503c fmt . Printf ( \"%+v\\n\" , p ) // `%#v`\u683c\u5f0f\u5316\u8f93\u51fa\u5c06\u8f93\u51fa\u4e00\u4e2a\u503c\u7684Go\u8bed\u6cd5\u8868\u793a\u65b9\u5f0f\u3002 fmt . Printf ( \"%#v\\n\" , p ) // \u4f7f\u7528`%T`\u6765\u8f93\u51fa\u4e00\u4e2a\u503c\u7684\u6570\u636e\u7c7b\u578b fmt . Printf ( \"%T\\n\" , p ) // \u683c\u5f0f\u5316\u5e03\u5c14\u578b\u53d8\u91cf fmt . Printf ( \"%t\\n\" , true ) // \u6709\u5f88\u591a\u7684\u65b9\u5f0f\u53ef\u4ee5\u683c\u5f0f\u5316\u6574\u578b\uff0c\u4f7f\u7528`%d`\u662f\u4e00\u79cd // \u6807\u51c6\u7684\u4ee510\u8fdb\u5236\u6765\u8f93\u51fa\u6574\u578b\u7684\u65b9\u5f0f fmt . Printf ( \"%d\\n\" , 123 ) // \u8fd9\u79cd\u65b9\u5f0f\u8f93\u51fa\u6574\u578b\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u65b9\u5f0f fmt . Printf ( \"%b\\n\" , 14 ) // \u8fd9\u91cc\u6253\u5370\u51fa\u8be5\u6574\u578b\u6570\u503c\u6240\u5bf9\u5e94\u7684\u5b57\u7b26 fmt . Printf ( \"%c\\n\" , 33 ) // \u4f7f\u7528`%x`\u8f93\u51fa\u4e00\u4e2a\u503c\u768416\u8fdb\u5236\u8868\u793a\u65b9\u5f0f fmt . Printf ( \"%x\\n\" , 456 ) // \u6d6e\u70b9\u578b\u6570\u503c\u4e5f\u6709\u51e0\u79cd\u683c\u5f0f\u5316\u65b9\u6cd5\u3002\u6700\u57fa\u672c\u7684\u4e00\u79cd\u662f`%f` fmt . Printf ( \"%f\\n\" , 78.9 ) // `%e`\u548c`%E`\u4f7f\u7528\u79d1\u5b66\u8ba1\u6570\u6cd5\u6765\u8f93\u51fa\u6574\u578b fmt . Printf ( \"%e\\n\" , 123400000.0 ) fmt . Printf ( \"%E\\n\" , 123400000.0 ) // \u4f7f\u7528`%s`\u8f93\u51fa\u57fa\u672c\u7684\u5b57\u7b26\u4e32 fmt . Printf ( \"%s\\n\" , \"\\\"string\\\"\" ) // \u8f93\u51fa\u50cfGo\u6e90\u7801\u4e2d\u90a3\u6837\u5e26\u53cc\u5f15\u53f7\u7684\u5b57\u7b26\u4e32\uff0c\u9700\u4f7f\u7528`%q` fmt . Printf ( \"%q\\n\" , \"\\\"string\\\"\" ) // `%x`\u4ee516\u8fdb\u5236\u8f93\u51fa\u5b57\u7b26\u4e32\uff0c\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684\u5b57\u8282\u7528\u4e24\u4e2a\u5b57\u7b26\u8f93\u51fa fmt . Printf ( \"%x\\n\" , \"hex this\" ) // \u4f7f\u7528`%p`\u8f93\u51fa\u4e00\u4e2a\u6307\u9488\u7684\u503c fmt . Printf ( \"%p\\n\" , & p ) // \u5f53\u8f93\u51fa\u6570\u5b57\u7684\u65f6\u5019\uff0c\u7ecf\u5e38\u9700\u8981\u53bb\u63a7\u5236\u8f93\u51fa\u7684\u5bbd\u5ea6\u548c\u7cbe\u5ea6\u3002 // \u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u4f4d\u4e8e%\u540e\u9762\u7684\u6570\u5b57\u6765\u63a7\u5236\u8f93\u51fa\u7684\u5bbd\u5ea6\uff0c\u9ed8\u8ba4 // \u60c5\u51b5\u4e0b\u8f93\u51fa\u662f\u53f3\u5bf9\u9f50\u7684\uff0c\u5de6\u8fb9\u52a0\u4e0a\u7a7a\u683c fmt . Printf ( \"|%6d|%6d|\\n\" , 12 , 345 ) // \u4f60\u4e5f\u53ef\u4ee5\u6307\u5b9a\u6d6e\u70b9\u6570\u7684\u8f93\u51fa\u5bbd\u5ea6\uff0c\u540c\u65f6\u4f60\u8fd8\u53ef\u4ee5\u6307\u5b9a\u6d6e\u70b9\u6570 // \u7684\u8f93\u51fa\u7cbe\u5ea6 fmt . Printf ( \"|%6.2f|%6.2f|\\n\" , 1.2 , 3.45 ) // To left-justify, use the `-` flag. fmt . Printf ( \"|%-6.2f|%-6.2f|\\n\" , 1.2 , 3.45 ) // \u4f60\u4e5f\u53ef\u4ee5\u6307\u5b9a\u8f93\u51fa\u5b57\u7b26\u4e32\u7684\u5bbd\u5ea6\u6765\u4fdd\u8bc1\u5b83\u4eec\u8f93\u51fa\u5bf9\u9f50\u3002\u9ed8\u8ba4 // \u60c5\u51b5\u4e0b\uff0c\u8f93\u51fa\u662f\u53f3\u5bf9\u9f50\u7684 fmt . Printf ( \"|%6s|%6s|\\n\" , \"foo\" , \"b\" ) // \u4e3a\u4e86\u4f7f\u7528\u5de6\u5bf9\u9f50\u4f60\u53ef\u4ee5\u5728\u5bbd\u5ea6\u4e4b\u524d\u52a0\u4e0a`-`\u53f7 fmt . Printf ( \"|%-6s|%-6s|\\n\" , \"foo\" , \"b\" ) // `Printf`\u51fd\u6570\u7684\u8f93\u51fa\u662f\u8f93\u51fa\u5230\u547d\u4ee4\u884c`os.Stdout`\u7684\uff0c\u4f60 // \u53ef\u4ee5\u7528`Sprintf`\u6765\u5c06\u683c\u5f0f\u5316\u540e\u7684\u5b57\u7b26\u4e32\u8d4b\u503c\u7ed9\u4e00\u4e2a\u53d8\u91cf s := fmt . Sprintf ( \"a %s\" , \"string\" ) fmt . Println ( s ) // \u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528`Fprintf`\u6765\u5c06\u683c\u5f0f\u5316\u540e\u7684\u503c\u8f93\u51fa\u5230`io.Writers` fmt . Fprintf ( os . Stderr , \"an %s\\n\" , \"error\" ) }","title":"\u5e38\u7528\u683c\u5f0f\u5316\u8f93\u51fa\u51fd\u6570"},{"location":"goNotes/go-base/No2-%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E7%82%B9/#_14","text":"ackage main import \"fmt\" func main () { var a int fmt . Println ( \"\u8bf7\u8f93\u5165\u53d8\u91cfa\u7684\u503c\uff1a\" ) //fmt.Scanf(\"%d\", &a) \u963b\u585e\u7b49\u5f85\u7528\u6237\u7684\u8f93\u5165\uff0c\u522b\u5fd8\u4e86& //\u5bf9\u5e94\u683c\u5f0f\u5199\u6cd5 // fmt.Scanf(\"%d\", &a) //\u81ea\u52a8\u5339\u914d\u683c\u5f0f\u7684\u5199\u6cd5 fmt . Scan ( & a ) fmt . Println ( \"a =\" , a ) }","title":"\u5e38\u7528\u683c\u5f0f\u5316\u8f93\u5165\u51fd\u6570"},{"location":"goNotes/go-base/No3-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/","text":"No3-\u57fa\u672c\u6570\u636e\u7c7b\u578b \u00b6 Note-Time: 2021\u5e7409\u670817\u65e501:56:28 \u6570\u636e\u7c7b\u578b\u5206\u7c7b\u6982\u8ff0 \u00b6 \u57fa\u672c\u7c7b\u578b \u00b6 \u7c7b\u578b \u540d\u79f0 \u957f\u5ea6 \u96f6\u503c \u8bf4\u660e bool \u5e03\u5c14\u7c7b\u578b 1 false \u5176\u503c\u4e0d\u4e3a\u771f\u5373\u4e3a\u5047\uff0c\u4e0d\u53ef\u4ee5\u7528\u6570\u5b57\u4ee3\u8868true\u6216false byte \u5b57\u8282\u578b 1 0 uint8\u522b\u540d rune \u5b57\u7b26\u7c7b\u578b 4 0 \u4e13\u7528\u4e8e\u5b58\u50a8unicode\u7f16\u7801\uff0c\u7b49\u4ef7\u4e8euint32 init,uint \u6574\u578b 4\u62168 0 23\u4f4d\u621664\u4f4d int8,uint8 \u6574\u578b 1 0 -128-127,0-255 int16,uint16 \u6574\u578b 2 0 -32768-32768,0-65535 int32,uint32 \u6574\u578b 4 0 -21\u4ebf-21\u4ebf\uff0c0-42\u4ebf int64,uint64 \u6574\u578b 8 0 float32 \u6d6e\u70b9\u578b 4 0.0 \u5c0f\u6570\u4f4d\u7cbe\u786e\u52307\u4f4d float64 \u6d6e\u70b9\u578b 8 0.0 \u5c0f\u6570\u4f4d\u7cbe\u786e\u523015\u4f4d complex64 \u590d\u6570\u7c7b\u578b 8 complex128 \u590d\u6570\u7c7b\u578b 16 unitptr \u6574\u578b 4\u62168 \u8db3\u4ee5\u5b58\u50a8\u6307\u9488\u7684uint32\u6216uint64\u6574\u6570 string \u5b57\u7b26\u4e32 \"\" utf-8\u5b57\u7b26\u4e32 \u503c\u7c7b\u578b \u00b6 array(\u6570\u7ec4) \u3001 struct\uff08\u7ed3\u6784\u4f53\uff09\u3001 string \u5f15\u7528\u7c7b\u578b \u00b6 slice (\u5207\u7247)\u3001map(\u5b57\u5178)\uff0cchan \u63a5\u53e3\u7c7b\u578b \u00b6 interface \u51fd\u6570\u7c7b\u578b \u00b6 func \u57fa\u672c\u7c7b\u578b\u8be6\u8ff0 \u00b6 bool \u2014\u5e03\u5c14 \u00b6 \u5e03\u5c14\u7c7b\u578b\u53ea\u53ef\u4ee5\u662f\u5e38\u91cftrue\u6216false \u6570\u5b57\u7c7b\u578b\u548cbool\u7c7b\u578b\u4e0d\u80fd\u76f8\u4e92\u8f6c\u6362 package main import \"fmt\" func main () { //bool var w bool // \u7533\u58f0\u660e\u53d8\u91cf\uff0c\u5982\u679c\u6ca1\u6709\u521d\u59cb\u5316\uff0c\u9ed8\u8ba4\u4e3afalse var ww bool = true var www = true //\u81ea\u52a8\u63a8\u65ad\u7c7b\u578b fmt . Println ( w , ww , www ) a := true b := false fmt . Println ( a , b ) c := a && b fmt . Println ( c ) d := a || b fmt . Println ( d ) } string\u2014\u5b57\u7b26\u4e32 \u00b6 string-\u6982\u8ff0 \u00b6 \u5b57\u7b26\u4e32\u662f\u5b57\u8282\u7684\u96c6\u5408\uff0c\u5b57\u7b26\u4e32\u662f\u5b57\u8282\u7684\u5b9a\u957f\u6570\u7ec4\u3002 \u5b57\u7b26\u4e32\u662f\u4e00\u79cd\u503c\u7c7b\u578b\uff0c\u4e14\u503c\u4e0d\u53ef\u53d8\uff0c\u5373\u521b\u5efa\u67d0\u4e2a\u6587\u672c\u540e\u5c06\u65e0\u6cd5\u518d\u6b21\u4fee\u6539\u8fd9\u4e2a\u6587\u672c\u7684\u5185\u5bb9 \u5b57\u7b26\u4e32\u662f UTF-8 \u5b57\u7b26\u7684\u4e00\u4e2a\u5e8f\u5217\uff08\u5f53\u5b57\u7b26\u4e3a ASCII \u7801\u8868\u4e0a\u7684\u5b57\u7b26\u65f6\u5219\u5360\u7528 1 \u4e2a\u5b57\u8282\uff0c\u5176\u5b83\u5b57\u7b26\u6839\u636e\u9700\u8981\u5360\u7528 2-4 \u4e2a\u5b57\u8282\uff09 \u5185\u7f6e\u51fd\u6570len()\u8fd4\u56de\u7684\u662f\u5b57\u8282\u6570\u800c\u4e0d\u662f\u5b57\u7b26\u6570\u3002 \u5b57\u7b26\u4e32\u662f\u7528\u4e00\u5bf9\u53cc\u5f15\u53f7\"\u6216\u53cd\u5f15\u53f7``(\u952e\u76d8\u6570\u5b571\u7684\u5de6\u8fb9\u952e)\u62ec\u8d77\u6765\u5b9a\u4e49 package main import \"fmt\" func main () { //string var str1 string // \u58f0\u660e\u5b57\u7b26\u4e32\u7c7b\u578b str1 = \"aaa\" fmt . Println ( \"str1=\" , str1 ) first := \"Ronin\" last := \"ssWang\" name := first + last fmt . Println ( \"My name is\" , name ) fmt . Printf ( \"name \u7684\u7c7b\u578b\u662f %T\\n\" , name ) // len()\uff0c\u5185\u5efa\u51fd\u6570\uff0c\u53ef\u4ee5\u8fd4\u56de\u5b57\u7b26\u4e32\u6709\u591a\u5c11\u4e2a\u5b57\u7b26 fmt . Println ( \"len(name)=\" , len ( name )) //len(name)=11 //\u5982\u679c\u53ea\u60f3\u64cd\u4f5c\u67d0\u4e2a\u5b57\u7b26\uff0c\u53ef\u7528\u5982\u4e0b\u65b9\u5f0f fmt . Printf ( \"name[0] = %c, name[1] = %c\" , name [ 0 ], name [ 1 ]) } string\u7684\u5e38\u7528\u64cd\u4f5c \u00b6 \u5305\u542b \u00b6 Contains ( s , substr string ) bool \u5305\u542b\u5b50\u5b57\u7b26\u4e32 ContainsAny ( s , chars string ) bool \u4efb\u610f\u70b9\u7801\u503c\u662f\u5426s\u4e2d\u51fa\u73b0 ContainsRune ( s string , r rune ) bool r unicode\u503c\u662f\u5426s\u4e2d\u51fa\u73b0 Count ( s , sep string ) int sep \u5b50\u5b57\u7b26\u4e32\u51fa\u73b0\u7684\u6b21\u6570 EqualFold ( s , t string ) bool \u6bd4\u8f83\u5b57\u7b26\u4e32\u76f8\u7b49\u5ffd\u7565\u5927\u5c0f\u5199 HasPrefix ( s , prefix string ) bool \u662f\u5426\u6709\u524d\u7f00 HasSuffix ( s , suffix string ) bool \u662f\u5426\u6709\u540e\u7f00 fmt . Println ( strings . Contains ( \"seafood\" , \"foo\" )) //true fmt . Println ( strings . Contains ( \"seafood\" , \"bar\" )) //false fmt . Println ( strings . Contains ( \"seafood\" , \"\" )) //true fmt . Println ( strings . Contains ( \"\" , \"\" )) //true fmt . Println ( strings . ContainsAny ( \"test\" , \"\" )) //false fmt . Println ( strings . ContainsAny ( \"test\" , \"tr\" )) //true fmt . Println ( strings . Count ( \"test\" , \"t\" )) //2 \u4f4d\u7f6e \u00b6 Index ( s , sep string ) int \u8fd4\u56de\u7b2c\u4e00\u4e2asep\u5728s\u4e2d\u7684\u4f4d\u7f6e IndexAny ( s , chars string ) int \u8fd4\u56dechars\u4e2dunicode\u7801\u70b9\u5728s\u4e2d\u7b2c\u4e00\u4e2a\u6240\u5728\u7684\u4f4d\u7f6e IndexFunc ( s string , f func ( rune ) bool ) int \u8fd4\u56des \u4e2dunicode\u7801\u70b9\u6ee1\u8db3\u51fd\u6570f\u7684\u4f4d\u7f6e IndexByte ( s string , c byte ) int \u8fd4\u56de\u7b2c\u4e00\u4e2ac byte\u5728s\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e IndexRune ( s string , r rune ) int \u8fd4\u56de\u7b2c\u4e00\u4e2ar unicode\u5728s\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e LastIndex ( s , sep string ) int LastIndexAny ( s , chars string ) LastIndexFunc ( s string , f func ( rune ) bool ) int \u8fc7\u6ee4 \u00b6 Trim ( s string , cutset string ) string \u4ece\u4e24\u7aef\u8fc7\u6ee4\u5305\u542bcutset\u4e2d\u7801\u70b9\u503c TrimFunc ( s string , f func ( rune ) bool ) string\u4ece\u4e24\u7aef\u8fc7\u6ee4\u6ee1\u8db3f\u7684\u7801\u70b9\u503c TrimLeft ( s , string , cutset s string ) string TrimLeftFunc ( s string , f func ( rune ) bool ) string TrimRight ( s , string , cutset s string ) string TrimRightFunc ( s string , f func ( rune ) bool ) string TrimSpace ( s string ) string \u4ece\u4e24\u7aef\u8fc7\u6ee4\u7a7a\u767d\u5b57\u7b26\u548c\u7a7a\u683c \u66ff\u6362 \u00b6 Map ( mapping func ( rune ) rune , s string ) string \u6839\u636emapping\u51fd\u6570\u66ff\u6362\u91cc\u9762\u6bcf\u4e2arune NewReplacer ( oldnew \u2026 string ) \u521b\u5efa\u4e00\u4e2a\u66ff\u6362\u5668\u5bf9\u8c61 Replace ( s , old , new string , n int ) string \u628aold \u66ff\u6362\u4e3anew \u5927\u5c0f\u5199 \u00b6 Title ( s string ) string \u5bf9s\u4e2d\u6bcf\u4e00\u4e2a\u5355\u8bcd\u8fdb\u884c\u6807\u9898\u9996\u5b57\u6bcd\u5927\u5199 ToTitle ( s string ) string \u5f97\u5230s\u7684\u6807\u9898\u683c\u5f0f ToLower ( s string ) string \u5f97\u5230\u5c0f\u5199 ToLowerSpeical ( case unicode . SpecialCase , s string ) string \u9488\u5bf9\u7279\u6b8a\u7684\u7f16\u7801\u683c\u5f0f\u5c0f\u5199 ToUpper ( s string ) string ToUpperSpeical ( case unicode . SpecialCase , s string ) string \u5206\u5272 \u00b6 Fields ( s string ) [] string \u5bf9\u5b57\u7b26\u4e32\u6309\u7a7a\u767d\u8fdb\u884c\u5206\u5272 FieldsFunc ( s string , f func ( rune ) bool ) \u5bf9\u6ee1\u8db3f\u7684\u51fd\u6570\u8fdb\u884c\u5207\u5272 Split ( s , sep string ) [] string \u4ee5sep\u5bf9\u5b57\u7b26\u4e32s\u8fdb\u884c\u5206\u5272 SplitN ( s , sep string , n int )[] string \u4ee5sep\u5bf9\u5b57\u7b26\u4e32s\u8fdb\u884c\u5206\u5272\u6210\u51e0\u90e8\u5206 SplitAfter ( s , sep string ) [] string SplitAfterN ( s , sep string , n int )[] string TrimPrefix ( s , prefix string ) string \u53bb\u6389\u524d\u7f00 TrimSuffix ( s , suffix string ) string \u53bb\u6389\u540e\u7f00 \u5408\u5e76 \u00b6 Join ( a [] string , sep string ) string\u7528\u5206\u5272\u7b26sep\u5408\u5e76a NewReader ( s string ) * Reader \u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32\u5bf9\u8c61 Repeat ( s string , count int ) string \u65b0\u751f\u6210\u4e00\u4e2as\u91cd\u590d\u51e0\u6b21\u7684\u5b57\u7b26\u4e32 \u8f6c\u6362 \u00b6 \u5b57\u7b26\u4e32\u8f6c\u5316\u7684\u51fd\u6570\u5728strconv\u4e2d\uff0c\u5982\u4e0b\u4e5f\u53ea\u662f\u5217\u51fa\u4e00\u4e9b\u5e38\u7528\u7684\uff1a Append \u7cfb\u5217\u51fd\u6570\u5c06\u6574\u6570\u7b49\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u540e\uff0c\u6dfb\u52a0\u5230\u73b0\u6709\u7684\u5b57\u8282\u6570\u7ec4\u4e2d\u3002 package main import ( \"fmt\" \"strconv\" ) func main () { str := make ([] byte , 0 , 100 ) str = strconv . AppendInt ( str , 4567 , 10 ) str = strconv . AppendBool ( str , false ) str = strconv . AppendQuote ( str , \"abcdefg\" ) str = strconv . AppendQuoteRune ( str , '\u5355' ) fmt . Println ( string ( str )) } Format \u7cfb\u5217\u51fd\u6570\u628a\u5176\u4ed6\u7c7b\u578b\u7684\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32 package main import ( \"fmt\" \"strconv\" ) func main () { a := strconv . FormatBool ( false ) b := strconv . FormatFloat ( 123.23 , 'g' , 12 , 64 ) c := strconv . FormatInt ( 1234 , 10 ) d := strconv . FormatUint ( 12345 , 10 ) e := strconv . Itoa ( 1023 ) fmt . Println ( a , b , c , d , e ) } Parse \u7cfb\u5217\u51fd\u6570\u628a\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5176\u4ed6\u7c7b\u578b package main import ( \"fmt\" \"strconv\" ) func checkError ( e error ){ if e != nil { fmt . Println ( e ) } } func main () { a , err := strconv . ParseBool ( \"false\" ) checkError ( err ) b , err := strconv . ParseFloat ( \"123.23\" , 64 ) checkError ( err ) c , err := strconv . ParseInt ( \"1234\" , 10 , 64 ) checkError ( err ) d , err := strconv . ParseUint ( \"12345\" , 10 , 64 ) checkError ( err ) e , err := strconv . Atoi ( \"1023\" ) checkError ( err ) fmt . Println ( a , b , c , d , e ) } \u904d\u5386 \u00b6 range \u5728\u5b57\u7b26\u4e32\u4e2d\u8fed\u4ee3 unicode \u7f16\u7801\u3002\u7b2c\u4e00\u4e2a\u8fd4\u56de\u503c\u662frune \u7684\u8d77\u59cb\u5b57\u8282\u4f4d\u7f6e\uff0c\u7136\u540e\u7b2c\u4e8c\u4e2a\u662f rune \u81ea\u5df1\u3002 for index , value := range \"123ABCabc\" { fmt . Println ( index , value ) } byte\u2014\u5b57\u7b26 \u00b6 package main import \"fmt\" func main () { //byte var n byte n = 87 fmt . Printf ( \"%c, %d\\n\" , n , n ) //%c:\u4ee5\u5b57\u7b26\u7684\u5f62\u5f0f\u6253\u5370\uff0c%d:\u4ee5\u6574\u578b\u65b9\u5f0f\u6253\u5370 var ch byte ch = 'a' // \u5355\u5f15\u53f7\u8868\u793a\u5b57\u7b26\uff0c \u53cc\u5f15\u53f7\u8868\u793a\u5b57\u7b26\u4e32 fmt . Printf ( \"%c, %d\\n\" , ch , ch ) } rune \u00b6 rune\u9ed8\u8ba4\u7684\u5b57\u7b26\u7f16\u7801\u662futf-8\u7c7b\u578b\u7684 rune\u5185\u7f6e\u4e24\u79cd\u5b57\u7b26\u7c7b\u578b byte\u5b57\u8282\u7c7b\u578b\uff08byte\u662fuint\u7684\u522b\u540d\uff09 \u8868\u793aUnicode\u7f16\u7801\u7684\u5b57\u7b26rune, \u5728go\u5185\u90e8\u662fint32\u7c7b\u578b\u7684\u522b\u540d\uff0c\u5360\u75284\u4e2a\u5b57\u8282 package main import \"fmt\" func main () { //rune str := \"nihao\u4f60\u597d\" fmt . Println ( len ( str )) k := [] byte ( str ) for _ , v := range k { fmt . Print ( string ( v )) //nihao\u00e4\u00bd \u00e5\u00a5\u00bd } fmt . Println ( \"\" ) r := [] rune ( str ) for _ , v := range r { fmt . Print ( string ( v )) // nihao\u4f60\u597d } fmt . Println ( \"\" ) r [ 0 ] = 'N' r [ 5 ] = '\u60a8' fmt . Println ( string ( r )) // Nihao\u60a8\u597d } float\u2014\u6d6e\u70b9\u578b \u00b6 package main import \"fmt\" func main () { // float var y float32 y = 3.3 yy := 6.555 // \u81ea\u52a8\u63a8\u5bfc\u7c7b\u578b\uff0c\u9ed8\u8ba4\u662ffloat64,\u8981\u6bd4float32\u66f4\u7cbe\u786e fmt . Println ( \"y=\" , y ) fmt . Printf ( \"yy\u7684\u7c7b\u578b\u4e3a %T\" , yy ) //yy\u7684\u7c7b\u578b\u4e3a float64 } complex\u2014\u590d\u6570\u7c7b\u578b \u00b6 package main import \"fmt\" func main () { //complex var t complex128 t = 2.1 + 3.14i fmt . Println ( \"t=\" , t ) t1 := 3.3 + 5.5i fmt . Printf ( \"t1\u7684\u7c7b\u578b\u662f%T\\n\" , t1 ) // \u901a\u8fc7\u5185\u5efa\u51fd\u6570\uff0c\u53d6\u51fa\u5b9e\u90e8\u548c\u865a\u90e8 fmt . Println ( \"real(t1)=\" , real ( t1 ), \"imag(t1)=\" , imag ( t1 )) //real(t1)= 3.3 imag(t1)= 5.5 } \u5e38\u7528\u7c7b\u578b\u8f6c\u6362 \u00b6 package main import \"fmt\" func main () { //\u4e0d\u80fd\u8f6c\u6362\u7684\u7c7b\u578b\uff0c\u53eb\u4e0d\u517c\u5bb9\u7c7b\u578b\uff0c\u5148\u4e3e\u4e00\u4e2a\u4e0d\u80fd\u8f6c\u6362\u7684\u4f8b\u5b50 var flag bool flag = true fmt . Printf ( \"flag = %t\\n\" , flag ) //bool\u7c7b\u578b\u4e0d\u80fd\u8f6c\u6362\u4e3aint //fmt.Printf(\"flag = %d\\n\", int(flag)) // 0\u5c31\u662f\u5047\uff0c\u975e0\u5c31\u662f\u771f // \u6574\u578b\u4e5f\u4e0d\u80fd\u8f6c\u6362\u4e3abool // flag = bool(1) //\u518d\u4e3e\u4e00\u4e2a\u80fd\u591f\u8f6c\u6362\u7684\u4f8b\u5b50\u3002 var ch byte ch = 'a' //\u5b57\u7b26\u7c7b\u578b\u672c\u8d28\u4e0a\u5c31\u662f\u6574\u578b var t int t = int ( ch ) //\u7c7b\u578b\u8f6c\u6362\uff0c\u8868\u793a\u628ach\u7684\u503c\u53d6\u51fa\u6765\u4e4b\u540e\uff0c\u8f6c\u6210int\u518d\u8d4b\u7ed9t fmt . Println ( \"t =\" , t ) } \u7ed9\u7c7b\u578b\u53d6\u522b\u540d \u00b6 package main import \"fmt\" func main () { //\u7ed9int64\u8d77\u4e00\u4e2a\u522b\u540dbigint\uff0c\u522b\u540d\u7684\u5173\u952e\u5b57\u662ftype type bigint int64 var a bigint //\u7b49\u4ef7\u4e8e var a int64 fmt . Printf ( \"a type is %T\\n\" , a ) //\u4e5f\u53ef\u4ee5\u4e00\u6b21\u6027\u8d77\u591a\u4e2a\u522b\u540d type ( long int64 char byte ) var b long = 11 var c char = 'a' fmt . Printf ( \"b = %d, c = %d\\n\" , b , c ) }","title":"No3-\u57fa\u672c\u6570\u636e\u7c7b\u578b"},{"location":"goNotes/go-base/No3-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#no3-","text":"Note-Time: 2021\u5e7409\u670817\u65e501:56:28","title":"No3-\u57fa\u672c\u6570\u636e\u7c7b\u578b"},{"location":"goNotes/go-base/No3-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_1","text":"","title":"\u6570\u636e\u7c7b\u578b\u5206\u7c7b\u6982\u8ff0"},{"location":"goNotes/go-base/No3-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_2","text":"\u7c7b\u578b \u540d\u79f0 \u957f\u5ea6 \u96f6\u503c \u8bf4\u660e bool \u5e03\u5c14\u7c7b\u578b 1 false \u5176\u503c\u4e0d\u4e3a\u771f\u5373\u4e3a\u5047\uff0c\u4e0d\u53ef\u4ee5\u7528\u6570\u5b57\u4ee3\u8868true\u6216false byte \u5b57\u8282\u578b 1 0 uint8\u522b\u540d rune \u5b57\u7b26\u7c7b\u578b 4 0 \u4e13\u7528\u4e8e\u5b58\u50a8unicode\u7f16\u7801\uff0c\u7b49\u4ef7\u4e8euint32 init,uint \u6574\u578b 4\u62168 0 23\u4f4d\u621664\u4f4d int8,uint8 \u6574\u578b 1 0 -128-127,0-255 int16,uint16 \u6574\u578b 2 0 -32768-32768,0-65535 int32,uint32 \u6574\u578b 4 0 -21\u4ebf-21\u4ebf\uff0c0-42\u4ebf int64,uint64 \u6574\u578b 8 0 float32 \u6d6e\u70b9\u578b 4 0.0 \u5c0f\u6570\u4f4d\u7cbe\u786e\u52307\u4f4d float64 \u6d6e\u70b9\u578b 8 0.0 \u5c0f\u6570\u4f4d\u7cbe\u786e\u523015\u4f4d complex64 \u590d\u6570\u7c7b\u578b 8 complex128 \u590d\u6570\u7c7b\u578b 16 unitptr \u6574\u578b 4\u62168 \u8db3\u4ee5\u5b58\u50a8\u6307\u9488\u7684uint32\u6216uint64\u6574\u6570 string \u5b57\u7b26\u4e32 \"\" utf-8\u5b57\u7b26\u4e32","title":"\u57fa\u672c\u7c7b\u578b"},{"location":"goNotes/go-base/No3-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_3","text":"array(\u6570\u7ec4) \u3001 struct\uff08\u7ed3\u6784\u4f53\uff09\u3001 string","title":"\u503c\u7c7b\u578b"},{"location":"goNotes/go-base/No3-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_4","text":"slice (\u5207\u7247)\u3001map(\u5b57\u5178)\uff0cchan","title":"\u5f15\u7528\u7c7b\u578b"},{"location":"goNotes/go-base/No3-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_5","text":"interface","title":"\u63a5\u53e3\u7c7b\u578b"},{"location":"goNotes/go-base/No3-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_6","text":"func","title":"\u51fd\u6570\u7c7b\u578b"},{"location":"goNotes/go-base/No3-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_7","text":"","title":"\u57fa\u672c\u7c7b\u578b\u8be6\u8ff0"},{"location":"goNotes/go-base/No3-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#bool","text":"\u5e03\u5c14\u7c7b\u578b\u53ea\u53ef\u4ee5\u662f\u5e38\u91cftrue\u6216false \u6570\u5b57\u7c7b\u578b\u548cbool\u7c7b\u578b\u4e0d\u80fd\u76f8\u4e92\u8f6c\u6362 package main import \"fmt\" func main () { //bool var w bool // \u7533\u58f0\u660e\u53d8\u91cf\uff0c\u5982\u679c\u6ca1\u6709\u521d\u59cb\u5316\uff0c\u9ed8\u8ba4\u4e3afalse var ww bool = true var www = true //\u81ea\u52a8\u63a8\u65ad\u7c7b\u578b fmt . Println ( w , ww , www ) a := true b := false fmt . Println ( a , b ) c := a && b fmt . Println ( c ) d := a || b fmt . Println ( d ) }","title":"bool \u2014\u5e03\u5c14"},{"location":"goNotes/go-base/No3-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#string","text":"","title":"string\u2014\u5b57\u7b26\u4e32"},{"location":"goNotes/go-base/No3-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#string-","text":"\u5b57\u7b26\u4e32\u662f\u5b57\u8282\u7684\u96c6\u5408\uff0c\u5b57\u7b26\u4e32\u662f\u5b57\u8282\u7684\u5b9a\u957f\u6570\u7ec4\u3002 \u5b57\u7b26\u4e32\u662f\u4e00\u79cd\u503c\u7c7b\u578b\uff0c\u4e14\u503c\u4e0d\u53ef\u53d8\uff0c\u5373\u521b\u5efa\u67d0\u4e2a\u6587\u672c\u540e\u5c06\u65e0\u6cd5\u518d\u6b21\u4fee\u6539\u8fd9\u4e2a\u6587\u672c\u7684\u5185\u5bb9 \u5b57\u7b26\u4e32\u662f UTF-8 \u5b57\u7b26\u7684\u4e00\u4e2a\u5e8f\u5217\uff08\u5f53\u5b57\u7b26\u4e3a ASCII \u7801\u8868\u4e0a\u7684\u5b57\u7b26\u65f6\u5219\u5360\u7528 1 \u4e2a\u5b57\u8282\uff0c\u5176\u5b83\u5b57\u7b26\u6839\u636e\u9700\u8981\u5360\u7528 2-4 \u4e2a\u5b57\u8282\uff09 \u5185\u7f6e\u51fd\u6570len()\u8fd4\u56de\u7684\u662f\u5b57\u8282\u6570\u800c\u4e0d\u662f\u5b57\u7b26\u6570\u3002 \u5b57\u7b26\u4e32\u662f\u7528\u4e00\u5bf9\u53cc\u5f15\u53f7\"\u6216\u53cd\u5f15\u53f7``(\u952e\u76d8\u6570\u5b571\u7684\u5de6\u8fb9\u952e)\u62ec\u8d77\u6765\u5b9a\u4e49 package main import \"fmt\" func main () { //string var str1 string // \u58f0\u660e\u5b57\u7b26\u4e32\u7c7b\u578b str1 = \"aaa\" fmt . Println ( \"str1=\" , str1 ) first := \"Ronin\" last := \"ssWang\" name := first + last fmt . Println ( \"My name is\" , name ) fmt . Printf ( \"name \u7684\u7c7b\u578b\u662f %T\\n\" , name ) // len()\uff0c\u5185\u5efa\u51fd\u6570\uff0c\u53ef\u4ee5\u8fd4\u56de\u5b57\u7b26\u4e32\u6709\u591a\u5c11\u4e2a\u5b57\u7b26 fmt . Println ( \"len(name)=\" , len ( name )) //len(name)=11 //\u5982\u679c\u53ea\u60f3\u64cd\u4f5c\u67d0\u4e2a\u5b57\u7b26\uff0c\u53ef\u7528\u5982\u4e0b\u65b9\u5f0f fmt . Printf ( \"name[0] = %c, name[1] = %c\" , name [ 0 ], name [ 1 ]) }","title":"string-\u6982\u8ff0"},{"location":"goNotes/go-base/No3-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#string_1","text":"","title":"string\u7684\u5e38\u7528\u64cd\u4f5c"},{"location":"goNotes/go-base/No3-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_8","text":"Contains ( s , substr string ) bool \u5305\u542b\u5b50\u5b57\u7b26\u4e32 ContainsAny ( s , chars string ) bool \u4efb\u610f\u70b9\u7801\u503c\u662f\u5426s\u4e2d\u51fa\u73b0 ContainsRune ( s string , r rune ) bool r unicode\u503c\u662f\u5426s\u4e2d\u51fa\u73b0 Count ( s , sep string ) int sep \u5b50\u5b57\u7b26\u4e32\u51fa\u73b0\u7684\u6b21\u6570 EqualFold ( s , t string ) bool \u6bd4\u8f83\u5b57\u7b26\u4e32\u76f8\u7b49\u5ffd\u7565\u5927\u5c0f\u5199 HasPrefix ( s , prefix string ) bool \u662f\u5426\u6709\u524d\u7f00 HasSuffix ( s , suffix string ) bool \u662f\u5426\u6709\u540e\u7f00 fmt . Println ( strings . Contains ( \"seafood\" , \"foo\" )) //true fmt . Println ( strings . Contains ( \"seafood\" , \"bar\" )) //false fmt . Println ( strings . Contains ( \"seafood\" , \"\" )) //true fmt . Println ( strings . Contains ( \"\" , \"\" )) //true fmt . Println ( strings . ContainsAny ( \"test\" , \"\" )) //false fmt . Println ( strings . ContainsAny ( \"test\" , \"tr\" )) //true fmt . Println ( strings . Count ( \"test\" , \"t\" )) //2","title":"\u5305\u542b"},{"location":"goNotes/go-base/No3-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_9","text":"Index ( s , sep string ) int \u8fd4\u56de\u7b2c\u4e00\u4e2asep\u5728s\u4e2d\u7684\u4f4d\u7f6e IndexAny ( s , chars string ) int \u8fd4\u56dechars\u4e2dunicode\u7801\u70b9\u5728s\u4e2d\u7b2c\u4e00\u4e2a\u6240\u5728\u7684\u4f4d\u7f6e IndexFunc ( s string , f func ( rune ) bool ) int \u8fd4\u56des \u4e2dunicode\u7801\u70b9\u6ee1\u8db3\u51fd\u6570f\u7684\u4f4d\u7f6e IndexByte ( s string , c byte ) int \u8fd4\u56de\u7b2c\u4e00\u4e2ac byte\u5728s\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e IndexRune ( s string , r rune ) int \u8fd4\u56de\u7b2c\u4e00\u4e2ar unicode\u5728s\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e LastIndex ( s , sep string ) int LastIndexAny ( s , chars string ) LastIndexFunc ( s string , f func ( rune ) bool ) int","title":"\u4f4d\u7f6e"},{"location":"goNotes/go-base/No3-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_10","text":"Trim ( s string , cutset string ) string \u4ece\u4e24\u7aef\u8fc7\u6ee4\u5305\u542bcutset\u4e2d\u7801\u70b9\u503c TrimFunc ( s string , f func ( rune ) bool ) string\u4ece\u4e24\u7aef\u8fc7\u6ee4\u6ee1\u8db3f\u7684\u7801\u70b9\u503c TrimLeft ( s , string , cutset s string ) string TrimLeftFunc ( s string , f func ( rune ) bool ) string TrimRight ( s , string , cutset s string ) string TrimRightFunc ( s string , f func ( rune ) bool ) string TrimSpace ( s string ) string \u4ece\u4e24\u7aef\u8fc7\u6ee4\u7a7a\u767d\u5b57\u7b26\u548c\u7a7a\u683c","title":"\u8fc7\u6ee4"},{"location":"goNotes/go-base/No3-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_11","text":"Map ( mapping func ( rune ) rune , s string ) string \u6839\u636emapping\u51fd\u6570\u66ff\u6362\u91cc\u9762\u6bcf\u4e2arune NewReplacer ( oldnew \u2026 string ) \u521b\u5efa\u4e00\u4e2a\u66ff\u6362\u5668\u5bf9\u8c61 Replace ( s , old , new string , n int ) string \u628aold \u66ff\u6362\u4e3anew","title":"\u66ff\u6362"},{"location":"goNotes/go-base/No3-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_12","text":"Title ( s string ) string \u5bf9s\u4e2d\u6bcf\u4e00\u4e2a\u5355\u8bcd\u8fdb\u884c\u6807\u9898\u9996\u5b57\u6bcd\u5927\u5199 ToTitle ( s string ) string \u5f97\u5230s\u7684\u6807\u9898\u683c\u5f0f ToLower ( s string ) string \u5f97\u5230\u5c0f\u5199 ToLowerSpeical ( case unicode . SpecialCase , s string ) string \u9488\u5bf9\u7279\u6b8a\u7684\u7f16\u7801\u683c\u5f0f\u5c0f\u5199 ToUpper ( s string ) string ToUpperSpeical ( case unicode . SpecialCase , s string ) string","title":"\u5927\u5c0f\u5199"},{"location":"goNotes/go-base/No3-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_13","text":"Fields ( s string ) [] string \u5bf9\u5b57\u7b26\u4e32\u6309\u7a7a\u767d\u8fdb\u884c\u5206\u5272 FieldsFunc ( s string , f func ( rune ) bool ) \u5bf9\u6ee1\u8db3f\u7684\u51fd\u6570\u8fdb\u884c\u5207\u5272 Split ( s , sep string ) [] string \u4ee5sep\u5bf9\u5b57\u7b26\u4e32s\u8fdb\u884c\u5206\u5272 SplitN ( s , sep string , n int )[] string \u4ee5sep\u5bf9\u5b57\u7b26\u4e32s\u8fdb\u884c\u5206\u5272\u6210\u51e0\u90e8\u5206 SplitAfter ( s , sep string ) [] string SplitAfterN ( s , sep string , n int )[] string TrimPrefix ( s , prefix string ) string \u53bb\u6389\u524d\u7f00 TrimSuffix ( s , suffix string ) string \u53bb\u6389\u540e\u7f00","title":"\u5206\u5272"},{"location":"goNotes/go-base/No3-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_14","text":"Join ( a [] string , sep string ) string\u7528\u5206\u5272\u7b26sep\u5408\u5e76a NewReader ( s string ) * Reader \u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32\u5bf9\u8c61 Repeat ( s string , count int ) string \u65b0\u751f\u6210\u4e00\u4e2as\u91cd\u590d\u51e0\u6b21\u7684\u5b57\u7b26\u4e32","title":"\u5408\u5e76"},{"location":"goNotes/go-base/No3-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_15","text":"\u5b57\u7b26\u4e32\u8f6c\u5316\u7684\u51fd\u6570\u5728strconv\u4e2d\uff0c\u5982\u4e0b\u4e5f\u53ea\u662f\u5217\u51fa\u4e00\u4e9b\u5e38\u7528\u7684\uff1a Append \u7cfb\u5217\u51fd\u6570\u5c06\u6574\u6570\u7b49\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u540e\uff0c\u6dfb\u52a0\u5230\u73b0\u6709\u7684\u5b57\u8282\u6570\u7ec4\u4e2d\u3002 package main import ( \"fmt\" \"strconv\" ) func main () { str := make ([] byte , 0 , 100 ) str = strconv . AppendInt ( str , 4567 , 10 ) str = strconv . AppendBool ( str , false ) str = strconv . AppendQuote ( str , \"abcdefg\" ) str = strconv . AppendQuoteRune ( str , '\u5355' ) fmt . Println ( string ( str )) } Format \u7cfb\u5217\u51fd\u6570\u628a\u5176\u4ed6\u7c7b\u578b\u7684\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32 package main import ( \"fmt\" \"strconv\" ) func main () { a := strconv . FormatBool ( false ) b := strconv . FormatFloat ( 123.23 , 'g' , 12 , 64 ) c := strconv . FormatInt ( 1234 , 10 ) d := strconv . FormatUint ( 12345 , 10 ) e := strconv . Itoa ( 1023 ) fmt . Println ( a , b , c , d , e ) } Parse \u7cfb\u5217\u51fd\u6570\u628a\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5176\u4ed6\u7c7b\u578b package main import ( \"fmt\" \"strconv\" ) func checkError ( e error ){ if e != nil { fmt . Println ( e ) } } func main () { a , err := strconv . ParseBool ( \"false\" ) checkError ( err ) b , err := strconv . ParseFloat ( \"123.23\" , 64 ) checkError ( err ) c , err := strconv . ParseInt ( \"1234\" , 10 , 64 ) checkError ( err ) d , err := strconv . ParseUint ( \"12345\" , 10 , 64 ) checkError ( err ) e , err := strconv . Atoi ( \"1023\" ) checkError ( err ) fmt . Println ( a , b , c , d , e ) }","title":"\u8f6c\u6362"},{"location":"goNotes/go-base/No3-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_16","text":"range \u5728\u5b57\u7b26\u4e32\u4e2d\u8fed\u4ee3 unicode \u7f16\u7801\u3002\u7b2c\u4e00\u4e2a\u8fd4\u56de\u503c\u662frune \u7684\u8d77\u59cb\u5b57\u8282\u4f4d\u7f6e\uff0c\u7136\u540e\u7b2c\u4e8c\u4e2a\u662f rune \u81ea\u5df1\u3002 for index , value := range \"123ABCabc\" { fmt . Println ( index , value ) }","title":"\u904d\u5386"},{"location":"goNotes/go-base/No3-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#byte","text":"package main import \"fmt\" func main () { //byte var n byte n = 87 fmt . Printf ( \"%c, %d\\n\" , n , n ) //%c:\u4ee5\u5b57\u7b26\u7684\u5f62\u5f0f\u6253\u5370\uff0c%d:\u4ee5\u6574\u578b\u65b9\u5f0f\u6253\u5370 var ch byte ch = 'a' // \u5355\u5f15\u53f7\u8868\u793a\u5b57\u7b26\uff0c \u53cc\u5f15\u53f7\u8868\u793a\u5b57\u7b26\u4e32 fmt . Printf ( \"%c, %d\\n\" , ch , ch ) }","title":"byte\u2014\u5b57\u7b26"},{"location":"goNotes/go-base/No3-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#rune","text":"rune\u9ed8\u8ba4\u7684\u5b57\u7b26\u7f16\u7801\u662futf-8\u7c7b\u578b\u7684 rune\u5185\u7f6e\u4e24\u79cd\u5b57\u7b26\u7c7b\u578b byte\u5b57\u8282\u7c7b\u578b\uff08byte\u662fuint\u7684\u522b\u540d\uff09 \u8868\u793aUnicode\u7f16\u7801\u7684\u5b57\u7b26rune, \u5728go\u5185\u90e8\u662fint32\u7c7b\u578b\u7684\u522b\u540d\uff0c\u5360\u75284\u4e2a\u5b57\u8282 package main import \"fmt\" func main () { //rune str := \"nihao\u4f60\u597d\" fmt . Println ( len ( str )) k := [] byte ( str ) for _ , v := range k { fmt . Print ( string ( v )) //nihao\u00e4\u00bd \u00e5\u00a5\u00bd } fmt . Println ( \"\" ) r := [] rune ( str ) for _ , v := range r { fmt . Print ( string ( v )) // nihao\u4f60\u597d } fmt . Println ( \"\" ) r [ 0 ] = 'N' r [ 5 ] = '\u60a8' fmt . Println ( string ( r )) // Nihao\u60a8\u597d }","title":"rune"},{"location":"goNotes/go-base/No3-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#float","text":"package main import \"fmt\" func main () { // float var y float32 y = 3.3 yy := 6.555 // \u81ea\u52a8\u63a8\u5bfc\u7c7b\u578b\uff0c\u9ed8\u8ba4\u662ffloat64,\u8981\u6bd4float32\u66f4\u7cbe\u786e fmt . Println ( \"y=\" , y ) fmt . Printf ( \"yy\u7684\u7c7b\u578b\u4e3a %T\" , yy ) //yy\u7684\u7c7b\u578b\u4e3a float64 }","title":"float\u2014\u6d6e\u70b9\u578b"},{"location":"goNotes/go-base/No3-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#complex","text":"package main import \"fmt\" func main () { //complex var t complex128 t = 2.1 + 3.14i fmt . Println ( \"t=\" , t ) t1 := 3.3 + 5.5i fmt . Printf ( \"t1\u7684\u7c7b\u578b\u662f%T\\n\" , t1 ) // \u901a\u8fc7\u5185\u5efa\u51fd\u6570\uff0c\u53d6\u51fa\u5b9e\u90e8\u548c\u865a\u90e8 fmt . Println ( \"real(t1)=\" , real ( t1 ), \"imag(t1)=\" , imag ( t1 )) //real(t1)= 3.3 imag(t1)= 5.5 }","title":"complex\u2014\u590d\u6570\u7c7b\u578b"},{"location":"goNotes/go-base/No3-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_17","text":"package main import \"fmt\" func main () { //\u4e0d\u80fd\u8f6c\u6362\u7684\u7c7b\u578b\uff0c\u53eb\u4e0d\u517c\u5bb9\u7c7b\u578b\uff0c\u5148\u4e3e\u4e00\u4e2a\u4e0d\u80fd\u8f6c\u6362\u7684\u4f8b\u5b50 var flag bool flag = true fmt . Printf ( \"flag = %t\\n\" , flag ) //bool\u7c7b\u578b\u4e0d\u80fd\u8f6c\u6362\u4e3aint //fmt.Printf(\"flag = %d\\n\", int(flag)) // 0\u5c31\u662f\u5047\uff0c\u975e0\u5c31\u662f\u771f // \u6574\u578b\u4e5f\u4e0d\u80fd\u8f6c\u6362\u4e3abool // flag = bool(1) //\u518d\u4e3e\u4e00\u4e2a\u80fd\u591f\u8f6c\u6362\u7684\u4f8b\u5b50\u3002 var ch byte ch = 'a' //\u5b57\u7b26\u7c7b\u578b\u672c\u8d28\u4e0a\u5c31\u662f\u6574\u578b var t int t = int ( ch ) //\u7c7b\u578b\u8f6c\u6362\uff0c\u8868\u793a\u628ach\u7684\u503c\u53d6\u51fa\u6765\u4e4b\u540e\uff0c\u8f6c\u6210int\u518d\u8d4b\u7ed9t fmt . Println ( \"t =\" , t ) }","title":"\u5e38\u7528\u7c7b\u578b\u8f6c\u6362"},{"location":"goNotes/go-base/No3-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_18","text":"package main import \"fmt\" func main () { //\u7ed9int64\u8d77\u4e00\u4e2a\u522b\u540dbigint\uff0c\u522b\u540d\u7684\u5173\u952e\u5b57\u662ftype type bigint int64 var a bigint //\u7b49\u4ef7\u4e8e var a int64 fmt . Printf ( \"a type is %T\\n\" , a ) //\u4e5f\u53ef\u4ee5\u4e00\u6b21\u6027\u8d77\u591a\u4e2a\u522b\u540d type ( long int64 char byte ) var b long = 11 var c char = 'a' fmt . Printf ( \"b = %d, c = %d\\n\" , b , c ) }","title":"\u7ed9\u7c7b\u578b\u53d6\u522b\u540d"},{"location":"goNotes/go-base/No4-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","text":"\u57fa\u672c\u6570\u636e\u7ed3\u6784 \u00b6 Note-Time: 2021\u5e7409\u670818\u65e501:57:14 Array\u2014\u6570\u7ec4 \u00b6 \u5b9a\u4e49 \u00b6 \u6570\u7ec4\u662f\u4e00\u4e2a\u7531\u56fa\u5b9a\u957f\u5ea6\u7684\u5143\u7d20\u7c7b\u578b\u76f8\u540c\u7ec4\u6210\u7684\u6709\u5e8f\u96c6\u5408\uff0c\u4e00\u4e2a\u6570\u7ec4\u7531\u96f6\u6216\u8005\u591a\u4e2a\u5143\u7d20\u7ec4\u6210\u3002\u5176\u4e2dn\u662f\u6570\u7ec4\u957f\u5ea6\uff0c elementType\u662f\u6570\u7ec4\u5143\u7d20\u7c7b\u578b\u3002 [ n ] elmentType \u9ed8\u8ba4\u5b9a\u4e49 \u00b6 \u6570\u7ec4\u7684\u58f0\u660e\u9700\u8981\u5b58\u50a8\u5143\u7d20\u7684\u957f\u5ea6\u503c\u548c\u5b58\u50a8\u6570\u636e\u7684\u7c7b\u578b\u3002\u5176\u8868\u793a\u5f62\u5f0f\u4e3a [n]T \u3002 n \u8868\u793a\u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u957f\u5ea6\u503c\uff0c T \u4ee3\u8868\u6bcf\u4e2a\u5143\u7d20\u7684\u7c7b\u578b\uff0c\u6570\u7ec4\u7684\u957f\u5ea6\u5728\u58f0\u660e\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u7ed9\u5b9a\uff0c\u800c\u6570\u7ec4\u4e00\u65e6\u58f0\u660e\uff0c\u5176\u957f\u5ea6\u548c\u7c7b\u578b\u90fd\u4e0d\u80fd\u6539\u53d8\u3002 var <\u6570\u7ec4\u540d\u79f0> [<\u6570\u7ec4\u957f\u5ea6>]<\u5143\u7d20\u7c7b\u578b> eg: package main import ( \"fmt\" ) func main () { var a [ 3 ] int //int array with length 3 fmt . Println ( a ) } var a[3]int \u58f0\u660e\u4e86\u4e00\u4e2a\u957f\u5ea6\u4e3a 3 \u7684\u6574\u578b\u6570\u7ec4\u3002\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20\u90fd\u88ab\u81ea\u52a8\u8d4b\u503c\u4e3a\u6570\u7ec4\u7c7b\u578b\u7684\u96f6\u503c\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c a \u662f\u4e00\u4e2a\u6574\u578b\u6570\u7ec4\uff0c\u56e0\u6b64 a \u7684\u6240\u6709\u5143\u7d20\u90fd\u88ab\u8d4b\u503c\u4e3a 0 \uff0c\u5373 int \u578b\u7684\u96f6\u503c\u3002\u8fd0\u884c\u4e0a\u8ff0\u7a0b\u5e8f\u5c06\u8f93\u51fa [0 0 0] \u3002 \u6307\u5b9a\u5143\u7d20 \u00b6 \u521d\u59cb\u5316\u5143\u7d20\u901a\u8fc7\u5927\u62ec\u53f7\u5305\u88f9\u8d77\u6765\u3002 var < \u6570\u7ec4\u540d\u79f0 > = [< \u6570\u7ec4\u957f\u5ea6 >]< \u5143\u7d20\u7c7b\u578b >{ \u5143\u7d201 , \u5143\u7d202 , ... } eg: package main import ( \"fmt\" ) func main () { a := [ 3 ] int { 1 , 2 , 5 } fmt . Println ( a ) } \u5728\u7b80\u7565\u58f0\u660e\u4e2d\uff0c\u4e0d\u9700\u8981\u5c06\u6570\u7ec4\u4e2d\u6240\u6709\u7684\u5143\u7d20\u8d4b\u503c\u3002 package main import ( \"fmt\" ) func main () { a := [ 3 ] int { 10 } fmt . Println ( a ) } \u5728\u4e0a\u8ff0\u7a0b\u5e8f\u4e2d\u7684\u7b2c 8 \u884c a := [3]int{10} \u58f0\u660e\u4e00\u4e2a\u957f\u5ea6\u4e3a 3 \u7684\u6570\u7ec4\uff0c\u4f46\u53ea\u63d0\u4f9b\u4e86\u4e00\u4e2a\u503c 10 \uff0c\u5269\u4e0b\u7684 2 \u4e2a\u5143\u7d20\u81ea\u52a8\u8d4b\u503c\u4e3a 0 \u3002\u8fd9\u4e2a\u7a0b\u5e8f\u5c06\u8f93\u51fa [10 0 0] \u3002 \u7701\u7565\u53f7 \u00b6 \u6570\u7ec4\u7684\u957f\u5ea6\u53ef\u4ee5\u4f7f\u7528\u7701\u7565\u53f7 ... \u4ee3\u66ff\uff0c\u8fd9\u4e2a\u5e76\u4e0d\u662f\u4ee3\u8868\u53ef\u4ee5\u7701\u7565\u6570\u7ec4\u957f\u5ea6\u7684\u58f0\u660e\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u8ba1\u7b97\u6570\u7ec4\u957f\u5ea6\uff0c\u5b83\u7684\u957f\u5ea6\u503c\u7b49\u4e8e\u5f53\u524d\u6570\u7ec4\u521d\u59cb\u5316\u5143\u7d20\u7684\u4e2a\u6570\u3002 package main import ( \"fmt\" ) func main () { a := [ ... ] int { 12 , 78 , 50 } // ... makes the compiler determine the length fmt . Println ( a ) } \u7d22\u5f15\u5b9a\u4e49 \u00b6 [< \u6570\u7ec4\u957f\u5ea6 >]< \u5143\u7d20\u7c7b\u578b >{ \u7d22\u5f151 : \u5143\u7d201 , \u7d22\u5f152 : \u5143\u7d202 , \u2026 } const ( FIRST int = iota SECOND THIRD FOURTH ) func main () { arr := [ 4 ] string { FIRST : \"1\" , SECOND : \"2\" , THIRD : \"3\" , FOURTH : \"4\" } fmt . Println ( arr ) } //\u8f93\u51fa[1 2 3 4] \u6bd4\u8f83 \u00b6 \u540c\u6837\u7c7b\u578b\u7684\u6570\u7ec4\u662f\u53ef\u4ee5\u76f8\u4e92\u8d4b\u503c\u7684\uff0c\u76f8\u540c\u7c7b\u578b\u7684\u6570\u7ec4\u5fc5\u987b\u662f\u957f\u5ea6\u4e00\u6837\uff0c\u5e76\u4e14\u6bcf\u4e2a\u5143\u7d20\u7684\u7c7b\u578b\u4e5f\u4e00\u6837\u7684\u6570\u7ec4\uff0c\u56e0\u6b64\u6570\u7ec4\u7684\u5927\u5c0f\u662f\u7c7b\u578b\u7684\u4e00\u90e8\u5206\u3002\u56e0\u6b64 [5]int \u548c [25]int \u662f\u4e0d\u540c\u7c7b\u578b\u3002 package main func main () { a := [ 3 ] int { 5 , 78 , 8 } var b [ 5 ] int b = a } \u7c7b\u578b [3]int \u7684\u53d8\u91cf\u8d4b\u7ed9\u7c7b\u578b\u4e3a [5]int \u7684\u53d8\u91cf\uff0c\u8fd9\u662f\u4e0d\u5141\u8bb8\u7684\uff0c\u56e0\u6b64\u7f16\u8bd1\u5668\u5c06\u629b\u51fa\u9519\u8bef main.go:6: cannot use a (type [3]int) as type [5]int in assignment\u3002 \u503c\u7c7b\u578b \u00b6 \u6ce8\u610fGo \u4e2d\u7684\u6570\u7ec4\u662f\u503c\u7c7b\u578b\u800c\u4e0d\u662f\u5f15\u7528\u7c7b\u578b\u3002 \u6570\u7ec4\u8d4b\u503c \u00b6 \u5f53\u6570\u7ec4\u8d4b\u503c\u7ed9\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\u65f6\uff0c\u8be5\u53d8\u91cf\u4f1a\u5f97\u5230\u4e00\u4e2a\u539f\u59cb\u6570\u7ec4\u7684\u4e00\u4e2a\u526f\u672c\u3002\u5982\u679c\u5bf9\u65b0\u53d8\u91cf\u8fdb\u884c\u66f4\u6539\uff0c\u5219\u4e0d\u4f1a\u5f71\u54cd\u539f\u59cb\u6570\u7ec4\u3002 package main import \"fmt\" func main () { a := [ ... ] string { \"USA\" , \"China\" , \"India\" , \"Germany\" , \"France\" } b := a b [ 0 ] = \"Singapore\" fmt . Println ( \"a is \" , a ) fmt . Println ( \"b is \" , b ) } \u5728\u4e0a\u8ff0\u7a0b\u5e8f\u7684\u7b2c 7 \u884c\uff0c a \u7684\u526f\u672c\u88ab\u8d4b\u7ed9 b \u3002\u5728\u7b2c 8 \u884c\u4e2d\uff0c b \u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u6539\u4e3a Singapore \u3002\u8fd9\u4e0d\u4f1a\u5728\u539f\u59cb\u6570\u7ec4 a \u4e2d\u53cd\u6620\u51fa\u6765\u3002\u8be5\u7a0b\u5e8f\u5c06 \u8f93\u51fa a is [ USA China India Germany France ] b is [ Singapore China India Germany France ] \u51fd\u6570\u53c2\u6570\u4f20\u9012 \u00b6 \u540c\u6837\uff0c\u5f53\u6570\u7ec4\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u51fd\u6570\u65f6\uff0c\u5b83\u4eec\u662f\u6309\u503c\u4f20\u9012\uff0c\u800c\u539f\u59cb\u6570\u7ec4\u4fdd\u6301\u4e0d\u53d8\u3002 package main import \"fmt\" func main () { array := [ 3 ] int { 1 : 2 } modify ( array ) fmt . Println ( \"current list\" , array ) } func modify ( a [ 3 ] int ){ a [ 1 ] = 3 fmt . Println ( \"modify list\" , a ) } \u6267\u884c\u4e0a\u9762\u7a0b\u5e8f\u7ed3\u679c modify list [ 0 3 0 ] current list [ 0 2 0 ] \u4f20\u9012\u6570\u7ec4\u7684\u6307\u9488\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4fee\u6539\u6570\u7ec4\u503c\u7684 package main import \"fmt\" func main () { array := [ 3 ] int { 1 : 2 } modify ( & array ) fmt . Println ( \"current list\" , array ) } func modify ( a * [ 3 ] int ){ a [ 1 ] = 3 fmt . Println ( \"modify list\" , * a ) } \u957f\u5ea6 \u00b6 \u901a\u8fc7\u5c06\u6570\u7ec4\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9 len \u51fd\u6570\uff0c\u53ef\u4ee5\u5f97\u5230\u6570\u7ec4\u7684\u957f\u5ea6\u3002 package main import \"fmt\" func main () { a := [ ... ] float64 { 67.7 , 89.8 , 21 , 78 } fmt . Println ( \"length of a is\" , len ( a )) } \u4e0a\u9762\u7684\u7a0b\u5e8f\u8f93\u51fa\u4e3a length of a is 4 \u3002 \u8fed\u4ee3 \u00b6 for \u5faa\u73af\u53ef\u7528\u4e8e\u904d\u5386\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u3002 package main import \"fmt\" func main () { a := [ ... ] float64 { 67.7 , 89.8 , 21 , 78 } for i := 0 ; i < len ( a ); i ++ { // looping from 0 to the length of the array fmt . Printf ( \"%d th element of a is %.2f\\n\" , i , a [ i ]) } } \u4e0a\u9762\u7684\u7a0b\u5e8f\u4f7f\u7528 for \u5faa\u73af\u904d\u5386\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\uff0c\u4ece\u7d22\u5f15 0 \u5230 length of the array - 1 \u3002\u8fd9\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u540e\u6253\u5370\u51fa\uff0c 0 th element of a is 67.70 1 th element of a is 89.80 2 th element of a is 21.00 3 th element of a is 78.00 Go \u63d0\u4f9b\u4e86\u4e00\u79cd\u66f4\u597d\u3001\u66f4\u7b80\u6d01\u7684\u65b9\u6cd5\uff0c\u901a\u8fc7\u4f7f\u7528 for \u5faa\u73af\u7684 range \u65b9\u6cd5\u6765\u904d\u5386\u6570\u7ec4\u3002 range \u8fd4\u56de\u7d22\u5f15\u548c\u8be5\u7d22\u5f15\u5904\u7684\u503c\u3002\u8ba9\u6211\u4eec\u4f7f\u7528 range \u91cd\u5199\u4e0a\u9762\u7684\u4ee3\u7801\u3002\u6211\u4eec\u8fd8\u53ef\u4ee5\u83b7\u53d6\u6570\u7ec4\u4e2d\u6240\u6709\u5143\u7d20\u7684\u603b\u548c\u3002 package main import \"fmt\" func main () { a := [ ... ] float64 { 67.7 , 89.8 , 21 , 78 } sum := float64 ( 0 ) for i , v := range a { //range returns both the index and value fmt . Printf ( \"%d the element of a is %.2f\\n\" , i , v ) sum += v } fmt . Println ( \"\\nsum of all elements of a\" , sum ) } \u4e0a\u8ff0\u7a0b\u5e8f\u7684\u7b2c 8 \u884c for i, v := range a \u5229\u7528\u7684\u662f for \u5faa\u73af range \u65b9\u5f0f\u3002 \u5b83\u5c06\u8fd4\u56de\u7d22\u5f15\u548c\u8be5\u7d22\u5f15\u5904\u7684\u503c\u3002 \u6211\u4eec\u6253\u5370\u8fd9\u4e9b\u503c\uff0c\u5e76\u8ba1\u7b97\u6570\u7ec4 a \u4e2d\u6240\u6709\u5143\u7d20\u7684\u603b\u548c\u3002 \u7a0b\u5e8f\u7684 \u8f93\u51fa\u662f \uff0c 0 the element of a is 67.70 1 the element of a is 89.80 2 the element of a is 21.00 3 the element of a is 78.00 sum of all elements of a 256.5 \u5982\u679c\u4f60\u53ea\u9700\u8981\u503c\u5e76\u5e0c\u671b\u5ffd\u7565\u7d22\u5f15\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u7528 _ \u7a7a\u767d\u6807\u8bc6\u7b26\u66ff\u6362\u7d22\u5f15\u6765\u6267\u884c\u3002 for _ , v := range a { // ignores index } \u4e0a\u9762\u7684 for \u5faa\u73af\u5ffd\u7565\u7d22\u5f15\uff0c\u540c\u6837\u503c\u4e5f\u53ef\u4ee5\u88ab\u5ffd\u7565\u3002 \u591a\u7ef4\u6570\u7ec4 \u00b6 \u5230\u76ee\u524d\u4e3a\u6b62\u6211\u4eec\u521b\u5efa\u7684\u6570\u7ec4\u90fd\u662f\u4e00\u7ef4\u7684\uff0cGo \u8bed\u8a00\u53ef\u4ee5\u521b\u5efa\u591a\u7ef4\u6570\u7ec4\u3002 package main import ( \"fmt\" ) func printarray ( a [ 3 ][ 2 ] string ) { for _ , v1 := range a { for _ , v2 := range v1 { fmt . Printf ( \"%s \" , v2 ) } fmt . Printf ( \"\\n\" ) } } func main () { a := [ 3 ][ 2 ] string { { \"lion\" , \"tiger\" }, { \"cat\" , \"dog\" }, { \"pigeon\" , \"peacock\" }, // this comma is necessary. The compiler will complain if you omit this comma } printarray ( a ) var b [ 3 ][ 2 ] string b [ 0 ][ 0 ] = \"apple\" b [ 0 ][ 1 ] = \"samsung\" b [ 1 ][ 0 ] = \"microsoft\" b [ 1 ][ 1 ] = \"google\" b [ 2 ][ 0 ] = \"AT&T\" b [ 2 ][ 1 ] = \"T-Mobile\" fmt . Printf ( \"\\n\" ) printarray ( b ) } \u5728\u4e0a\u8ff0\u7a0b\u5e8f\u7684\u7b2c 17 \u884c\uff0c\u7528\u7b80\u7565\u8bed\u6cd5\u58f0\u660e\u4e00\u4e2a\u4e8c\u7ef4\u5b57\u7b26\u4e32\u6570\u7ec4 a \u300220 \u884c\u672b\u5c3e\u7684\u9017\u53f7\u662f\u5fc5\u9700\u7684\u3002\u8fd9\u662f\u56e0\u4e3a\u6839\u636e Go \u8bed\u8a00\u7684\u89c4\u5219\u81ea\u52a8\u63d2\u5165\u5206\u53f7\u3002 \u53e6\u5916\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4 b \u5728 23 \u884c\u58f0\u660e\uff0c\u5b57\u7b26\u4e32\u901a\u8fc7\u6bcf\u4e2a\u7d22\u5f15\u4e00\u4e2a\u4e00\u4e2a\u6dfb\u52a0\u3002\u8fd9\u662f\u53e6\u4e00\u79cd\u521d\u59cb\u5316\u4e8c\u7ef4\u6570\u7ec4\u7684\u65b9\u6cd5\u3002 \u7b2c 7 \u884c\u7684 printarray \u51fd\u6570\u4f7f\u7528\u4e24\u4e2a range \u5faa\u73af\u6765\u6253\u5370\u4e8c\u7ef4\u6570\u7ec4\u7684\u5185\u5bb9\u3002\u4e0a\u8ff0\u7a0b\u5e8f\u7684 \u8f93\u51fa\u662f lion tiger cat dog pigeon peacock apple samsung microsoft google AT & T T - Mobile \u8fd9\u5c31\u662f\u6570\u7ec4\uff0c\u5c3d\u7ba1\u6570\u7ec4\u770b\u4e0a\u53bb\u4f3c\u4e4e\u8db3\u591f\u7075\u6d3b\uff0c\u4f46\u662f\u5b83\u4eec\u5177\u6709\u56fa\u5b9a\u957f\u5ea6\u7684\u9650\u5236\uff0c\u4e0d\u53ef\u80fd\u589e\u52a0\u6570\u7ec4\u7684\u957f\u5ea6\u3002\u8fd9\u5c31\u8981\u7528\u5230 \u5207\u7247\u3002 \u603b\u7ed3 \u00b6 1.\u6570\u7ec4\u662f\u540c\u4e00\u7c7b\u578b\u5143\u7d20\u7684\u96c6\u5408\uff0c\u56e0\u6b64\u5b58\u50a8\u7684\u6570\u636e\u7c7b\u4f3c\u5fc5\u987b\u662f\u76f8\u540c\u7684 2.\u6570\u7ec4\u662f\u6709\u56fa\u5b9a\u957f\u5ea6\u7684\uff0c\u56e0\u6b64\u9700\u8981\u521d\u59cb\u5316\u6570\u7ec4\u65f6\u58f0\u660e\u957f\u5ea6\u3002 3.\u957f\u5ea6\u4e00\u6837\u4e14\u6bcf\u4e2a\u5143\u7d20\u7684\u7c7b\u578b\u548c\u503c\u4e5f\u4e00\u6837\u7684\u6570\u7ec4\uff0c\u624d\u80fd\u76f8\u7b49\u3002 4.\u6570\u7ec4\u5c5e\u4e8e\u503c\u7c7b\u578b\u7684\uff0c\u5373\u5c06\u4e00\u4e2a\u6570\u7ec4\u8d4b\u503c\u7ed9\u53e6\u5916\u4e00\u4e2a\u6570\u7ec4\u7684\u65f6\u5019\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u5c06\u6574\u4e2a\u6570\u7ec4\u62f7\u8d1d\u4e00\u4efd\u3002 Slice\u2014\u5207\u7247 \u00b6 Map\u2014\u5b57\u5178 \u00b6","title":"No4 \u57fa\u672c\u6570\u636e\u7ed3\u6784"},{"location":"goNotes/go-base/No4-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_1","text":"Note-Time: 2021\u5e7409\u670818\u65e501:57:14","title":"\u57fa\u672c\u6570\u636e\u7ed3\u6784"},{"location":"goNotes/go-base/No4-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#array","text":"","title":"Array\u2014\u6570\u7ec4"},{"location":"goNotes/go-base/No4-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_2","text":"\u6570\u7ec4\u662f\u4e00\u4e2a\u7531\u56fa\u5b9a\u957f\u5ea6\u7684\u5143\u7d20\u7c7b\u578b\u76f8\u540c\u7ec4\u6210\u7684\u6709\u5e8f\u96c6\u5408\uff0c\u4e00\u4e2a\u6570\u7ec4\u7531\u96f6\u6216\u8005\u591a\u4e2a\u5143\u7d20\u7ec4\u6210\u3002\u5176\u4e2dn\u662f\u6570\u7ec4\u957f\u5ea6\uff0c elementType\u662f\u6570\u7ec4\u5143\u7d20\u7c7b\u578b\u3002 [ n ] elmentType","title":"\u5b9a\u4e49"},{"location":"goNotes/go-base/No4-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_3","text":"\u6570\u7ec4\u7684\u58f0\u660e\u9700\u8981\u5b58\u50a8\u5143\u7d20\u7684\u957f\u5ea6\u503c\u548c\u5b58\u50a8\u6570\u636e\u7684\u7c7b\u578b\u3002\u5176\u8868\u793a\u5f62\u5f0f\u4e3a [n]T \u3002 n \u8868\u793a\u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u957f\u5ea6\u503c\uff0c T \u4ee3\u8868\u6bcf\u4e2a\u5143\u7d20\u7684\u7c7b\u578b\uff0c\u6570\u7ec4\u7684\u957f\u5ea6\u5728\u58f0\u660e\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u7ed9\u5b9a\uff0c\u800c\u6570\u7ec4\u4e00\u65e6\u58f0\u660e\uff0c\u5176\u957f\u5ea6\u548c\u7c7b\u578b\u90fd\u4e0d\u80fd\u6539\u53d8\u3002 var <\u6570\u7ec4\u540d\u79f0> [<\u6570\u7ec4\u957f\u5ea6>]<\u5143\u7d20\u7c7b\u578b> eg: package main import ( \"fmt\" ) func main () { var a [ 3 ] int //int array with length 3 fmt . Println ( a ) } var a[3]int \u58f0\u660e\u4e86\u4e00\u4e2a\u957f\u5ea6\u4e3a 3 \u7684\u6574\u578b\u6570\u7ec4\u3002\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20\u90fd\u88ab\u81ea\u52a8\u8d4b\u503c\u4e3a\u6570\u7ec4\u7c7b\u578b\u7684\u96f6\u503c\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c a \u662f\u4e00\u4e2a\u6574\u578b\u6570\u7ec4\uff0c\u56e0\u6b64 a \u7684\u6240\u6709\u5143\u7d20\u90fd\u88ab\u8d4b\u503c\u4e3a 0 \uff0c\u5373 int \u578b\u7684\u96f6\u503c\u3002\u8fd0\u884c\u4e0a\u8ff0\u7a0b\u5e8f\u5c06\u8f93\u51fa [0 0 0] \u3002","title":"\u9ed8\u8ba4\u5b9a\u4e49"},{"location":"goNotes/go-base/No4-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_4","text":"\u521d\u59cb\u5316\u5143\u7d20\u901a\u8fc7\u5927\u62ec\u53f7\u5305\u88f9\u8d77\u6765\u3002 var < \u6570\u7ec4\u540d\u79f0 > = [< \u6570\u7ec4\u957f\u5ea6 >]< \u5143\u7d20\u7c7b\u578b >{ \u5143\u7d201 , \u5143\u7d202 , ... } eg: package main import ( \"fmt\" ) func main () { a := [ 3 ] int { 1 , 2 , 5 } fmt . Println ( a ) } \u5728\u7b80\u7565\u58f0\u660e\u4e2d\uff0c\u4e0d\u9700\u8981\u5c06\u6570\u7ec4\u4e2d\u6240\u6709\u7684\u5143\u7d20\u8d4b\u503c\u3002 package main import ( \"fmt\" ) func main () { a := [ 3 ] int { 10 } fmt . Println ( a ) } \u5728\u4e0a\u8ff0\u7a0b\u5e8f\u4e2d\u7684\u7b2c 8 \u884c a := [3]int{10} \u58f0\u660e\u4e00\u4e2a\u957f\u5ea6\u4e3a 3 \u7684\u6570\u7ec4\uff0c\u4f46\u53ea\u63d0\u4f9b\u4e86\u4e00\u4e2a\u503c 10 \uff0c\u5269\u4e0b\u7684 2 \u4e2a\u5143\u7d20\u81ea\u52a8\u8d4b\u503c\u4e3a 0 \u3002\u8fd9\u4e2a\u7a0b\u5e8f\u5c06\u8f93\u51fa [10 0 0] \u3002","title":"\u6307\u5b9a\u5143\u7d20"},{"location":"goNotes/go-base/No4-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_5","text":"\u6570\u7ec4\u7684\u957f\u5ea6\u53ef\u4ee5\u4f7f\u7528\u7701\u7565\u53f7 ... \u4ee3\u66ff\uff0c\u8fd9\u4e2a\u5e76\u4e0d\u662f\u4ee3\u8868\u53ef\u4ee5\u7701\u7565\u6570\u7ec4\u957f\u5ea6\u7684\u58f0\u660e\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u8ba1\u7b97\u6570\u7ec4\u957f\u5ea6\uff0c\u5b83\u7684\u957f\u5ea6\u503c\u7b49\u4e8e\u5f53\u524d\u6570\u7ec4\u521d\u59cb\u5316\u5143\u7d20\u7684\u4e2a\u6570\u3002 package main import ( \"fmt\" ) func main () { a := [ ... ] int { 12 , 78 , 50 } // ... makes the compiler determine the length fmt . Println ( a ) }","title":"\u7701\u7565\u53f7"},{"location":"goNotes/go-base/No4-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_6","text":"[< \u6570\u7ec4\u957f\u5ea6 >]< \u5143\u7d20\u7c7b\u578b >{ \u7d22\u5f151 : \u5143\u7d201 , \u7d22\u5f152 : \u5143\u7d202 , \u2026 } const ( FIRST int = iota SECOND THIRD FOURTH ) func main () { arr := [ 4 ] string { FIRST : \"1\" , SECOND : \"2\" , THIRD : \"3\" , FOURTH : \"4\" } fmt . Println ( arr ) } //\u8f93\u51fa[1 2 3 4]","title":"\u7d22\u5f15\u5b9a\u4e49"},{"location":"goNotes/go-base/No4-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_7","text":"\u540c\u6837\u7c7b\u578b\u7684\u6570\u7ec4\u662f\u53ef\u4ee5\u76f8\u4e92\u8d4b\u503c\u7684\uff0c\u76f8\u540c\u7c7b\u578b\u7684\u6570\u7ec4\u5fc5\u987b\u662f\u957f\u5ea6\u4e00\u6837\uff0c\u5e76\u4e14\u6bcf\u4e2a\u5143\u7d20\u7684\u7c7b\u578b\u4e5f\u4e00\u6837\u7684\u6570\u7ec4\uff0c\u56e0\u6b64\u6570\u7ec4\u7684\u5927\u5c0f\u662f\u7c7b\u578b\u7684\u4e00\u90e8\u5206\u3002\u56e0\u6b64 [5]int \u548c [25]int \u662f\u4e0d\u540c\u7c7b\u578b\u3002 package main func main () { a := [ 3 ] int { 5 , 78 , 8 } var b [ 5 ] int b = a } \u7c7b\u578b [3]int \u7684\u53d8\u91cf\u8d4b\u7ed9\u7c7b\u578b\u4e3a [5]int \u7684\u53d8\u91cf\uff0c\u8fd9\u662f\u4e0d\u5141\u8bb8\u7684\uff0c\u56e0\u6b64\u7f16\u8bd1\u5668\u5c06\u629b\u51fa\u9519\u8bef main.go:6: cannot use a (type [3]int) as type [5]int in assignment\u3002","title":"\u6bd4\u8f83"},{"location":"goNotes/go-base/No4-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_8","text":"\u6ce8\u610fGo \u4e2d\u7684\u6570\u7ec4\u662f\u503c\u7c7b\u578b\u800c\u4e0d\u662f\u5f15\u7528\u7c7b\u578b\u3002","title":"\u503c\u7c7b\u578b"},{"location":"goNotes/go-base/No4-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_9","text":"\u5f53\u6570\u7ec4\u8d4b\u503c\u7ed9\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\u65f6\uff0c\u8be5\u53d8\u91cf\u4f1a\u5f97\u5230\u4e00\u4e2a\u539f\u59cb\u6570\u7ec4\u7684\u4e00\u4e2a\u526f\u672c\u3002\u5982\u679c\u5bf9\u65b0\u53d8\u91cf\u8fdb\u884c\u66f4\u6539\uff0c\u5219\u4e0d\u4f1a\u5f71\u54cd\u539f\u59cb\u6570\u7ec4\u3002 package main import \"fmt\" func main () { a := [ ... ] string { \"USA\" , \"China\" , \"India\" , \"Germany\" , \"France\" } b := a b [ 0 ] = \"Singapore\" fmt . Println ( \"a is \" , a ) fmt . Println ( \"b is \" , b ) } \u5728\u4e0a\u8ff0\u7a0b\u5e8f\u7684\u7b2c 7 \u884c\uff0c a \u7684\u526f\u672c\u88ab\u8d4b\u7ed9 b \u3002\u5728\u7b2c 8 \u884c\u4e2d\uff0c b \u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u6539\u4e3a Singapore \u3002\u8fd9\u4e0d\u4f1a\u5728\u539f\u59cb\u6570\u7ec4 a \u4e2d\u53cd\u6620\u51fa\u6765\u3002\u8be5\u7a0b\u5e8f\u5c06 \u8f93\u51fa a is [ USA China India Germany France ] b is [ Singapore China India Germany France ]","title":"\u6570\u7ec4\u8d4b\u503c"},{"location":"goNotes/go-base/No4-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_10","text":"\u540c\u6837\uff0c\u5f53\u6570\u7ec4\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u51fd\u6570\u65f6\uff0c\u5b83\u4eec\u662f\u6309\u503c\u4f20\u9012\uff0c\u800c\u539f\u59cb\u6570\u7ec4\u4fdd\u6301\u4e0d\u53d8\u3002 package main import \"fmt\" func main () { array := [ 3 ] int { 1 : 2 } modify ( array ) fmt . Println ( \"current list\" , array ) } func modify ( a [ 3 ] int ){ a [ 1 ] = 3 fmt . Println ( \"modify list\" , a ) } \u6267\u884c\u4e0a\u9762\u7a0b\u5e8f\u7ed3\u679c modify list [ 0 3 0 ] current list [ 0 2 0 ] \u4f20\u9012\u6570\u7ec4\u7684\u6307\u9488\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4fee\u6539\u6570\u7ec4\u503c\u7684 package main import \"fmt\" func main () { array := [ 3 ] int { 1 : 2 } modify ( & array ) fmt . Println ( \"current list\" , array ) } func modify ( a * [ 3 ] int ){ a [ 1 ] = 3 fmt . Println ( \"modify list\" , * a ) }","title":"\u51fd\u6570\u53c2\u6570\u4f20\u9012"},{"location":"goNotes/go-base/No4-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_11","text":"\u901a\u8fc7\u5c06\u6570\u7ec4\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9 len \u51fd\u6570\uff0c\u53ef\u4ee5\u5f97\u5230\u6570\u7ec4\u7684\u957f\u5ea6\u3002 package main import \"fmt\" func main () { a := [ ... ] float64 { 67.7 , 89.8 , 21 , 78 } fmt . Println ( \"length of a is\" , len ( a )) } \u4e0a\u9762\u7684\u7a0b\u5e8f\u8f93\u51fa\u4e3a length of a is 4 \u3002","title":"\u957f\u5ea6"},{"location":"goNotes/go-base/No4-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_12","text":"for \u5faa\u73af\u53ef\u7528\u4e8e\u904d\u5386\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u3002 package main import \"fmt\" func main () { a := [ ... ] float64 { 67.7 , 89.8 , 21 , 78 } for i := 0 ; i < len ( a ); i ++ { // looping from 0 to the length of the array fmt . Printf ( \"%d th element of a is %.2f\\n\" , i , a [ i ]) } } \u4e0a\u9762\u7684\u7a0b\u5e8f\u4f7f\u7528 for \u5faa\u73af\u904d\u5386\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\uff0c\u4ece\u7d22\u5f15 0 \u5230 length of the array - 1 \u3002\u8fd9\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u540e\u6253\u5370\u51fa\uff0c 0 th element of a is 67.70 1 th element of a is 89.80 2 th element of a is 21.00 3 th element of a is 78.00 Go \u63d0\u4f9b\u4e86\u4e00\u79cd\u66f4\u597d\u3001\u66f4\u7b80\u6d01\u7684\u65b9\u6cd5\uff0c\u901a\u8fc7\u4f7f\u7528 for \u5faa\u73af\u7684 range \u65b9\u6cd5\u6765\u904d\u5386\u6570\u7ec4\u3002 range \u8fd4\u56de\u7d22\u5f15\u548c\u8be5\u7d22\u5f15\u5904\u7684\u503c\u3002\u8ba9\u6211\u4eec\u4f7f\u7528 range \u91cd\u5199\u4e0a\u9762\u7684\u4ee3\u7801\u3002\u6211\u4eec\u8fd8\u53ef\u4ee5\u83b7\u53d6\u6570\u7ec4\u4e2d\u6240\u6709\u5143\u7d20\u7684\u603b\u548c\u3002 package main import \"fmt\" func main () { a := [ ... ] float64 { 67.7 , 89.8 , 21 , 78 } sum := float64 ( 0 ) for i , v := range a { //range returns both the index and value fmt . Printf ( \"%d the element of a is %.2f\\n\" , i , v ) sum += v } fmt . Println ( \"\\nsum of all elements of a\" , sum ) } \u4e0a\u8ff0\u7a0b\u5e8f\u7684\u7b2c 8 \u884c for i, v := range a \u5229\u7528\u7684\u662f for \u5faa\u73af range \u65b9\u5f0f\u3002 \u5b83\u5c06\u8fd4\u56de\u7d22\u5f15\u548c\u8be5\u7d22\u5f15\u5904\u7684\u503c\u3002 \u6211\u4eec\u6253\u5370\u8fd9\u4e9b\u503c\uff0c\u5e76\u8ba1\u7b97\u6570\u7ec4 a \u4e2d\u6240\u6709\u5143\u7d20\u7684\u603b\u548c\u3002 \u7a0b\u5e8f\u7684 \u8f93\u51fa\u662f \uff0c 0 the element of a is 67.70 1 the element of a is 89.80 2 the element of a is 21.00 3 the element of a is 78.00 sum of all elements of a 256.5 \u5982\u679c\u4f60\u53ea\u9700\u8981\u503c\u5e76\u5e0c\u671b\u5ffd\u7565\u7d22\u5f15\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u7528 _ \u7a7a\u767d\u6807\u8bc6\u7b26\u66ff\u6362\u7d22\u5f15\u6765\u6267\u884c\u3002 for _ , v := range a { // ignores index } \u4e0a\u9762\u7684 for \u5faa\u73af\u5ffd\u7565\u7d22\u5f15\uff0c\u540c\u6837\u503c\u4e5f\u53ef\u4ee5\u88ab\u5ffd\u7565\u3002","title":"\u8fed\u4ee3"},{"location":"goNotes/go-base/No4-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_13","text":"\u5230\u76ee\u524d\u4e3a\u6b62\u6211\u4eec\u521b\u5efa\u7684\u6570\u7ec4\u90fd\u662f\u4e00\u7ef4\u7684\uff0cGo \u8bed\u8a00\u53ef\u4ee5\u521b\u5efa\u591a\u7ef4\u6570\u7ec4\u3002 package main import ( \"fmt\" ) func printarray ( a [ 3 ][ 2 ] string ) { for _ , v1 := range a { for _ , v2 := range v1 { fmt . Printf ( \"%s \" , v2 ) } fmt . Printf ( \"\\n\" ) } } func main () { a := [ 3 ][ 2 ] string { { \"lion\" , \"tiger\" }, { \"cat\" , \"dog\" }, { \"pigeon\" , \"peacock\" }, // this comma is necessary. The compiler will complain if you omit this comma } printarray ( a ) var b [ 3 ][ 2 ] string b [ 0 ][ 0 ] = \"apple\" b [ 0 ][ 1 ] = \"samsung\" b [ 1 ][ 0 ] = \"microsoft\" b [ 1 ][ 1 ] = \"google\" b [ 2 ][ 0 ] = \"AT&T\" b [ 2 ][ 1 ] = \"T-Mobile\" fmt . Printf ( \"\\n\" ) printarray ( b ) } \u5728\u4e0a\u8ff0\u7a0b\u5e8f\u7684\u7b2c 17 \u884c\uff0c\u7528\u7b80\u7565\u8bed\u6cd5\u58f0\u660e\u4e00\u4e2a\u4e8c\u7ef4\u5b57\u7b26\u4e32\u6570\u7ec4 a \u300220 \u884c\u672b\u5c3e\u7684\u9017\u53f7\u662f\u5fc5\u9700\u7684\u3002\u8fd9\u662f\u56e0\u4e3a\u6839\u636e Go \u8bed\u8a00\u7684\u89c4\u5219\u81ea\u52a8\u63d2\u5165\u5206\u53f7\u3002 \u53e6\u5916\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4 b \u5728 23 \u884c\u58f0\u660e\uff0c\u5b57\u7b26\u4e32\u901a\u8fc7\u6bcf\u4e2a\u7d22\u5f15\u4e00\u4e2a\u4e00\u4e2a\u6dfb\u52a0\u3002\u8fd9\u662f\u53e6\u4e00\u79cd\u521d\u59cb\u5316\u4e8c\u7ef4\u6570\u7ec4\u7684\u65b9\u6cd5\u3002 \u7b2c 7 \u884c\u7684 printarray \u51fd\u6570\u4f7f\u7528\u4e24\u4e2a range \u5faa\u73af\u6765\u6253\u5370\u4e8c\u7ef4\u6570\u7ec4\u7684\u5185\u5bb9\u3002\u4e0a\u8ff0\u7a0b\u5e8f\u7684 \u8f93\u51fa\u662f lion tiger cat dog pigeon peacock apple samsung microsoft google AT & T T - Mobile \u8fd9\u5c31\u662f\u6570\u7ec4\uff0c\u5c3d\u7ba1\u6570\u7ec4\u770b\u4e0a\u53bb\u4f3c\u4e4e\u8db3\u591f\u7075\u6d3b\uff0c\u4f46\u662f\u5b83\u4eec\u5177\u6709\u56fa\u5b9a\u957f\u5ea6\u7684\u9650\u5236\uff0c\u4e0d\u53ef\u80fd\u589e\u52a0\u6570\u7ec4\u7684\u957f\u5ea6\u3002\u8fd9\u5c31\u8981\u7528\u5230 \u5207\u7247\u3002","title":"\u591a\u7ef4\u6570\u7ec4"},{"location":"goNotes/go-base/No4-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_14","text":"1.\u6570\u7ec4\u662f\u540c\u4e00\u7c7b\u578b\u5143\u7d20\u7684\u96c6\u5408\uff0c\u56e0\u6b64\u5b58\u50a8\u7684\u6570\u636e\u7c7b\u4f3c\u5fc5\u987b\u662f\u76f8\u540c\u7684 2.\u6570\u7ec4\u662f\u6709\u56fa\u5b9a\u957f\u5ea6\u7684\uff0c\u56e0\u6b64\u9700\u8981\u521d\u59cb\u5316\u6570\u7ec4\u65f6\u58f0\u660e\u957f\u5ea6\u3002 3.\u957f\u5ea6\u4e00\u6837\u4e14\u6bcf\u4e2a\u5143\u7d20\u7684\u7c7b\u578b\u548c\u503c\u4e5f\u4e00\u6837\u7684\u6570\u7ec4\uff0c\u624d\u80fd\u76f8\u7b49\u3002 4.\u6570\u7ec4\u5c5e\u4e8e\u503c\u7c7b\u578b\u7684\uff0c\u5373\u5c06\u4e00\u4e2a\u6570\u7ec4\u8d4b\u503c\u7ed9\u53e6\u5916\u4e00\u4e2a\u6570\u7ec4\u7684\u65f6\u5019\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u5c06\u6574\u4e2a\u6570\u7ec4\u62f7\u8d1d\u4e00\u4efd\u3002","title":"\u603b\u7ed3"},{"location":"goNotes/go-base/No4-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#slice","text":"","title":"Slice\u2014\u5207\u7247"},{"location":"goNotes/go-base/No4-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#map","text":"","title":"Map\u2014\u5b57\u5178"},{"location":"pyNotes/Py%E5%B7%A5%E5%85%B7%E9%9B%86/python%E6%93%8D%E4%BD%9Cexcel%E6%96%87%E4%BB%B6/","text":"\u8bfb\u53d6excel\u6587\u4ef6 \u00b6 # _*_ coding:utg-8 _*_ import os import sys import xlrd def read_excel (): workbook = xlrd . open_workbook ( r 'F:\\demo.xlsx' ) # \u83b7\u53d6\u6240\u6709sheet print ( workbook . sheet_names ()) # [u'sheet1', u'sheet2'] sheet2_name = workbook . sheet_names ()[ 1 ] # \u6839\u636esheet\u7d22\u5f15\u6216\u8005\u540d\u79f0\u83b7\u53d6sheet\u5185\u5bb9 sheet2 = workbook . sheet_by_index ( 1 ) # sheet\u7d22\u5f15\u4ece0\u5f00\u59cb sheet2 = workbook . sheet_by_name ( 'sheet2' ) # sheet\u7684\u540d\u79f0\uff0c\u884c\u6570\uff0c\u5217\u6570 print ( sheet2 . name , sheet2 . nrows , sheet2 . ncols ) # \u83b7\u53d6\u6574\u884c\u548c\u6574\u5217\u7684\u503c\uff08\u6570\u7ec4\uff09 rows = sheet2 . row_values ( 3 ) # \u83b7\u53d6\u7b2c\u56db\u884c\u5185\u5bb9 cols = sheet2 . col_values ( 2 ) # \u83b7\u53d6\u7b2c\u4e09\u5217\u5185\u5bb9 print ( rows , cols ) # \u83b7\u53d6\u5355\u5143\u683c\u5185\u5bb9 print ( sheet2 . cell ( 1 , 0 ) . value . encode ( 'utf-8' )) print ( sheet2 . cell_value ( 1 , 0 ) . encode ( 'utf-8' )) print ( sheet2 . row ( 1 )[ 0 ] . value . encode ( 'utf-8' )) # \u83b7\u53d6\u5355\u5143\u683c\u5185\u5bb9\u7684\u6570\u636e\u7c7b\u578b print ( sheet2 . cell ( 1 , 0 ) . ctype ) \u5bfc\u51fa\u4e3axlsx\u6587\u4ef6 \u00b6 import xlwt from io import BytesIO import os from datetime import datetime from django.http import HttpResponse import xlsxwriter class ExportXlsx ( object ): \"\"\"\u5bfc\u51faxlsx\u6587\u4ef6\"\"\" def __init__ ( self ): self . output = BytesIO () self . workbook = xlsxwriter . Workbook ( self . output ) self . worksheet = self . workbook . add_worksheet () self . bold = self . workbook . add_format ({ 'bold' : 1 }) def set_column_width ( self , column_width_dict ): \"\"\"\u8bbe\u7f6e\u5217\u5bbd\"\"\" for key , value in column_width_dict . items (): self . worksheet . set_column ( key , key , value ) def set_header ( self , header_list ): col = 0 for i in header_list : self . worksheet . write ( 0 , col , i , self . bold ) col += 1 def write_data ( self , instance_list , keys , foreign_keys ): row = 1 print ( len ( instance_list ), instance_list ) for instance in instance_list : foreign_key_index = 0 for index , i in enumerate ( keys ): value = getattr ( instance , i ) if isinstance ( value , int ): self . worksheet . write_number ( row , index , value ) elif isinstance ( value , datetime ): value = value . strftime ( \"%Y-%m- %d %H:%M:%S\" ) self . worksheet . write_string ( row , index , value ) elif isinstance ( value , str ): self . worksheet . write_string ( row , index , value ) else : if value : foreign_key = getattr ( value , foreign_keys [ foreign_key_index ]) if foreign_keys else value . id self . worksheet . write_string ( row , index , str ( foreign_key )) foreign_key_index += 1 row += 1 self . workbook . close () def export ( self , header_list , instance_list , keys , file_name , foreign_keys = None ): self . set_header ( header_list ) self . write_data ( instance_list , keys , foreign_keys ) self . output . seek ( 0 ) response = HttpResponse ( self . output . read (), content_type = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" ) response [ 'Content-Disposition' ] = \"attachment; filename= {} .xlsx\" . format ( file_name ) return response \u5bfc\u51fa\u4e3aexcel\u6587\u4ef6 \u00b6 class ExportExcel ( object ): \"\"\"\u5bfc\u51faexcel\u6587\u4ef6\"\"\" def __init__ ( self , excel_name , sheet_name = \"sheet1\" , initial_row = 0 ): # \u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5bf9\u8c61 self . wb = xlwt . Workbook ( encoding = 'utf8' ) # \u521b\u5efa\u4e00\u4e2asheet\u5bf9\u8c61 self . sheet = self . wb . add_sheet ( ' {} ' . format ( sheet_name )) self . style_heading = xlwt . easyxf () self . initial_row = initial_row self . excel_name = excel_name def set_style_heading ( self , strg_to_parse ): self . style_heading = xlwt . easyxf ( strg_to_parse ) def write_heading ( self , items ): for index , i in enumerate ( items ): self . sheet . write ( self . initial_row , index , i , self . style_heading ) def write_data ( self , items , keys , data_row = None ): data_row = self . initial_row + 1 if not data_row else data_row for i_dict in items : for index , i in enumerate ( keys ): self . sheet . write ( data_row , index , i_dict [ i ]) data_row += 1 def save_excel ( self , path = \"static/excel/\" ): exist_file = os . path . exists ( ' {path}{excel_name} .xls' . format ( excel_name = self . excel_name , path = path )) if exist_file : os . remove ( r ' {path}{excel_name} .xls' . format ( excel_name = self . excel_name , path = path )) self . wb . save ( ' {path}{excel_name} .xls' . format ( excel_name = self . excel_name , path = path )) def export ( self ): output = BytesIO () self . wb . save ( output ) # \u91cd\u65b0\u5b9a\u4f4d\u5230\u5f00\u59cb output . seek ( 0 ) response = HttpResponse ( output . getvalue (), content_type = 'application/vnd.ms-excel' ) response [ 'Content-Disposition' ] = 'attachment; filename= {} .xls' . format ( self . excel_name ) response . write ( output . getvalue ()) return response if __name__ == \"__main__\" : read_excel ()","title":"python\u64cd\u4f5cExcel"},{"location":"pyNotes/Py%E5%B7%A5%E5%85%B7%E9%9B%86/python%E6%93%8D%E4%BD%9Cexcel%E6%96%87%E4%BB%B6/#excel","text":"# _*_ coding:utg-8 _*_ import os import sys import xlrd def read_excel (): workbook = xlrd . open_workbook ( r 'F:\\demo.xlsx' ) # \u83b7\u53d6\u6240\u6709sheet print ( workbook . sheet_names ()) # [u'sheet1', u'sheet2'] sheet2_name = workbook . sheet_names ()[ 1 ] # \u6839\u636esheet\u7d22\u5f15\u6216\u8005\u540d\u79f0\u83b7\u53d6sheet\u5185\u5bb9 sheet2 = workbook . sheet_by_index ( 1 ) # sheet\u7d22\u5f15\u4ece0\u5f00\u59cb sheet2 = workbook . sheet_by_name ( 'sheet2' ) # sheet\u7684\u540d\u79f0\uff0c\u884c\u6570\uff0c\u5217\u6570 print ( sheet2 . name , sheet2 . nrows , sheet2 . ncols ) # \u83b7\u53d6\u6574\u884c\u548c\u6574\u5217\u7684\u503c\uff08\u6570\u7ec4\uff09 rows = sheet2 . row_values ( 3 ) # \u83b7\u53d6\u7b2c\u56db\u884c\u5185\u5bb9 cols = sheet2 . col_values ( 2 ) # \u83b7\u53d6\u7b2c\u4e09\u5217\u5185\u5bb9 print ( rows , cols ) # \u83b7\u53d6\u5355\u5143\u683c\u5185\u5bb9 print ( sheet2 . cell ( 1 , 0 ) . value . encode ( 'utf-8' )) print ( sheet2 . cell_value ( 1 , 0 ) . encode ( 'utf-8' )) print ( sheet2 . row ( 1 )[ 0 ] . value . encode ( 'utf-8' )) # \u83b7\u53d6\u5355\u5143\u683c\u5185\u5bb9\u7684\u6570\u636e\u7c7b\u578b print ( sheet2 . cell ( 1 , 0 ) . ctype )","title":"\u8bfb\u53d6excel\u6587\u4ef6"},{"location":"pyNotes/Py%E5%B7%A5%E5%85%B7%E9%9B%86/python%E6%93%8D%E4%BD%9Cexcel%E6%96%87%E4%BB%B6/#xlsx","text":"import xlwt from io import BytesIO import os from datetime import datetime from django.http import HttpResponse import xlsxwriter class ExportXlsx ( object ): \"\"\"\u5bfc\u51faxlsx\u6587\u4ef6\"\"\" def __init__ ( self ): self . output = BytesIO () self . workbook = xlsxwriter . Workbook ( self . output ) self . worksheet = self . workbook . add_worksheet () self . bold = self . workbook . add_format ({ 'bold' : 1 }) def set_column_width ( self , column_width_dict ): \"\"\"\u8bbe\u7f6e\u5217\u5bbd\"\"\" for key , value in column_width_dict . items (): self . worksheet . set_column ( key , key , value ) def set_header ( self , header_list ): col = 0 for i in header_list : self . worksheet . write ( 0 , col , i , self . bold ) col += 1 def write_data ( self , instance_list , keys , foreign_keys ): row = 1 print ( len ( instance_list ), instance_list ) for instance in instance_list : foreign_key_index = 0 for index , i in enumerate ( keys ): value = getattr ( instance , i ) if isinstance ( value , int ): self . worksheet . write_number ( row , index , value ) elif isinstance ( value , datetime ): value = value . strftime ( \"%Y-%m- %d %H:%M:%S\" ) self . worksheet . write_string ( row , index , value ) elif isinstance ( value , str ): self . worksheet . write_string ( row , index , value ) else : if value : foreign_key = getattr ( value , foreign_keys [ foreign_key_index ]) if foreign_keys else value . id self . worksheet . write_string ( row , index , str ( foreign_key )) foreign_key_index += 1 row += 1 self . workbook . close () def export ( self , header_list , instance_list , keys , file_name , foreign_keys = None ): self . set_header ( header_list ) self . write_data ( instance_list , keys , foreign_keys ) self . output . seek ( 0 ) response = HttpResponse ( self . output . read (), content_type = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" ) response [ 'Content-Disposition' ] = \"attachment; filename= {} .xlsx\" . format ( file_name ) return response","title":"\u5bfc\u51fa\u4e3axlsx\u6587\u4ef6"},{"location":"pyNotes/Py%E5%B7%A5%E5%85%B7%E9%9B%86/python%E6%93%8D%E4%BD%9Cexcel%E6%96%87%E4%BB%B6/#excel_1","text":"class ExportExcel ( object ): \"\"\"\u5bfc\u51faexcel\u6587\u4ef6\"\"\" def __init__ ( self , excel_name , sheet_name = \"sheet1\" , initial_row = 0 ): # \u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5bf9\u8c61 self . wb = xlwt . Workbook ( encoding = 'utf8' ) # \u521b\u5efa\u4e00\u4e2asheet\u5bf9\u8c61 self . sheet = self . wb . add_sheet ( ' {} ' . format ( sheet_name )) self . style_heading = xlwt . easyxf () self . initial_row = initial_row self . excel_name = excel_name def set_style_heading ( self , strg_to_parse ): self . style_heading = xlwt . easyxf ( strg_to_parse ) def write_heading ( self , items ): for index , i in enumerate ( items ): self . sheet . write ( self . initial_row , index , i , self . style_heading ) def write_data ( self , items , keys , data_row = None ): data_row = self . initial_row + 1 if not data_row else data_row for i_dict in items : for index , i in enumerate ( keys ): self . sheet . write ( data_row , index , i_dict [ i ]) data_row += 1 def save_excel ( self , path = \"static/excel/\" ): exist_file = os . path . exists ( ' {path}{excel_name} .xls' . format ( excel_name = self . excel_name , path = path )) if exist_file : os . remove ( r ' {path}{excel_name} .xls' . format ( excel_name = self . excel_name , path = path )) self . wb . save ( ' {path}{excel_name} .xls' . format ( excel_name = self . excel_name , path = path )) def export ( self ): output = BytesIO () self . wb . save ( output ) # \u91cd\u65b0\u5b9a\u4f4d\u5230\u5f00\u59cb output . seek ( 0 ) response = HttpResponse ( output . getvalue (), content_type = 'application/vnd.ms-excel' ) response [ 'Content-Disposition' ] = 'attachment; filename= {} .xls' . format ( self . excel_name ) response . write ( output . getvalue ()) return response if __name__ == \"__main__\" : read_excel ()","title":"\u5bfc\u51fa\u4e3aexcel\u6587\u4ef6"},{"location":"pyNotes/python%E5%9F%BA%E7%A1%80/decator/","text":"\u88c5\u9970\u5668 \u00b6 \u88c5\u9970\u5668(decorator)\u529f\u80fd \u00b6 \u5f15\u5165\u65e5\u5fd7 \u51fd\u6570\u6267\u884c\u65f6\u95f4\u7edf\u8ba1 \u6267\u884c\u51fd\u6570\u524d\u9884\u5907\u5904\u7406 \u6267\u884c\u51fd\u6570\u540e\u6e05\u7406\u529f\u80fd \u6743\u9650\u6821\u9a8c\u7b49\u573a\u666f \u7f13\u5b58 # \u5b9a\u4e49\u51fd\u6570\uff1a\u5b8c\u6210\u5305\u88f9\u6570\u636e def makeBold ( fn ): def wrapped (): return \"<b>\" + fn () + \"</b>\" return wrapped # \u5b9a\u4e49\u51fd\u6570\uff1a\u5b8c\u6210\u5305\u88f9\u6570\u636e def makeItalic ( fn ): def wrapped (): return \"<i>\" + fn () + \"</i>\" return wrapped @makeBold def test1 (): return \"hello world-1\" @makeItalic def test2 (): return \"hello world-2\" @makeBold @makeItalic def test3 (): return \"hello world-3\" print ( test1 ()) print ( test2 ()) print ( test3 ()) \u8fd0\u884c\u7ed3\u679c <b>hello world-1</b> <i>hello world-2</i> <b><i>hello world-3</i></b> 1.\u65e0\u53c2\u6570\u7684\u51fd\u6570 \u00b6 rom time import ctime , sleep def timefun ( func ): def wrapped_func (): print ( \" %s called at %s \" % ( func . __name__ , ctime ())) func () return wrapped_func @timefun def foo (): print ( \"I am foo\" ) foo () sleep ( 2 ) foo () \u4e0a\u9762\u4ee3\u7801\u7406\u89e3\u88c5\u9970\u5668\u6267\u884c\u884c\u4e3a\u53ef\u7406\u89e3\u6210 foo = timefun(foo) # foo\u5148\u4f5c\u4e3a\u53c2\u6570\u8d4b\u503c\u7ed9func\u540e,foo\u63a5\u6536\u6307\u5411timefun\u8fd4\u56de\u7684wrapped_func foo() # \u8c03\u7528foo(),\u5373\u7b49\u4ef7\u8c03\u7528wrapped_func() # \u5185\u90e8\u51fd\u6570wrapped_func\u88ab\u5f15\u7528\uff0c\u6240\u4ee5\u5916\u90e8\u51fd\u6570\u7684func\u53d8\u91cf(\u81ea\u7531\u53d8\u91cf)\u5e76\u6ca1\u6709\u91ca\u653e # func\u91cc\u4fdd\u5b58\u7684\u662f\u539ffoo\u51fd\u6570\u5bf9\u8c61 2.\u88ab\u88c5\u9970\u7684\u51fd\u6570\u6709\u53c2\u6570 \u00b6 from time import ctime , sleep def timefun ( func ): def wrapped_func ( a , b ): print ( \" %s called at %s \" % ( func . __name__ , ctime ())) print ( a , b ) func ( a , b ) return wrapped_func @timefun def foo ( a , b ): print ( a + b ) foo ( 3 , 5 ) sleep ( 2 ) foo ( 2 , 4 ) 3.\u88ab\u88c5\u9970\u7684\u51fd\u6570\u6709\u4e0d\u5b9a\u957f\u53c2\u6570 \u00b6 from time import ctime, sleep def timefun(func): def wrapped_func(*args, **kwargs): print(\"%s called at %s\"%(func.__name__, ctime())) func(*args, **kwargs) return wrapped_func @timefun def foo(a, b, c): print(a+b+c) foo(3,5,7) sleep(2) foo(2,4,9) 4.\u88c5\u9970\u5668\u4e2d\u7684return \u00b6 from time import ctime, sleep def timefun(func): def wrapped_func(): print(\"%s called at %s\" % (func.__name__, ctime())) func() return wrapped_func @timefun def foo(): print(\"I am foo\") @timefun def getInfo(): return '----hahah---' foo() sleep(2) foo() print(getInfo()) \u6267\u884c\u7ed3\u679c foo called at Fri Nov 4 21:55:35 2016 I am foo foo called at Fri Nov 4 21:55:37 2016 I am foo getInfo called at Fri Nov 4 21:55:37 2016 None \u5982\u679c\u4fee\u6539\u88c5\u9970\u5668\u4e3areturn func()\uff0c\u5219\u8fd0\u884c\u7ed3\u679c\uff1a foo called at Fri Nov 4 21:55:57 2016 I am foo foo called at Fri Nov 4 21:55:59 2016 I am foo getInfo called at Fri Nov 4 21:55:59 2016 ----hahah--- \u603b\u7ed3\uff1a \u4e00\u822c\u60c5\u51b5\u4e0b\u4e3a\u4e86\u8ba9\u88c5\u9970\u5668\u66f4\u901a\u7528\uff0c\u53ef\u4ee5\u6709return 5.\u88c5\u9970\u5668\u5e26\u53c2\u6570,\u5728\u539f\u6709\u88c5\u9970\u5668\u7684\u57fa\u7840\u4e0a\uff0c\u8bbe\u7f6e\u5916\u90e8\u53d8\u91cf \u00b6 #decorator2.py from time import ctime, sleep def timefun_arg(pre=\"hello\"): def timefun(func): def wrapped_func(): print(\"%s called at %s %s\" % (func.__name__, ctime(), pre)) return func() return wrapped_func return timefun # \u4e0b\u9762\u7684\u88c5\u9970\u8fc7\u7a0b # 1. \u8c03\u7528timefun_arg(\"itcast\") # 2. \u5c06\u6b65\u9aa41\u5f97\u5230\u7684\u8fd4\u56de\u503c\uff0c\u5373time_fun\u8fd4\u56de\uff0c \u7136\u540etime_fun(foo) # 3. \u5c06time_fun(foo)\u7684\u7ed3\u679c\u8fd4\u56de\uff0c\u5373wrapped_func # 4. \u8ba9foo = wrapped_fun\uff0c\u5373foo\u73b0\u5728\u6307\u5411wrapped_func @timefun_arg(\"itcast\") def foo(): print(\"I am foo\") @timefun_arg(\"python\") def too(): print(\"I am too\") foo() sleep(2) foo() too() sleep(2) too() \u53ef\u4ee5\u7406\u89e3\u4e3a\uff1a foo()==timefun_arg(\"itcast\")(foo)() 6.\u7c7b\u88c5\u9970\u5668 \u00b6 \u88c5\u9970\u5668\u51fd\u6570\u5176\u5b9e\u662f\u8fd9\u6837\u4e00\u4e2a\u63a5\u53e3\u7ea6\u675f\uff0c\u5b83\u5fc5\u987b\u63a5\u53d7\u4e00\u4e2acallable\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\uff0c\u7136\u540e\u8fd4\u56de\u4e00\u4e2acallable\u5bf9\u8c61\u3002\u5728Python\u4e2d\u4e00\u822ccallable\u5bf9\u8c61\u90fd\u662f\u51fd\u6570\uff0c\u4f46\u4e5f\u6709\u4f8b\u5916\u3002\u53ea\u8981\u67d0\u4e2a\u5bf9\u8c61\u91cd\u5199\u4e86 call () \u65b9\u6cd5\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5bf9\u8c61\u5c31\u662fcallable\u7684\u3002 class Test(): def __call__(self): print('call me!') t = Test() t() # call me","title":"\u88c5\u9970\u5668\u7684\u4f7f\u7528"},{"location":"pyNotes/python%E5%9F%BA%E7%A1%80/decator/#_1","text":"","title":"\u88c5\u9970\u5668"},{"location":"pyNotes/python%E5%9F%BA%E7%A1%80/decator/#decorator","text":"\u5f15\u5165\u65e5\u5fd7 \u51fd\u6570\u6267\u884c\u65f6\u95f4\u7edf\u8ba1 \u6267\u884c\u51fd\u6570\u524d\u9884\u5907\u5904\u7406 \u6267\u884c\u51fd\u6570\u540e\u6e05\u7406\u529f\u80fd \u6743\u9650\u6821\u9a8c\u7b49\u573a\u666f \u7f13\u5b58 # \u5b9a\u4e49\u51fd\u6570\uff1a\u5b8c\u6210\u5305\u88f9\u6570\u636e def makeBold ( fn ): def wrapped (): return \"<b>\" + fn () + \"</b>\" return wrapped # \u5b9a\u4e49\u51fd\u6570\uff1a\u5b8c\u6210\u5305\u88f9\u6570\u636e def makeItalic ( fn ): def wrapped (): return \"<i>\" + fn () + \"</i>\" return wrapped @makeBold def test1 (): return \"hello world-1\" @makeItalic def test2 (): return \"hello world-2\" @makeBold @makeItalic def test3 (): return \"hello world-3\" print ( test1 ()) print ( test2 ()) print ( test3 ()) \u8fd0\u884c\u7ed3\u679c <b>hello world-1</b> <i>hello world-2</i> <b><i>hello world-3</i></b>","title":"\u88c5\u9970\u5668(decorator)\u529f\u80fd"},{"location":"pyNotes/python%E5%9F%BA%E7%A1%80/decator/#1","text":"rom time import ctime , sleep def timefun ( func ): def wrapped_func (): print ( \" %s called at %s \" % ( func . __name__ , ctime ())) func () return wrapped_func @timefun def foo (): print ( \"I am foo\" ) foo () sleep ( 2 ) foo () \u4e0a\u9762\u4ee3\u7801\u7406\u89e3\u88c5\u9970\u5668\u6267\u884c\u884c\u4e3a\u53ef\u7406\u89e3\u6210 foo = timefun(foo) # foo\u5148\u4f5c\u4e3a\u53c2\u6570\u8d4b\u503c\u7ed9func\u540e,foo\u63a5\u6536\u6307\u5411timefun\u8fd4\u56de\u7684wrapped_func foo() # \u8c03\u7528foo(),\u5373\u7b49\u4ef7\u8c03\u7528wrapped_func() # \u5185\u90e8\u51fd\u6570wrapped_func\u88ab\u5f15\u7528\uff0c\u6240\u4ee5\u5916\u90e8\u51fd\u6570\u7684func\u53d8\u91cf(\u81ea\u7531\u53d8\u91cf)\u5e76\u6ca1\u6709\u91ca\u653e # func\u91cc\u4fdd\u5b58\u7684\u662f\u539ffoo\u51fd\u6570\u5bf9\u8c61","title":"1.\u65e0\u53c2\u6570\u7684\u51fd\u6570"},{"location":"pyNotes/python%E5%9F%BA%E7%A1%80/decator/#2","text":"from time import ctime , sleep def timefun ( func ): def wrapped_func ( a , b ): print ( \" %s called at %s \" % ( func . __name__ , ctime ())) print ( a , b ) func ( a , b ) return wrapped_func @timefun def foo ( a , b ): print ( a + b ) foo ( 3 , 5 ) sleep ( 2 ) foo ( 2 , 4 )","title":"2.\u88ab\u88c5\u9970\u7684\u51fd\u6570\u6709\u53c2\u6570"},{"location":"pyNotes/python%E5%9F%BA%E7%A1%80/decator/#3","text":"from time import ctime, sleep def timefun(func): def wrapped_func(*args, **kwargs): print(\"%s called at %s\"%(func.__name__, ctime())) func(*args, **kwargs) return wrapped_func @timefun def foo(a, b, c): print(a+b+c) foo(3,5,7) sleep(2) foo(2,4,9)","title":"3.\u88ab\u88c5\u9970\u7684\u51fd\u6570\u6709\u4e0d\u5b9a\u957f\u53c2\u6570"},{"location":"pyNotes/python%E5%9F%BA%E7%A1%80/decator/#4return","text":"from time import ctime, sleep def timefun(func): def wrapped_func(): print(\"%s called at %s\" % (func.__name__, ctime())) func() return wrapped_func @timefun def foo(): print(\"I am foo\") @timefun def getInfo(): return '----hahah---' foo() sleep(2) foo() print(getInfo()) \u6267\u884c\u7ed3\u679c foo called at Fri Nov 4 21:55:35 2016 I am foo foo called at Fri Nov 4 21:55:37 2016 I am foo getInfo called at Fri Nov 4 21:55:37 2016 None \u5982\u679c\u4fee\u6539\u88c5\u9970\u5668\u4e3areturn func()\uff0c\u5219\u8fd0\u884c\u7ed3\u679c\uff1a foo called at Fri Nov 4 21:55:57 2016 I am foo foo called at Fri Nov 4 21:55:59 2016 I am foo getInfo called at Fri Nov 4 21:55:59 2016 ----hahah--- \u603b\u7ed3\uff1a \u4e00\u822c\u60c5\u51b5\u4e0b\u4e3a\u4e86\u8ba9\u88c5\u9970\u5668\u66f4\u901a\u7528\uff0c\u53ef\u4ee5\u6709return","title":"4.\u88c5\u9970\u5668\u4e2d\u7684return"},{"location":"pyNotes/python%E5%9F%BA%E7%A1%80/decator/#5","text":"#decorator2.py from time import ctime, sleep def timefun_arg(pre=\"hello\"): def timefun(func): def wrapped_func(): print(\"%s called at %s %s\" % (func.__name__, ctime(), pre)) return func() return wrapped_func return timefun # \u4e0b\u9762\u7684\u88c5\u9970\u8fc7\u7a0b # 1. \u8c03\u7528timefun_arg(\"itcast\") # 2. \u5c06\u6b65\u9aa41\u5f97\u5230\u7684\u8fd4\u56de\u503c\uff0c\u5373time_fun\u8fd4\u56de\uff0c \u7136\u540etime_fun(foo) # 3. \u5c06time_fun(foo)\u7684\u7ed3\u679c\u8fd4\u56de\uff0c\u5373wrapped_func # 4. \u8ba9foo = wrapped_fun\uff0c\u5373foo\u73b0\u5728\u6307\u5411wrapped_func @timefun_arg(\"itcast\") def foo(): print(\"I am foo\") @timefun_arg(\"python\") def too(): print(\"I am too\") foo() sleep(2) foo() too() sleep(2) too() \u53ef\u4ee5\u7406\u89e3\u4e3a\uff1a foo()==timefun_arg(\"itcast\")(foo)()","title":"5.\u88c5\u9970\u5668\u5e26\u53c2\u6570,\u5728\u539f\u6709\u88c5\u9970\u5668\u7684\u57fa\u7840\u4e0a\uff0c\u8bbe\u7f6e\u5916\u90e8\u53d8\u91cf"},{"location":"pyNotes/python%E5%9F%BA%E7%A1%80/decator/#6","text":"\u88c5\u9970\u5668\u51fd\u6570\u5176\u5b9e\u662f\u8fd9\u6837\u4e00\u4e2a\u63a5\u53e3\u7ea6\u675f\uff0c\u5b83\u5fc5\u987b\u63a5\u53d7\u4e00\u4e2acallable\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\uff0c\u7136\u540e\u8fd4\u56de\u4e00\u4e2acallable\u5bf9\u8c61\u3002\u5728Python\u4e2d\u4e00\u822ccallable\u5bf9\u8c61\u90fd\u662f\u51fd\u6570\uff0c\u4f46\u4e5f\u6709\u4f8b\u5916\u3002\u53ea\u8981\u67d0\u4e2a\u5bf9\u8c61\u91cd\u5199\u4e86 call () \u65b9\u6cd5\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5bf9\u8c61\u5c31\u662fcallable\u7684\u3002 class Test(): def __call__(self): print('call me!') t = Test() t() # call me","title":"6.\u7c7b\u88c5\u9970\u5668"},{"location":"pyNotes/%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/Pickle%E7%9A%84%E4%BD%BF%E7%94%A8/","text":"pickle\u6a21\u5757 \u00b6 pickle\u7b80\u4ecb\uff1a \u00b6 pickle\u662fpython\u8bed\u8a00\u7684\u4e00\u4e2a\u6807\u51c6\u6a21\u5757\uff0c\u5b89\u88c5python\u540e\u5df2\u5305\u542bpickle\u5e93\uff0c\u4e0d\u9700\u8981\u5355\u72ec\u518d\u5b89\u88c5\u3002 pickle\u6a21\u5757\u5b9e\u73b0\u4e86\u57fa\u672c\u7684\u6570\u636e\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u3002 \u901a\u8fc7pickle\u6a21\u5757\u7684\u5e8f\u5217\u5316\u64cd\u4f5c\u6211\u4eec\u80fd\u591f\u5c06\u7a0b\u5e8f\u4e2d\u8fd0\u884c\u7684\u5bf9\u8c61\u4fe1\u606f\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\u53bb\uff0c\u6c38\u4e45\u5b58\u50a8\uff1b \u901a\u8fc7pickle\u6a21\u5757\u7684\u53cd\u5e8f\u5217\u5316\u64cd\u4f5c\uff0c\u6211\u4eec\u80fd\u591f\u4ece\u6587\u4ef6\u4e2d\u521b\u5efa\u4e0a\u4e00\u6b21\u7a0b\u5e8f\u4fdd\u5b58\u7684\u5bf9\u8c61\u3002 \u5e8f\u5217\u5316\u8fc7\u7a0b\u5c06\u6587\u672c\u4fe1\u606f\u8f6c\u53d8\u4e3a\u4e8c\u8fdb\u5236\u6570\u636e\u6d41\u3002\u8fd9\u6837\u5c31\u4fe1\u606f\u5c31\u5bb9\u6613\u5b58\u50a8\u5728\u786c\u76d8\u4e4b\u4e2d\uff0c\u5f53\u9700\u8981\u8bfb\u53d6\u6587\u4ef6\u7684\u65f6\u5019\uff0c\u4ece\u786c\u76d8\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u7136\u540e\u518d\u5c06\u5176\u53cd\u5e8f\u5217\u5316\u4fbf\u53ef\u4ee5\u5f97\u5230\u539f\u59cb\u7684\u6570\u636e\u3002 \u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u56fe\u793a\uff1a pickle \u548c json \u7684\u533a\u522b \u00b6 pickle \u548c json \u90fd\u63d0\u4f9b\u4e86\u5e8f\u5217\u5316\uff08dump, dumps\uff09,\u53cd\u5e8f\u5217\u5316\uff08load, loads\uff09\u56db\u4e2a\u65b9\u6cd5 json\uff1a\u7528\u4e8e\u5b57\u7b26\u4e32\u548cPython\u6570\u636e\u7c7b\u578b\u95f4\u8fdb\u884c\u8f6c\u6362,\u53ea\u80fd\u652f\u6301int\\str\\list\\tuple\\dict pickle: \u7528\u4e8epython\u7684\u6570\u636e\u7c7b\u578b\u95f4\u8fdb\u884c\u8f6c\u6362 json\u662f\u53ef\u4ee5\u5728\u4e0d\u540c\u8bed\u8a00\u4e4b\u95f4\u4ea4\u6362\u6570\u636e\u7684\uff0c\u800cpickle\u53ea\u5728python\u4e4b\u95f4\u4f7f\u7528\u3002 json\u53ea\u80fd\u5e8f\u5217\u5316\u6700\u57fa\u672c\u7684\u6570\u636e\u7c7b\u578b\uff0c\u800cpickle\u53ef\u4ee5\u5e8f\u5217\u5316\u6240\u6709\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5305\u62ec\u7c7b\uff0c\u51fd\u6570\u90fd\u53ef\u4ee5\u5e8f\u5217\u5316\u3002 pickle\u4e2ddump\u548cload\u7684\u4f7f\u7528 \u00b6 dump() # \u5e8f\u5217\u5316\u5bf9\u8c61\uff0c\u5e76\u5c06\u7ed3\u679c\u6570\u636e\u6d41\u5199\u5165\u5230\u6587\u4ef6\u5bf9\u8c61\u4e2d\u3002 pickle . dump ( obj , file , protocol = None , * , fix_imports = True ) # \u53c2\u6570\u8bf4\u660e\uff1a \u53c2\u6570obj\u8868\u793a\u5c06\u8981\u5c01\u88c5\u7684\u5bf9\u8c61 \u53c2\u6570file\u8868\u793aobj\u8981\u5199\u5165\u7684\u6587\u4ef6\u5bf9\u8c61 \uff0c file\u5fc5\u987b\u4ee5\u4e8c\u8fdb\u5236\u53ef\u5199\u6a21\u5f0f\u6253\u5f00 \uff0c \u5373 \u201c wb \u201d \u53c2\u6570protocol\u662f\u5e8f\u5217\u5316\u6a21\u5f0f \uff0c \u9ed8\u8ba4\u503c\u4e3a0 \uff0c \u8868\u793a\u4ee5\u6587\u672c\u7684\u5f62\u5f0f\u5e8f\u5217\u5316 \u3002 # demo # dump \u5c06\u6570\u636e\u901a\u8fc7\u7279\u6b8a\u7684\u5f62\u5f0f\u8f6c\u6362\u4e3a\u53ea\u6709python\u8bed\u8a00\u8ba4\u8bc6\u7684\u5b57\u7b26\u4e32\uff0c\u5e76\u5199\u5165\u6587\u4ef6 with open ( 'D:/tmp.pk' , 'w' ) as f : pickle . dump ( data , f ) load() # \u53cd\u5e8f\u5217\u5316\u5bf9\u8c61\u3002\u5c06\u6587\u4ef6\u4e2d\u7684\u6570\u636e\u89e3\u6790\u4e3a\u4e00\u4e2aPython\u5bf9\u8c61\u3002 pickle . load ( file , * , fix_imports = True , encoding = \u201d ASCII \u201d . errors = \u201d strict \u201d ) # \u53c2\u6570\u8bf4\u660e\uff1a \u53c2\u6570file\u8868\u793aobj\u8981\u5199\u5165\u7684\u6587\u4ef6\u5bf9\u8c61 \uff0c file\u5fc5\u987b\u4ee5\u4e8c\u8fdb\u5236\u53ef\u5199\u6a21\u5f0f\u6253\u5f00 \uff0c \u5373 \u201c wb \u201d # demo with open ( 'D:/tmp.pk' , 'r' ) as f : data = pickle . load ( f ) pickle\u4e2ddumps\u548cloads\u7684\u4f7f\u7528 \u00b6 dumps() # \u6b64\u65b9\u6cd5\u4e0d\u9700\u8981\u5199\u5165\u6587\u4ef6\u4e2d\uff0c\u5b83\u662f\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a\u5e8f\u5217\u5316\u7684bytes\u5bf9\u8c61\u3002 pickle . dumps ( obj , protocol = None , * , fix_imports = True ) # demo import pickle data = [ 'aa' , 'bb' , 'cc' ] # dumps \u5c06\u6570\u636e\u901a\u8fc7\u7279\u6b8a\u7684\u5f62\u5f0f\u8f6c\u6362\u4e3a\u53ea\u6709python\u8bed\u8a00\u8ba4\u8bc6\u7684\u5b57\u7b26\u4e32 p_str = pickle . dumps ( data ) print ( p_str ) b ' \\x80\\x03 ]q \\x00 (X \\x02\\x00\\x00\\x00 aaq \\x01 X \\x02\\x00\\x00\\x00 bbq \\x02 X \\x02\\x00\\x00\\x00 ccq \\x03 e. loads() # \u6b64\u65b9\u6cd5\u662f\u76f4\u63a5\u4ecebytes\u5bf9\u8c61\u4e2d\u8bfb\u53d6\u5e8f\u5217\u5316\u7684\u4fe1\u606f\uff0c\u800c\u975e\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u3002 pickle . loads ( bytes_object , * , fix_imports = True , encoding = \u201d ASCII \u201d . errors = \u201d strict \u201d ) # demo mes = pickle . loads ( p_str ) print ( mes ) [ 'aa' , 'bb' , 'cc' ] dumps/loads\u548cdump/load\u7684\u533a\u522b \u00b6 dumps/loads\u4e0d\u9700\u8981\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\uff0c dump/load\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6 pickle\u5f02\u5e38\u6a21\u5757 \u00b6 pickle\u6a21\u5757\u53ef\u80fd\u51fa\u73b0\u4e09\u79cd\u5f02\u5e38\uff1a 1. PickleError\uff1a\u5c01\u88c5\u548c\u62c6\u5c01\u65f6\u51fa\u73b0\u7684\u5f02\u5e38\u7c7b\uff0c\u7ee7\u627f\u81eaException 2. PicklingError: \u9047\u5230\u4e0d\u53ef\u5c01\u88c5\u7684\u5bf9\u8c61\u65f6\u51fa\u73b0\u7684\u5f02\u5e38\uff0c\u7ee7\u627f\u81eaPickleError 3. UnPicklingError: \u62c6\u5c01\u5bf9\u8c61\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u7684\u5f02\u5e38\uff0c\u7ee7\u627f\u81eaPickleError \u6ce8\u610f\uff1a \u00b6 pickle \u53ea\u80fd\u5728python\u4e2d\u7528python\u6587\u4ef6\u95f4\u5e8f\u5217\u5316\uff0c\u5b9e\u73b0\u4e86\u4e24\u4e2apython \u5185\u5b58\u6570\u636e\u7684\u4ea4\u4e92\uff08\u53ef\u5e8f\u5217\u5316\u4efb\u4f55\u5bf9\u8c61\uff08\u7c7b\uff0c\u5217\u8868\uff09\uff09 json \u5728\u4efb\u4f55\u8f6f\u4ef6\u95f4\u53ef\u4ee5\u5728\u5185\u5b58\u6570\u636e\u4e4b\u95f4\u7684\u4ea4\u4e92\uff0c\u53ea\u80fd\u5e8f\u5217\u5316\u5e38\u89c4\u7684\u5bf9\u8c61\uff08\u5217\u8868 \uff0c\u5b57\u5178\u7b49\uff09","title":"Pickle\u7684\u4f7f\u7528"},{"location":"pyNotes/%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/Pickle%E7%9A%84%E4%BD%BF%E7%94%A8/#pickle","text":"","title":"pickle\u6a21\u5757"},{"location":"pyNotes/%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/Pickle%E7%9A%84%E4%BD%BF%E7%94%A8/#pickle_1","text":"pickle\u662fpython\u8bed\u8a00\u7684\u4e00\u4e2a\u6807\u51c6\u6a21\u5757\uff0c\u5b89\u88c5python\u540e\u5df2\u5305\u542bpickle\u5e93\uff0c\u4e0d\u9700\u8981\u5355\u72ec\u518d\u5b89\u88c5\u3002 pickle\u6a21\u5757\u5b9e\u73b0\u4e86\u57fa\u672c\u7684\u6570\u636e\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u3002 \u901a\u8fc7pickle\u6a21\u5757\u7684\u5e8f\u5217\u5316\u64cd\u4f5c\u6211\u4eec\u80fd\u591f\u5c06\u7a0b\u5e8f\u4e2d\u8fd0\u884c\u7684\u5bf9\u8c61\u4fe1\u606f\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\u53bb\uff0c\u6c38\u4e45\u5b58\u50a8\uff1b \u901a\u8fc7pickle\u6a21\u5757\u7684\u53cd\u5e8f\u5217\u5316\u64cd\u4f5c\uff0c\u6211\u4eec\u80fd\u591f\u4ece\u6587\u4ef6\u4e2d\u521b\u5efa\u4e0a\u4e00\u6b21\u7a0b\u5e8f\u4fdd\u5b58\u7684\u5bf9\u8c61\u3002 \u5e8f\u5217\u5316\u8fc7\u7a0b\u5c06\u6587\u672c\u4fe1\u606f\u8f6c\u53d8\u4e3a\u4e8c\u8fdb\u5236\u6570\u636e\u6d41\u3002\u8fd9\u6837\u5c31\u4fe1\u606f\u5c31\u5bb9\u6613\u5b58\u50a8\u5728\u786c\u76d8\u4e4b\u4e2d\uff0c\u5f53\u9700\u8981\u8bfb\u53d6\u6587\u4ef6\u7684\u65f6\u5019\uff0c\u4ece\u786c\u76d8\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u7136\u540e\u518d\u5c06\u5176\u53cd\u5e8f\u5217\u5316\u4fbf\u53ef\u4ee5\u5f97\u5230\u539f\u59cb\u7684\u6570\u636e\u3002 \u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u56fe\u793a\uff1a","title":"pickle\u7b80\u4ecb\uff1a"},{"location":"pyNotes/%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/Pickle%E7%9A%84%E4%BD%BF%E7%94%A8/#pickle-json","text":"pickle \u548c json \u90fd\u63d0\u4f9b\u4e86\u5e8f\u5217\u5316\uff08dump, dumps\uff09,\u53cd\u5e8f\u5217\u5316\uff08load, loads\uff09\u56db\u4e2a\u65b9\u6cd5 json\uff1a\u7528\u4e8e\u5b57\u7b26\u4e32\u548cPython\u6570\u636e\u7c7b\u578b\u95f4\u8fdb\u884c\u8f6c\u6362,\u53ea\u80fd\u652f\u6301int\\str\\list\\tuple\\dict pickle: \u7528\u4e8epython\u7684\u6570\u636e\u7c7b\u578b\u95f4\u8fdb\u884c\u8f6c\u6362 json\u662f\u53ef\u4ee5\u5728\u4e0d\u540c\u8bed\u8a00\u4e4b\u95f4\u4ea4\u6362\u6570\u636e\u7684\uff0c\u800cpickle\u53ea\u5728python\u4e4b\u95f4\u4f7f\u7528\u3002 json\u53ea\u80fd\u5e8f\u5217\u5316\u6700\u57fa\u672c\u7684\u6570\u636e\u7c7b\u578b\uff0c\u800cpickle\u53ef\u4ee5\u5e8f\u5217\u5316\u6240\u6709\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5305\u62ec\u7c7b\uff0c\u51fd\u6570\u90fd\u53ef\u4ee5\u5e8f\u5217\u5316\u3002","title":"pickle \u548c json \u7684\u533a\u522b"},{"location":"pyNotes/%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/Pickle%E7%9A%84%E4%BD%BF%E7%94%A8/#pickledumpload","text":"dump() # \u5e8f\u5217\u5316\u5bf9\u8c61\uff0c\u5e76\u5c06\u7ed3\u679c\u6570\u636e\u6d41\u5199\u5165\u5230\u6587\u4ef6\u5bf9\u8c61\u4e2d\u3002 pickle . dump ( obj , file , protocol = None , * , fix_imports = True ) # \u53c2\u6570\u8bf4\u660e\uff1a \u53c2\u6570obj\u8868\u793a\u5c06\u8981\u5c01\u88c5\u7684\u5bf9\u8c61 \u53c2\u6570file\u8868\u793aobj\u8981\u5199\u5165\u7684\u6587\u4ef6\u5bf9\u8c61 \uff0c file\u5fc5\u987b\u4ee5\u4e8c\u8fdb\u5236\u53ef\u5199\u6a21\u5f0f\u6253\u5f00 \uff0c \u5373 \u201c wb \u201d \u53c2\u6570protocol\u662f\u5e8f\u5217\u5316\u6a21\u5f0f \uff0c \u9ed8\u8ba4\u503c\u4e3a0 \uff0c \u8868\u793a\u4ee5\u6587\u672c\u7684\u5f62\u5f0f\u5e8f\u5217\u5316 \u3002 # demo # dump \u5c06\u6570\u636e\u901a\u8fc7\u7279\u6b8a\u7684\u5f62\u5f0f\u8f6c\u6362\u4e3a\u53ea\u6709python\u8bed\u8a00\u8ba4\u8bc6\u7684\u5b57\u7b26\u4e32\uff0c\u5e76\u5199\u5165\u6587\u4ef6 with open ( 'D:/tmp.pk' , 'w' ) as f : pickle . dump ( data , f ) load() # \u53cd\u5e8f\u5217\u5316\u5bf9\u8c61\u3002\u5c06\u6587\u4ef6\u4e2d\u7684\u6570\u636e\u89e3\u6790\u4e3a\u4e00\u4e2aPython\u5bf9\u8c61\u3002 pickle . load ( file , * , fix_imports = True , encoding = \u201d ASCII \u201d . errors = \u201d strict \u201d ) # \u53c2\u6570\u8bf4\u660e\uff1a \u53c2\u6570file\u8868\u793aobj\u8981\u5199\u5165\u7684\u6587\u4ef6\u5bf9\u8c61 \uff0c file\u5fc5\u987b\u4ee5\u4e8c\u8fdb\u5236\u53ef\u5199\u6a21\u5f0f\u6253\u5f00 \uff0c \u5373 \u201c wb \u201d # demo with open ( 'D:/tmp.pk' , 'r' ) as f : data = pickle . load ( f )","title":"pickle\u4e2ddump\u548cload\u7684\u4f7f\u7528"},{"location":"pyNotes/%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/Pickle%E7%9A%84%E4%BD%BF%E7%94%A8/#pickledumpsloads","text":"dumps() # \u6b64\u65b9\u6cd5\u4e0d\u9700\u8981\u5199\u5165\u6587\u4ef6\u4e2d\uff0c\u5b83\u662f\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a\u5e8f\u5217\u5316\u7684bytes\u5bf9\u8c61\u3002 pickle . dumps ( obj , protocol = None , * , fix_imports = True ) # demo import pickle data = [ 'aa' , 'bb' , 'cc' ] # dumps \u5c06\u6570\u636e\u901a\u8fc7\u7279\u6b8a\u7684\u5f62\u5f0f\u8f6c\u6362\u4e3a\u53ea\u6709python\u8bed\u8a00\u8ba4\u8bc6\u7684\u5b57\u7b26\u4e32 p_str = pickle . dumps ( data ) print ( p_str ) b ' \\x80\\x03 ]q \\x00 (X \\x02\\x00\\x00\\x00 aaq \\x01 X \\x02\\x00\\x00\\x00 bbq \\x02 X \\x02\\x00\\x00\\x00 ccq \\x03 e. loads() # \u6b64\u65b9\u6cd5\u662f\u76f4\u63a5\u4ecebytes\u5bf9\u8c61\u4e2d\u8bfb\u53d6\u5e8f\u5217\u5316\u7684\u4fe1\u606f\uff0c\u800c\u975e\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u3002 pickle . loads ( bytes_object , * , fix_imports = True , encoding = \u201d ASCII \u201d . errors = \u201d strict \u201d ) # demo mes = pickle . loads ( p_str ) print ( mes ) [ 'aa' , 'bb' , 'cc' ]","title":"pickle\u4e2ddumps\u548cloads\u7684\u4f7f\u7528"},{"location":"pyNotes/%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/Pickle%E7%9A%84%E4%BD%BF%E7%94%A8/#dumpsloadsdumpload","text":"dumps/loads\u4e0d\u9700\u8981\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\uff0c dump/load\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6","title":"dumps/loads\u548cdump/load\u7684\u533a\u522b"},{"location":"pyNotes/%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/Pickle%E7%9A%84%E4%BD%BF%E7%94%A8/#pickle_2","text":"pickle\u6a21\u5757\u53ef\u80fd\u51fa\u73b0\u4e09\u79cd\u5f02\u5e38\uff1a 1. PickleError\uff1a\u5c01\u88c5\u548c\u62c6\u5c01\u65f6\u51fa\u73b0\u7684\u5f02\u5e38\u7c7b\uff0c\u7ee7\u627f\u81eaException 2. PicklingError: \u9047\u5230\u4e0d\u53ef\u5c01\u88c5\u7684\u5bf9\u8c61\u65f6\u51fa\u73b0\u7684\u5f02\u5e38\uff0c\u7ee7\u627f\u81eaPickleError 3. UnPicklingError: \u62c6\u5c01\u5bf9\u8c61\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u7684\u5f02\u5e38\uff0c\u7ee7\u627f\u81eaPickleError","title":"pickle\u5f02\u5e38\u6a21\u5757"},{"location":"pyNotes/%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/Pickle%E7%9A%84%E4%BD%BF%E7%94%A8/#_1","text":"pickle \u53ea\u80fd\u5728python\u4e2d\u7528python\u6587\u4ef6\u95f4\u5e8f\u5217\u5316\uff0c\u5b9e\u73b0\u4e86\u4e24\u4e2apython \u5185\u5b58\u6570\u636e\u7684\u4ea4\u4e92\uff08\u53ef\u5e8f\u5217\u5316\u4efb\u4f55\u5bf9\u8c61\uff08\u7c7b\uff0c\u5217\u8868\uff09\uff09 json \u5728\u4efb\u4f55\u8f6f\u4ef6\u95f4\u53ef\u4ee5\u5728\u5185\u5b58\u6570\u636e\u4e4b\u95f4\u7684\u4ea4\u4e92\uff0c\u53ea\u80fd\u5e8f\u5217\u5316\u5e38\u89c4\u7684\u5bf9\u8c61\uff08\u5217\u8868 \uff0c\u5b57\u5178\u7b49\uff09","title":"\u6ce8\u610f\uff1a"},{"location":"pyNotes/%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/select%E7%9A%84%E4%BD%BF%E7%94%A8/","text":"Select\u6a21\u5757 \u00b6 \u6807\u51c6\u5e93\u6587\u6863 \u00b6 \u6587\u6863\u8fde\u63a5 \u8bed\u6cd5 \u00b6 \u9ad8\u6548\u5730\u7b49\u5f85 I/O ,select \u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u7ec4\u8bbf\u95ee\u4e0d\u540c\u5e73\u53f0\u4e0b I/O \u76d1\u63a7\u51fd\u6570\u7684\u529f\u80fd\u3002 import select readable , writeable , exceptional = select . select ( inputs , outputs , exc , timeout ) # \u53c2\u6570\u8bf4\u660e\uff1a \u2460\uff1a \u524d\u4e09\u4e2a\u53c2\u6570\u90fd\u662f\u5217\u8868 \uff0c \u7b2c\u56db\u4e2a\u53c2\u6570\u662f\u8d85\u65f6\u65f6\u95f4 \uff0c \u5355\u4f4d\u4e3a\u79d2 \u2461\uff1a inputs : \u5217\u8868\u4e2d\u7684\u5bf9\u8c61\u7528\u4e8e\u68c0\u6d4b\u5373\u5c06\u8bfb\u53d6\u7684\u6570\u636e \u2462\uff1a outputs : \u5217\u8868\u5305\u542b\u7684\u5bf9\u8c61\u4f1a\u5728\u7f13\u5b58\u533a\u6709\u7a7a\u95f4\u7684\u65f6\u5019\u63a5\u6536\u4f20\u51fa\u7684\u6570\u636e \u2463\uff1a \u63a5\u6536\u5b83\u4eec\u6267\u884c\u671f\u95f4\u53d1\u751f\u7684\u9519\u8bef \uff08 \u901a\u5e38\u662f\u8f93\u5165\u548c\u8f93\u51fa\u5bf9\u8c61\u7684\u7ed3\u5408 \uff09 # \u8fd4\u56de\u503c\u8bf4\u660e\uff1a \u2460\uff1a \u8fd4\u56de\u4e09\u4e2a\u65b0\u7684\u5217\u8868 \uff0c \u5217\u8868\u7684\u5185\u5bb9\u662f\u4f20\u5165\u7684\u5217\u8868\u7684\u5185\u5bb9 \uff0c \u2461\uff1a readable\u5217\u8868\u91cc\u7684\u5957\u63a5\u5b57\u90fd\u6709\u6570\u636e\u7f13\u5b58\u5e76\u4e14\u90fd\u53ef\u8bfb \u2462\uff1a writeable\u5217\u8868\u7684\u5957\u63a5\u5b57\u7684\u7f13\u51b2\u533a\u90fd\u6709\u7a7a\u95f2\u7a7a\u95f4\u5e76\u90fd\u53ef\u5199 \u3002 \u2463\uff1a exceptional\u4e2d\u7684\u5957\u63a5\u5b57\u90fd\u53d1\u751f\u4e86\u9519\u8bef ( j\u5177\u4f53\u5f02\u5e38\u7684\u5b9a\u4e49\u53bb\u53d6\u51b3\u4e8e\u5e73\u53f0 ) \u2464\uff1a \u5f53\u5230\u4e86\u8d85\u65f6\u65f6\u95f4\u4ee5\u540e \uff0c select\u4f1a\u8fd4\u56de\u4e09\u4e2a\u7a7a\u5217\u8868 \u3002 \u5173\u4e8e\u53ef\u8bfb\u5957\u63a5\u5b57\u7684\u8bf4\u660e\uff08\u4e09\u79cd\u60c5\u51b5\uff09 \u00b6 \u5982\u679c\u8fd9\u4e2a\u5957\u63a5\u5b57\u662f\u4e3b\u670d\u52a1\u5668\u7684\u5957\u63a5\u5b57\uff0c\u4e00\u65b9\u9762\u7ee7\u7eed\u6765\u76d1\u542c\u8fde\u63a5\uff0c\u53e6\u5916\u4e00\u4e2a\u65b9\u9762\uff0c\u53ef\u8bfb\u8fd9\u4e2a\u6761\u4ef6\u8981\u8ba9\u4ed6\u51c6\u5907\u597d\u63a5\u6536\u5176\u4ed6\u8fde\u63a5\uff0c\u6ce8\u610f\uff1a\u9664\u4e86\u8981\u6dfb\u52a0\u65b0\u7684\u8fde\u63a5\u5230inputs\u4e2d\u76d1\u63a7\uff0c\u8fd8\u8981\u8bbe\u7f6e\u4e2a\u5ba2\u6237\u7aef\u5957\u63a5\u5b57\u4e3a\u975e\u963b\u585e\u72b6\u6001\uff08conn.setblocking(0) \uff09 \u53e6\u4e00\u79cd\u60c5\u51b5\u662f\u4e0e\u5df2\u7ecf\u53d1\u9001\u8fc7\u6570\u636e\u7684\u5ba2\u6237\u7aef\u5efa\u7acb\u8fde\u63a5\u3002\u7528recv()\u8bfb\u53d6\uff0c\u7136\u540e\u5c06\u5b83\u653e\u5230\u961f\u5217\u4e2d\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u901a\u8fc7\u8be5\u5957\u63a5\u5b57\u53d1\u9001\u51fa\u53bb\u7136\u540e\u8fd4\u56de\u5230\u5ba2\u6237\u7aef\u3002 \u5982\u679c\u662f\u4e00\u4e2a\u53ef\u8bfb\u7684\u5957\u63a5\u5b57\u4f46\u6ca1\u6709\u6570\u636e\uff0c\u5ba2\u6237\u7aef\u4e5f\u65ad\u5f00\u4e86\u8fde\u63a5\uff0c\u5c31\u8981\u51c6\u5907\u65ad\u5f00\u6d41\u3002 \u5173\u4e8e\u53ef\u5199\u5957\u63a5\u5b57\u7684\u8bf4\u660e \u00b6 \u5982\u679c\u6b64\u8fde\u63a5\u7684\u961f\u5217\u4e2d\u5b58\u5728\u6570\u636e\uff0c\u90a3\u6211\u4eec\u7684\u4e0b\u4e00\u4e2a\u6d88\u606f\u5c31\u662f\u8981\u628a\u5b83\u53d1\u9001\u51fa\u53bb\u3002\u5426\u5219\u8981\u628a\u8be5\u8fde\u63a5\u4ece\u8f93\u51fa\u5217\u8868\u4e2d\u79fb\u9664\uff0c\u8fd9\u6837\u4e0b\u4e00\u6b21\u5faa\u73af select() \u5c31\u4e0d\u4f1a\u6807\u8bb0\u8fd9\u4e2a\u5957\u63a5\u5b57\u4e3a\u8981\u53d1\u9001\u6570\u636e\u4e86\u3002 \u5e94\u7528demo \u00b6 def __write_data ( self , client_socket , client_addr ): while True : try : if SocketServerHelper . __exist_in_avail_client_address_list ( client_addr ): infds_c , outfds_c , eerrfds_c = select . select ([], [ client_socket , ], [], 1 ) if len ( outfds_c ) != 0 and self . get_write_data_list_by_addr is not None : data_models = self . get_write_data_list_by_addr ( client_addr ) if data_models is not None and len ( data_models ) > 0 : for data_model in data_models : # data = data_model.frame.pack_data() data = data_model . frame print ( data ) if data_model is not None and data is not None and len ( data ) > 0 : try : sent = client_socket . send ( data ) print ( sent ) if sent > 0 : self . event_dispatcher . dispatch_event ( SocketDataEvent ( SocketDataEvent . SentSuccessful , { 'srcAddress' : client_addr , 'data' : data_model })) continue self . event_dispatcher . dispatch_event ( SocketDataEvent ( SocketDataEvent . SentFailed ,{ 'srcAddress' : client_addr , 'data' : data_model })) except Exception as e : print ( e ) self . event_dispatcher . dispatch_event ( SocketDataEvent ( SocketDataEvent . SentFailed ,{ 'srcAddress' : client_addr , 'data' : data_model })) raise Exception ( 'Socket Data Sent Error' ) else : break try : time . sleep ( 1 ) except : pass except Exception as e : print ( e ) SocketServerHelper . __remove_from_avail_client_address_list ( client_socket , client_addr ) self . event_dispatcher . dispatch_event ( SocketDataEvent ( SocketDataEvent . Disconnected , { 'srcAddress' : client_addr })) break def __read_data ( self , client_socket , client_addr ): lasttime = datetime . datetime . now () leftbytes = [] while True : try : if SocketServerHelper . __exist_in_avail_client_address_list ( client_addr ): infds_c , outfds_c , eerrfds_c = select . select ([ client_socket , ], [], [], 1 ) if len ( infds_c ) != 0 : buf = client_socket . recv ( 4096 ) print_and_log ( \"\u63a5\u6536\u5230\u7684\u6570\u636e\u5305\u3010\u957f\u5ea6\u3011\u4e3a: %d \uff1b\u3010\u7c7b\u578b\u3011\u4e3a\uff1a %s \uff1b\u3010\u5185\u5bb9\u3011\u4e3a: %s \" % ( len ( buf ), type ( buf ), buf )) try : if buf is None or len ( buf ) == 0 : continue else : structs , payload , dataleft , lt = self . __read_complete ( buf , leftbytes , lasttime ) lasttime = lt leftbytes = dataleft if len ( structs ) > 0 : self . event_dispatcher . dispatch_event ( SocketDataEvent ( SocketDataEvent . Received , { 'srcAddress' : client_addr , 'data' : payload })) except Exception as e : leftbytes = [] lasttime = datetime . datetime . now () else : break except : SocketServerHelper . __remove_from_avail_client_address_list ( client_socket , client_addr ) self . event_dispatcher . dispatch_event ( SocketDataEvent ( SocketDataEvent . Disconnected , { 'srcAddress' : client_addr })) break","title":"Select\u7684\u4f7f\u7528"},{"location":"pyNotes/%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/select%E7%9A%84%E4%BD%BF%E7%94%A8/#select","text":"","title":"Select\u6a21\u5757"},{"location":"pyNotes/%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/select%E7%9A%84%E4%BD%BF%E7%94%A8/#_1","text":"\u6587\u6863\u8fde\u63a5","title":"\u6807\u51c6\u5e93\u6587\u6863"},{"location":"pyNotes/%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/select%E7%9A%84%E4%BD%BF%E7%94%A8/#_2","text":"\u9ad8\u6548\u5730\u7b49\u5f85 I/O ,select \u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u7ec4\u8bbf\u95ee\u4e0d\u540c\u5e73\u53f0\u4e0b I/O \u76d1\u63a7\u51fd\u6570\u7684\u529f\u80fd\u3002 import select readable , writeable , exceptional = select . select ( inputs , outputs , exc , timeout ) # \u53c2\u6570\u8bf4\u660e\uff1a \u2460\uff1a \u524d\u4e09\u4e2a\u53c2\u6570\u90fd\u662f\u5217\u8868 \uff0c \u7b2c\u56db\u4e2a\u53c2\u6570\u662f\u8d85\u65f6\u65f6\u95f4 \uff0c \u5355\u4f4d\u4e3a\u79d2 \u2461\uff1a inputs : \u5217\u8868\u4e2d\u7684\u5bf9\u8c61\u7528\u4e8e\u68c0\u6d4b\u5373\u5c06\u8bfb\u53d6\u7684\u6570\u636e \u2462\uff1a outputs : \u5217\u8868\u5305\u542b\u7684\u5bf9\u8c61\u4f1a\u5728\u7f13\u5b58\u533a\u6709\u7a7a\u95f4\u7684\u65f6\u5019\u63a5\u6536\u4f20\u51fa\u7684\u6570\u636e \u2463\uff1a \u63a5\u6536\u5b83\u4eec\u6267\u884c\u671f\u95f4\u53d1\u751f\u7684\u9519\u8bef \uff08 \u901a\u5e38\u662f\u8f93\u5165\u548c\u8f93\u51fa\u5bf9\u8c61\u7684\u7ed3\u5408 \uff09 # \u8fd4\u56de\u503c\u8bf4\u660e\uff1a \u2460\uff1a \u8fd4\u56de\u4e09\u4e2a\u65b0\u7684\u5217\u8868 \uff0c \u5217\u8868\u7684\u5185\u5bb9\u662f\u4f20\u5165\u7684\u5217\u8868\u7684\u5185\u5bb9 \uff0c \u2461\uff1a readable\u5217\u8868\u91cc\u7684\u5957\u63a5\u5b57\u90fd\u6709\u6570\u636e\u7f13\u5b58\u5e76\u4e14\u90fd\u53ef\u8bfb \u2462\uff1a writeable\u5217\u8868\u7684\u5957\u63a5\u5b57\u7684\u7f13\u51b2\u533a\u90fd\u6709\u7a7a\u95f2\u7a7a\u95f4\u5e76\u90fd\u53ef\u5199 \u3002 \u2463\uff1a exceptional\u4e2d\u7684\u5957\u63a5\u5b57\u90fd\u53d1\u751f\u4e86\u9519\u8bef ( j\u5177\u4f53\u5f02\u5e38\u7684\u5b9a\u4e49\u53bb\u53d6\u51b3\u4e8e\u5e73\u53f0 ) \u2464\uff1a \u5f53\u5230\u4e86\u8d85\u65f6\u65f6\u95f4\u4ee5\u540e \uff0c select\u4f1a\u8fd4\u56de\u4e09\u4e2a\u7a7a\u5217\u8868 \u3002","title":"\u8bed\u6cd5"},{"location":"pyNotes/%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/select%E7%9A%84%E4%BD%BF%E7%94%A8/#_3","text":"\u5982\u679c\u8fd9\u4e2a\u5957\u63a5\u5b57\u662f\u4e3b\u670d\u52a1\u5668\u7684\u5957\u63a5\u5b57\uff0c\u4e00\u65b9\u9762\u7ee7\u7eed\u6765\u76d1\u542c\u8fde\u63a5\uff0c\u53e6\u5916\u4e00\u4e2a\u65b9\u9762\uff0c\u53ef\u8bfb\u8fd9\u4e2a\u6761\u4ef6\u8981\u8ba9\u4ed6\u51c6\u5907\u597d\u63a5\u6536\u5176\u4ed6\u8fde\u63a5\uff0c\u6ce8\u610f\uff1a\u9664\u4e86\u8981\u6dfb\u52a0\u65b0\u7684\u8fde\u63a5\u5230inputs\u4e2d\u76d1\u63a7\uff0c\u8fd8\u8981\u8bbe\u7f6e\u4e2a\u5ba2\u6237\u7aef\u5957\u63a5\u5b57\u4e3a\u975e\u963b\u585e\u72b6\u6001\uff08conn.setblocking(0) \uff09 \u53e6\u4e00\u79cd\u60c5\u51b5\u662f\u4e0e\u5df2\u7ecf\u53d1\u9001\u8fc7\u6570\u636e\u7684\u5ba2\u6237\u7aef\u5efa\u7acb\u8fde\u63a5\u3002\u7528recv()\u8bfb\u53d6\uff0c\u7136\u540e\u5c06\u5b83\u653e\u5230\u961f\u5217\u4e2d\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u901a\u8fc7\u8be5\u5957\u63a5\u5b57\u53d1\u9001\u51fa\u53bb\u7136\u540e\u8fd4\u56de\u5230\u5ba2\u6237\u7aef\u3002 \u5982\u679c\u662f\u4e00\u4e2a\u53ef\u8bfb\u7684\u5957\u63a5\u5b57\u4f46\u6ca1\u6709\u6570\u636e\uff0c\u5ba2\u6237\u7aef\u4e5f\u65ad\u5f00\u4e86\u8fde\u63a5\uff0c\u5c31\u8981\u51c6\u5907\u65ad\u5f00\u6d41\u3002","title":"\u5173\u4e8e\u53ef\u8bfb\u5957\u63a5\u5b57\u7684\u8bf4\u660e\uff08\u4e09\u79cd\u60c5\u51b5\uff09"},{"location":"pyNotes/%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/select%E7%9A%84%E4%BD%BF%E7%94%A8/#_4","text":"\u5982\u679c\u6b64\u8fde\u63a5\u7684\u961f\u5217\u4e2d\u5b58\u5728\u6570\u636e\uff0c\u90a3\u6211\u4eec\u7684\u4e0b\u4e00\u4e2a\u6d88\u606f\u5c31\u662f\u8981\u628a\u5b83\u53d1\u9001\u51fa\u53bb\u3002\u5426\u5219\u8981\u628a\u8be5\u8fde\u63a5\u4ece\u8f93\u51fa\u5217\u8868\u4e2d\u79fb\u9664\uff0c\u8fd9\u6837\u4e0b\u4e00\u6b21\u5faa\u73af select() \u5c31\u4e0d\u4f1a\u6807\u8bb0\u8fd9\u4e2a\u5957\u63a5\u5b57\u4e3a\u8981\u53d1\u9001\u6570\u636e\u4e86\u3002","title":"\u5173\u4e8e\u53ef\u5199\u5957\u63a5\u5b57\u7684\u8bf4\u660e"},{"location":"pyNotes/%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/select%E7%9A%84%E4%BD%BF%E7%94%A8/#demo","text":"def __write_data ( self , client_socket , client_addr ): while True : try : if SocketServerHelper . __exist_in_avail_client_address_list ( client_addr ): infds_c , outfds_c , eerrfds_c = select . select ([], [ client_socket , ], [], 1 ) if len ( outfds_c ) != 0 and self . get_write_data_list_by_addr is not None : data_models = self . get_write_data_list_by_addr ( client_addr ) if data_models is not None and len ( data_models ) > 0 : for data_model in data_models : # data = data_model.frame.pack_data() data = data_model . frame print ( data ) if data_model is not None and data is not None and len ( data ) > 0 : try : sent = client_socket . send ( data ) print ( sent ) if sent > 0 : self . event_dispatcher . dispatch_event ( SocketDataEvent ( SocketDataEvent . SentSuccessful , { 'srcAddress' : client_addr , 'data' : data_model })) continue self . event_dispatcher . dispatch_event ( SocketDataEvent ( SocketDataEvent . SentFailed ,{ 'srcAddress' : client_addr , 'data' : data_model })) except Exception as e : print ( e ) self . event_dispatcher . dispatch_event ( SocketDataEvent ( SocketDataEvent . SentFailed ,{ 'srcAddress' : client_addr , 'data' : data_model })) raise Exception ( 'Socket Data Sent Error' ) else : break try : time . sleep ( 1 ) except : pass except Exception as e : print ( e ) SocketServerHelper . __remove_from_avail_client_address_list ( client_socket , client_addr ) self . event_dispatcher . dispatch_event ( SocketDataEvent ( SocketDataEvent . Disconnected , { 'srcAddress' : client_addr })) break def __read_data ( self , client_socket , client_addr ): lasttime = datetime . datetime . now () leftbytes = [] while True : try : if SocketServerHelper . __exist_in_avail_client_address_list ( client_addr ): infds_c , outfds_c , eerrfds_c = select . select ([ client_socket , ], [], [], 1 ) if len ( infds_c ) != 0 : buf = client_socket . recv ( 4096 ) print_and_log ( \"\u63a5\u6536\u5230\u7684\u6570\u636e\u5305\u3010\u957f\u5ea6\u3011\u4e3a: %d \uff1b\u3010\u7c7b\u578b\u3011\u4e3a\uff1a %s \uff1b\u3010\u5185\u5bb9\u3011\u4e3a: %s \" % ( len ( buf ), type ( buf ), buf )) try : if buf is None or len ( buf ) == 0 : continue else : structs , payload , dataleft , lt = self . __read_complete ( buf , leftbytes , lasttime ) lasttime = lt leftbytes = dataleft if len ( structs ) > 0 : self . event_dispatcher . dispatch_event ( SocketDataEvent ( SocketDataEvent . Received , { 'srcAddress' : client_addr , 'data' : payload })) except Exception as e : leftbytes = [] lasttime = datetime . datetime . now () else : break except : SocketServerHelper . __remove_from_avail_client_address_list ( client_socket , client_addr ) self . event_dispatcher . dispatch_event ( SocketDataEvent ( SocketDataEvent . Disconnected , { 'srcAddress' : client_addr })) break","title":"\u5e94\u7528demo"}]}